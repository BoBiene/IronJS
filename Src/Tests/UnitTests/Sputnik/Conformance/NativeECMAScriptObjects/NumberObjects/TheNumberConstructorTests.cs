// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.NumberObjects
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class TheNumberConstructorTests : SputnikTestFixture
    {
        public TheNumberConstructorTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.7_Number_Objects\15.7.2_The_Number_Constructor")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.2.1")]
        [Description("When Number is called as part of a new expression it is a constructor: it initialises the newly created object")]
        public void S15_7_2_1_A1()
        {
            RunFile(@"S15.7.2.1_A1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.2.1")]
        [Description("The [[Prototype]] property of the newly constructed object is set to the original Number prototype object, the one that is the initial value of Number.prototype")]
        public void S15_7_2_1_A2()
        {
            RunFile(@"S15.7.2.1_A2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.2.1")]
        [Description("The [[Value]] property of the newly constructed object is set to ToNumber(value) if value was supplied, else to +0")]
        public void S15_7_2_1_A3()
        {
            RunFile(@"S15.7.2.1_A3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.2.1")]
        [Description("The [[Class]] property of the newly constructed object is set to \"Number\"")]
        public void S15_7_2_1_A4()
        {
            RunFile(@"S15.7.2.1_A4.js");
        }
    }
}