// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.RegExpObjects.PatternSemantics
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class AtomTests : SputnikTestFixture
    {
        public AtomTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.10_RegExp_Objects\15.10.2_Pattern_Semantics\15.10.2.8_Atom")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The form (?= Disjunction ) specifies a zero-width positive lookahead. In order for it to succeed, the pattern inside Disjunction must match at the current position, but the current position is not advanced before matching the sequel. If Disjunction can match at the current position in several ways, only the first one is tried")]
        public void S15_10_2_8_A1_T1()
        {
            RunFile(@"S15.10.2.8_A1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The form (?= Disjunction ) specifies a zero-width positive lookahead. In order for it to succeed, the pattern inside Disjunction must match at the current position, but the current position is not advanced before matching the sequel. If Disjunction can match at the current position in several ways, only the first one is tried")]
        public void S15_10_2_8_A1_T2()
        {
            RunFile(@"S15.10.2.8_A1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The form (?= Disjunction ) specifies a zero-width positive lookahead. In order for it to succeed, the pattern inside Disjunction must match at the current position, but the current position is not advanced before matching the sequel. If Disjunction can match at the current position in several ways, only the first one is tried")]
        public void S15_10_2_8_A1_T3()
        {
            RunFile(@"S15.10.2.8_A1_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The form (?= Disjunction ) specifies a zero-width positive lookahead. In order for it to succeed, the pattern inside Disjunction must match at the current position, but the current position is not advanced before matching the sequel. If Disjunction can match at the current position in several ways, only the first one is tried")]
        public void S15_10_2_8_A1_T4()
        {
            RunFile(@"S15.10.2.8_A1_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The form (?= Disjunction ) specifies a zero-width positive lookahead. In order for it to succeed, the pattern inside Disjunction must match at the current position, but the current position is not advanced before matching the sequel. If Disjunction can match at the current position in several ways, only the first one is tried")]
        public void S15_10_2_8_A1_T5()
        {
            RunFile(@"S15.10.2.8_A1_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The form (?! Disjunction ) specifies a zero-width negative lookahead. In order for it to succeed, the pattern inside Disjunction must fail to match at the current position. The current position is not advanced before matching the sequel")]
        public void S15_10_2_8_A2_T1()
        {
            RunFile(@"S15.10.2.8_A2_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The form (?! Disjunction ) specifies a zero-width negative lookahead. In order for it to succeed, the pattern inside Disjunction must fail to match at the current position. The current position is not advanced before matching the sequel")]
        public void S15_10_2_8_A2_T10()
        {
            RunFile(@"S15.10.2.8_A2_T10.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The form (?! Disjunction ) specifies a zero-width negative lookahead. In order for it to succeed, the pattern inside Disjunction must fail to match at the current position. The current position is not advanced before matching the sequel")]
        public void S15_10_2_8_A2_T11()
        {
            RunFile(@"S15.10.2.8_A2_T11.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The form (?! Disjunction ) specifies a zero-width negative lookahead. In order for it to succeed, the pattern inside Disjunction must fail to match at the current position. The current position is not advanced before matching the sequel")]
        public void S15_10_2_8_A2_T2()
        {
            RunFile(@"S15.10.2.8_A2_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The form (?! Disjunction ) specifies a zero-width negative lookahead. In order for it to succeed, the pattern inside Disjunction must fail to match at the current position. The current position is not advanced before matching the sequel")]
        public void S15_10_2_8_A2_T3()
        {
            RunFile(@"S15.10.2.8_A2_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The form (?! Disjunction ) specifies a zero-width negative lookahead. In order for it to succeed, the pattern inside Disjunction must fail to match at the current position. The current position is not advanced before matching the sequel")]
        public void S15_10_2_8_A2_T4()
        {
            RunFile(@"S15.10.2.8_A2_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The form (?! Disjunction ) specifies a zero-width negative lookahead. In order for it to succeed, the pattern inside Disjunction must fail to match at the current position. The current position is not advanced before matching the sequel")]
        public void S15_10_2_8_A2_T5()
        {
            RunFile(@"S15.10.2.8_A2_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The form (?! Disjunction ) specifies a zero-width negative lookahead. In order for it to succeed, the pattern inside Disjunction must fail to match at the current position. The current position is not advanced before matching the sequel")]
        public void S15_10_2_8_A2_T6()
        {
            RunFile(@"S15.10.2.8_A2_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The form (?! Disjunction ) specifies a zero-width negative lookahead. In order for it to succeed, the pattern inside Disjunction must fail to match at the current position. The current position is not advanced before matching the sequel")]
        public void S15_10_2_8_A2_T7()
        {
            RunFile(@"S15.10.2.8_A2_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The form (?! Disjunction ) specifies a zero-width negative lookahead. In order for it to succeed, the pattern inside Disjunction must fail to match at the current position. The current position is not advanced before matching the sequel")]
        public void S15_10_2_8_A2_T8()
        {
            RunFile(@"S15.10.2.8_A2_T8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The form (?! Disjunction ) specifies a zero-width negative lookahead. In order for it to succeed, the pattern inside Disjunction must fail to match at the current position. The current position is not advanced before matching the sequel")]
        public void S15_10_2_8_A2_T9()
        {
            RunFile(@"S15.10.2.8_A2_T9.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T1()
        {
            RunFile(@"S15.10.2.8_A3_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T10()
        {
            RunFile(@"S15.10.2.8_A3_T10.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T11()
        {
            RunFile(@"S15.10.2.8_A3_T11.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T12()
        {
            RunFile(@"S15.10.2.8_A3_T12.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T13()
        {
            RunFile(@"S15.10.2.8_A3_T13.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T14()
        {
            RunFile(@"S15.10.2.8_A3_T14.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T15()
        {
            RunFile(@"S15.10.2.8_A3_T15.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T16()
        {
            RunFile(@"S15.10.2.8_A3_T16.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T17()
        {
            RunFile(@"S15.10.2.8_A3_T17.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T18()
        {
            RunFile(@"S15.10.2.8_A3_T18.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T19()
        {
            RunFile(@"S15.10.2.8_A3_T19.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T2()
        {
            RunFile(@"S15.10.2.8_A3_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T20()
        {
            RunFile(@"S15.10.2.8_A3_T20.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T21()
        {
            RunFile(@"S15.10.2.8_A3_T21.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T22()
        {
            RunFile(@"S15.10.2.8_A3_T22.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T23()
        {
            RunFile(@"S15.10.2.8_A3_T23.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T24()
        {
            RunFile(@"S15.10.2.8_A3_T24.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T25()
        {
            RunFile(@"S15.10.2.8_A3_T25.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T26()
        {
            RunFile(@"S15.10.2.8_A3_T26.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T27()
        {
            RunFile(@"S15.10.2.8_A3_T27.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T28()
        {
            RunFile(@"S15.10.2.8_A3_T28.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T29()
        {
            RunFile(@"S15.10.2.8_A3_T29.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T3()
        {
            RunFile(@"S15.10.2.8_A3_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T30()
        {
            RunFile(@"S15.10.2.8_A3_T30.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T31()
        {
            RunFile(@"S15.10.2.8_A3_T31.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T32()
        {
            RunFile(@"S15.10.2.8_A3_T32.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T33()
        {
            RunFile(@"S15.10.2.8_A3_T33.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T4()
        {
            RunFile(@"S15.10.2.8_A3_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T5()
        {
            RunFile(@"S15.10.2.8_A3_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T6()
        {
            RunFile(@"S15.10.2.8_A3_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T7()
        {
            RunFile(@"S15.10.2.8_A3_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T8()
        {
            RunFile(@"S15.10.2.8_A3_T8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("Parentheses of the form ( Disjunction ) serve both to group the components of the Disjunction pattern together and to save the result of the match. The result can be used either in a backreference (\\ followed by a nonzero decimal number), referenced in a replace string, or returned as part of an array from the regular expression matching function")]
        public void S15_10_2_8_A3_T9()
        {
            RunFile(@"S15.10.2.8_A3_T9.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The production Atom :: . evaluates as follows: i) Let A be the set of all characters except the four line terminator characters <LF>, <CR>, <LS>, or <PS> ii) Call CharacterSetMatcher(A, false) and return its Matcher result")]
        public void S15_10_2_8_A4_T1()
        {
            RunFile(@"S15.10.2.8_A4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The production Atom :: . evaluates as follows: i) Let A be the set of all characters except the four line terminator characters <LF>, <CR>, <LS>, or <PS> ii) Call CharacterSetMatcher(A, false) and return its Matcher result")]
        public void S15_10_2_8_A4_T2()
        {
            RunFile(@"S15.10.2.8_A4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The production Atom :: . evaluates as follows: i) Let A be the set of all characters except the four line terminator characters <LF>, <CR>, <LS>, or <PS> ii) Call CharacterSetMatcher(A, false) and return its Matcher result")]
        public void S15_10_2_8_A4_T3()
        {
            RunFile(@"S15.10.2.8_A4_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The production Atom :: . evaluates as follows: i) Let A be the set of all characters except the four line terminator characters <LF>, <CR>, <LS>, or <PS> ii) Call CharacterSetMatcher(A, false) and return its Matcher result")]
        public void S15_10_2_8_A4_T4()
        {
            RunFile(@"S15.10.2.8_A4_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The production Atom :: . evaluates as follows: i) Let A be the set of all characters except the four line terminator characters <LF>, <CR>, <LS>, or <PS> ii) Call CharacterSetMatcher(A, false) and return its Matcher result")]
        public void S15_10_2_8_A4_T5()
        {
            RunFile(@"S15.10.2.8_A4_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The production Atom :: . evaluates as follows: i) Let A be the set of all characters except the four line terminator characters <LF>, <CR>, <LS>, or <PS> ii) Call CharacterSetMatcher(A, false) and return its Matcher result")]
        public void S15_10_2_8_A4_T6()
        {
            RunFile(@"S15.10.2.8_A4_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The production Atom :: . evaluates as follows: i) Let A be the set of all characters except the four line terminator characters <LF>, <CR>, <LS>, or <PS> ii) Call CharacterSetMatcher(A, false) and return its Matcher result")]
        public void S15_10_2_8_A4_T7()
        {
            RunFile(@"S15.10.2.8_A4_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The production Atom :: . evaluates as follows: i) Let A be the set of all characters except the four line terminator characters <LF>, <CR>, <LS>, or <PS> ii) Call CharacterSetMatcher(A, false) and return its Matcher result")]
        public void S15_10_2_8_A4_T8()
        {
            RunFile(@"S15.10.2.8_A4_T8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("The production Atom :: . evaluates as follows: i) Let A be the set of all characters except the four line terminator characters <LF>, <CR>, <LS>, or <PS> ii) Call CharacterSetMatcher(A, false) and return its Matcher result")]
        public void S15_10_2_8_A4_T9()
        {
            RunFile(@"S15.10.2.8_A4_T9.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("In case-insignificant matches all characters are implicitly converted to upper case immediately before they are compared")]
        public void S15_10_2_8_A5_T1()
        {
            RunFile(@"S15.10.2.8_A5_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.8")]
        [Description("In case-insignificant matches all characters are implicitly converted to upper case immediately before they are compared")]
        public void S15_10_2_8_A5_T2()
        {
            RunFile(@"S15.10.2.8_A5_T2.js");
        }
    }
}