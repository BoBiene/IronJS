// <auto-generated />
namespace IronJS.Tests.UnitTests.IE9.chapter12._12_6
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class _12_6_3_Tests : IE9TestFixture
    {
        public _12_6_3_Tests() : base(@"chapter12\12.6\12.6.3") { }

        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is an Object with value false")] public void _12_6_3_2__3__a__ii__1() { RunFile(@"12.6.3_2-3-a-ii-1.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a String object (value is \'1\')")] public void _12_6_3_2__3__a__ii__10() { RunFile(@"12.6.3_2-3-a-ii-10.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is undefined")] public void _12_6_3_2__3__a__ii__11() { RunFile(@"12.6.3_2-3-a-ii-11.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is null")] public void _12_6_3_2__3__a__ii__12() { RunFile(@"12.6.3_2-3-a-ii-12.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a boolean (value is false)")] public void _12_6_3_2__3__a__ii__13() { RunFile(@"12.6.3_2-3-a-ii-13.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a number (value is NaN)")] public void _12_6_3_2__3__a__ii__14() { RunFile(@"12.6.3_2-3-a-ii-14.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a number (value is +0)")] public void _12_6_3_2__3__a__ii__15() { RunFile(@"12.6.3_2-3-a-ii-15.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a number (value is -0)")] public void _12_6_3_2__3__a__ii__16() { RunFile(@"12.6.3_2-3-a-ii-16.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a number (value is a positive)")] public void _12_6_3_2__3__a__ii__17() { RunFile(@"12.6.3_2-3-a-ii-17.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a string (value is empty string)")] public void _12_6_3_2__3__a__ii__18() { RunFile(@"12.6.3_2-3-a-ii-18.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a string (value is \'undefined\')")] public void _12_6_3_2__3__a__ii__19() { RunFile(@"12.6.3_2-3-a-ii-19.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a Boolean object")] public void _12_6_3_2__3__a__ii__2() { RunFile(@"12.6.3_2-3-a-ii-2.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a string (value is \'null\')")] public void _12_6_3_2__3__a__ii__20() { RunFile(@"12.6.3_2-3-a-ii-20.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a string (value is \'1\')")] public void _12_6_3_2__3__a__ii__21() { RunFile(@"12.6.3_2-3-a-ii-21.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a Number object (value is NaN)")] public void _12_6_3_2__3__a__ii__3() { RunFile(@"12.6.3_2-3-a-ii-3.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a Number object (value is +0)")] public void _12_6_3_2__3__a__ii__4() { RunFile(@"12.6.3_2-3-a-ii-4.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a Number object (value is -0)")] public void _12_6_3_2__3__a__ii__5() { RunFile(@"12.6.3_2-3-a-ii-5.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a Number object (value is a positive)")] public void _12_6_3_2__3__a__ii__6() { RunFile(@"12.6.3_2-3-a-ii-6.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a String object (value is empty string)")] public void _12_6_3_2__3__a__ii__7() { RunFile(@"12.6.3_2-3-a-ii-7.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a String object (value is \'undefined\')")] public void _12_6_3_2__3__a__ii__8() { RunFile(@"12.6.3_2-3-a-ii-8.js"); }
        [Test(Description = "The for Statement - (normal, V, empty) will be returned when first Expression is a String object (value is \'null\')")] public void _12_6_3_2__3__a__ii__9() { RunFile(@"12.6.3_2-3-a-ii-9.js"); }
    }
}