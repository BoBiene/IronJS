// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.NumberObjects.PropertiesOfTheNumberPrototypeObject
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class NumberPrototypeToStringTests : SputnikTestFixture
    {
        public NumberPrototypeToStringTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.7_Number_Objects\15.7.4_Properties_of_the_Number_Prototype_Object\15.7.4.2_Number.prototype.toString")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is the number 10 or undefined, then this number value is given as an argument to the ToString operator. the resulting string value is returned")]
        public void S15_7_4_2_A1_T01()
        {
            RunFile(@"S15.7.4.2_A1_T01.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is the number 10 or undefined, then this number value is given as an argument to the ToString operator. the resulting string value is returned")]
        public void S15_7_4_2_A1_T02()
        {
            RunFile(@"S15.7.4.2_A1_T02.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is the number 10 or undefined, then this number value is given as an argument to the ToString operator. the resulting string value is returned")]
        public void S15_7_4_2_A1_T03()
        {
            RunFile(@"S15.7.4.2_A1_T03.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T01()
        {
            RunFile(@"S15.7.4.2_A2_T01.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T02()
        {
            RunFile(@"S15.7.4.2_A2_T02.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T03()
        {
            RunFile(@"S15.7.4.2_A2_T03.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T04()
        {
            RunFile(@"S15.7.4.2_A2_T04.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T05()
        {
            RunFile(@"S15.7.4.2_A2_T05.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T06()
        {
            RunFile(@"S15.7.4.2_A2_T06.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T07()
        {
            RunFile(@"S15.7.4.2_A2_T07.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T08()
        {
            RunFile(@"S15.7.4.2_A2_T08.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T09()
        {
            RunFile(@"S15.7.4.2_A2_T09.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T10()
        {
            RunFile(@"S15.7.4.2_A2_T10.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T11()
        {
            RunFile(@"S15.7.4.2_A2_T11.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T12()
        {
            RunFile(@"S15.7.4.2_A2_T12.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T13()
        {
            RunFile(@"S15.7.4.2_A2_T13.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T14()
        {
            RunFile(@"S15.7.4.2_A2_T14.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T15()
        {
            RunFile(@"S15.7.4.2_A2_T15.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T16()
        {
            RunFile(@"S15.7.4.2_A2_T16.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T17()
        {
            RunFile(@"S15.7.4.2_A2_T17.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T18()
        {
            RunFile(@"S15.7.4.2_A2_T18.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T19()
        {
            RunFile(@"S15.7.4.2_A2_T19.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T20()
        {
            RunFile(@"S15.7.4.2_A2_T20.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T21()
        {
            RunFile(@"S15.7.4.2_A2_T21.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T22()
        {
            RunFile(@"S15.7.4.2_A2_T22.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T23()
        {
            RunFile(@"S15.7.4.2_A2_T23.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T24()
        {
            RunFile(@"S15.7.4.2_A2_T24.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T25()
        {
            RunFile(@"S15.7.4.2_A2_T25.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T26()
        {
            RunFile(@"S15.7.4.2_A2_T26.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T27()
        {
            RunFile(@"S15.7.4.2_A2_T27.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T28()
        {
            RunFile(@"S15.7.4.2_A2_T28.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T29()
        {
            RunFile(@"S15.7.4.2_A2_T29.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T30()
        {
            RunFile(@"S15.7.4.2_A2_T30.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T31()
        {
            RunFile(@"S15.7.4.2_A2_T31.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T32()
        {
            RunFile(@"S15.7.4.2_A2_T32.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T33()
        {
            RunFile(@"S15.7.4.2_A2_T33.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent")]
        public void S15_7_4_2_A2_T34()
        {
            RunFile(@"S15.7.4.2_A2_T34.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: radix should be an integer between 2 and 36")]
        public void S15_7_4_2_A3_T01()
        {
            RunFile(@"S15.7.4.2_A3_T01.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: radix should be an integer between 2 and 36")]
        public void S15_7_4_2_A3_T02()
        {
            RunFile(@"S15.7.4.2_A3_T02.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: radix should be an integer between 2 and 36")]
        public void S15_7_4_2_A3_T03()
        {
            RunFile(@"S15.7.4.2_A3_T03.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("toString: radix should be an integer between 2 and 36")]
        public void S15_7_4_2_A3_T04()
        {
            RunFile(@"S15.7.4.2_A3_T04.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("The toString function is not generic, it cannot be transferred to other kinds of objects for use as a method and there is should be a TypeError exception if its this value is not a Number object")]
        public void S15_7_4_2_A4_T01()
        {
            RunFile(@"S15.7.4.2_A4_T01.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("The toString function is not generic, it cannot be transferred to other kinds of objects for use as a method and there is should be a TypeError exception if its this value is not a Number object")]
        public void S15_7_4_2_A4_T02()
        {
            RunFile(@"S15.7.4.2_A4_T02.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("The toString function is not generic, it cannot be transferred to other kinds of objects for use as a method and there is should be a TypeError exception if its this value is not a Number object")]
        public void S15_7_4_2_A4_T03()
        {
            RunFile(@"S15.7.4.2_A4_T03.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("The toString function is not generic, it cannot be transferred to other kinds of objects for use as a method and there is should be a TypeError exception if its this value is not a Number object")]
        public void S15_7_4_2_A4_T04()
        {
            RunFile(@"S15.7.4.2_A4_T04.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.7.4.2")]
        [Description("The toString function is not generic, it cannot be transferred to other kinds of objects for use as a method and there is should be a TypeError exception if its this value is not a Number object")]
        public void S15_7_4_2_A4_T05()
        {
            RunFile(@"S15.7.4.2_A4_T05.js");
        }
    }
}