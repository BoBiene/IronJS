// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.Expressions.PostfixExpressions
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class PostfixIncrementOperatorTests : SputnikTestFixture
    {
        public PostfixIncrementOperatorTests()
            : base(@"Conformance\11_Expressions\11.3_PostfixExpressions\11.3.1_Postfix_Increment_Operator")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [TestCategory("ECMA 7.3")]
        [Description("Line Terminator between LeftHandSideExpression and \"++\" is not allowed")]
        public void S11_3_1_A1_1_T1()
        {
            RunFile_ExpectException(@"S11.3.1_A1.1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [TestCategory("ECMA 7.3")]
        [Description("Line Terminator between LeftHandSideExpression and \"++\" is not allowed")]
        public void S11_3_1_A1_1_T2()
        {
            RunFile_ExpectException(@"S11.3.1_A1.1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [TestCategory("ECMA 7.3")]
        [Description("Line Terminator between LeftHandSideExpression and \"++\" is not allowed")]
        public void S11_3_1_A1_1_T3()
        {
            RunFile_ExpectException(@"S11.3.1_A1.1_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [TestCategory("ECMA 7.3")]
        [Description("Line Terminator between LeftHandSideExpression and \"++\" is not allowed")]
        public void S11_3_1_A1_1_T4()
        {
            RunFile_ExpectException(@"S11.3.1_A1.1_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [TestCategory("ECMA 7.2")]
        [Description("White Space between LeftHandSideExpression and \"++\" are allowed")]
        public void S11_3_1_A1_2_T1()
        {
            RunFile(@"S11.3.1_A1.2_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [Description("Operator x++ uses GetValue and PutValue")]
        public void S11_3_1_A2_1_T1()
        {
            RunFile(@"S11.3.1_A2.1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [Description("Operator x++ uses GetValue and PutValue")]
        public void S11_3_1_A2_1_T2()
        {
            RunFile(@"S11.3.1_A2.1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [Description("Operator x++ uses GetValue and PutValue")]
        public void S11_3_1_A2_1_T3()
        {
            RunFile_ExpectException(@"S11.3.1_A2.1_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 8.6.2.6")]
        [Description("Operator x++ uses [[Default Value]]")]
        public void S11_3_1_A2_2_T1()
        {
            RunFile(@"S11.3.1_A2.2_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [Description("Operator x++ returns x = ToNumber(x) + 1")]
        public void S11_3_1_A3_T1()
        {
            RunFile(@"S11.3.1_A3_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [Description("Operator x++ returns x = ToNumber(x) + 1")]
        public void S11_3_1_A3_T2()
        {
            RunFile(@"S11.3.1_A3_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [Description("Operator x++ returns x = ToNumber(x) + 1")]
        public void S11_3_1_A3_T3()
        {
            RunFile(@"S11.3.1_A3_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [Description("Operator x++ returns x = ToNumber(x) + 1")]
        public void S11_3_1_A3_T4()
        {
            RunFile(@"S11.3.1_A3_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [Description("Operator x++ returns x = ToNumber(x) + 1")]
        public void S11_3_1_A3_T5()
        {
            RunFile(@"S11.3.1_A3_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [Description("Operator x++ returns ToNumber(x)")]
        public void S11_3_1_A4_T1()
        {
            RunFile(@"S11.3.1_A4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [Description("Operator x++ returns ToNumber(x)")]
        public void S11_3_1_A4_T2()
        {
            RunFile(@"S11.3.1_A4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [Description("Operator x++ returns ToNumber(x)")]
        public void S11_3_1_A4_T3()
        {
            RunFile(@"S11.3.1_A4_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [Description("Operator x++ returns ToNumber(x)")]
        public void S11_3_1_A4_T4()
        {
            RunFile(@"S11.3.1_A4_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.3.1")]
        [TestCategory("ECMA 11.6.3")]
        [Description("Operator x++ returns ToNumber(x)")]
        public void S11_3_1_A4_T5()
        {
            RunFile(@"S11.3.1_A4_T5.js");
        }
    }
}