// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.RegExpObjects.PatternSemantics
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class AssertionTests : SputnikTestFixture
    {
        public AssertionTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.10_RegExp_Objects\15.10.2_Pattern_Semantics\15.10.2.6_Assertion")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: $ evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A1_T1()
        {
            RunFile(@"S15.10.2.6_A1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: $ evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A1_T2()
        {
            RunFile(@"S15.10.2.6_A1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: $ evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A1_T3()
        {
            RunFile(@"S15.10.2.6_A1_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: $ evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A1_T4()
        {
            RunFile(@"S15.10.2.6_A1_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: $ evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A1_T5()
        {
            RunFile(@"S15.10.2.6_A1_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: ^ evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A2_T1()
        {
            RunFile(@"S15.10.2.6_A2_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: ^ evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A2_T10()
        {
            RunFile(@"S15.10.2.6_A2_T10.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: ^ evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A2_T2()
        {
            RunFile(@"S15.10.2.6_A2_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: ^ evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A2_T3()
        {
            RunFile(@"S15.10.2.6_A2_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: ^ evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A2_T4()
        {
            RunFile(@"S15.10.2.6_A2_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: ^ evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A2_T5()
        {
            RunFile(@"S15.10.2.6_A2_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: ^ evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A2_T6()
        {
            RunFile(@"S15.10.2.6_A2_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: ^ evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A2_T7()
        {
            RunFile(@"S15.10.2.6_A2_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: ^ evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A2_T8()
        {
            RunFile(@"S15.10.2.6_A2_T8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: ^ evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A2_T9()
        {
            RunFile(@"S15.10.2.6_A2_T9.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\b evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A3_T1()
        {
            RunFile(@"S15.10.2.6_A3_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\b evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A3_T10()
        {
            RunFile(@"S15.10.2.6_A3_T10.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\b evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A3_T11()
        {
            RunFile(@"S15.10.2.6_A3_T11.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\b evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A3_T12()
        {
            RunFile(@"S15.10.2.6_A3_T12.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\b evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A3_T13()
        {
            RunFile(@"S15.10.2.6_A3_T13.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\b evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A3_T14()
        {
            RunFile(@"S15.10.2.6_A3_T14.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\b evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A3_T15()
        {
            RunFile(@"S15.10.2.6_A3_T15.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\b evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A3_T2()
        {
            RunFile(@"S15.10.2.6_A3_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\b evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A3_T3()
        {
            RunFile(@"S15.10.2.6_A3_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\b evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A3_T4()
        {
            RunFile(@"S15.10.2.6_A3_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\b evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A3_T5()
        {
            RunFile(@"S15.10.2.6_A3_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\b evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A3_T6()
        {
            RunFile(@"S15.10.2.6_A3_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\b evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A3_T7()
        {
            RunFile(@"S15.10.2.6_A3_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\b evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A3_T8()
        {
            RunFile(@"S15.10.2.6_A3_T8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\b evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A3_T9()
        {
            RunFile(@"S15.10.2.6_A3_T9.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\B evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A4_T1()
        {
            RunFile(@"S15.10.2.6_A4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\B evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A4_T2()
        {
            RunFile(@"S15.10.2.6_A4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\B evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A4_T3()
        {
            RunFile(@"S15.10.2.6_A4_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\B evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A4_T4()
        {
            RunFile(@"S15.10.2.6_A4_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\B evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A4_T5()
        {
            RunFile(@"S15.10.2.6_A4_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\B evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A4_T6()
        {
            RunFile(@"S15.10.2.6_A4_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\B evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A4_T7()
        {
            RunFile(@"S15.10.2.6_A4_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("The production Assertion :: \\B evaluates by returning an internal AssertionTester closure that takes a State argument x and performs the ...")]
        public void S15_10_2_6_A4_T8()
        {
            RunFile(@"S15.10.2.6_A4_T8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("Since assertion evaluating do not change endIndex repetition of assertion does the same result")]
        public void S15_10_2_6_A5_T1()
        {
            RunFile(@"S15.10.2.6_A5_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("Since assertion evaluating do not change endIndex repetition of assertion does the same result")]
        public void S15_10_2_6_A5_T2()
        {
            RunFile(@"S15.10.2.6_A5_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("Assertions in combination")]
        public void S15_10_2_6_A6_T1()
        {
            RunFile(@"S15.10.2.6_A6_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("Assertions in combination")]
        public void S15_10_2_6_A6_T2()
        {
            RunFile(@"S15.10.2.6_A6_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("Assertions in combination")]
        public void S15_10_2_6_A6_T3()
        {
            RunFile(@"S15.10.2.6_A6_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.10.2.6")]
        [Description("Assertions in combination")]
        public void S15_10_2_6_A6_T4()
        {
            RunFile(@"S15.10.2.6_A6_T4.js");
        }
    }
}