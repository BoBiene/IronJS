// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Regression
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class RegressionTests : SputnikTestFixture
    {
        public RegressionTests()
            : base(@"Regression")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 11.13.2")]
        [Description("Result is not ToNumber(Undefined) * ToNumber(AssignmentExpression)")]
        public void S11_13_2_R2_3_T1()
        {
            RunFile(@"S11.13.2_R2.3_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 11.13.2")]
        [Description("Result is not ToInt32(Undefined) ^ ToInt32(AssignmentExpression)")]
        public void S11_13_2_R2_3_T10()
        {
            RunFile(@"S11.13.2_R2.3_T10.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 11.13.2")]
        [Description("Result is not ToInt32(Undefined) | ToInt32(AssignmentExpression)")]
        public void S11_13_2_R2_3_T11()
        {
            RunFile(@"S11.13.2_R2.3_T11.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 11.13.2")]
        [Description("Result is not ToNumber(Undefined) / ToNumber(AssignmentExpression)")]
        public void S11_13_2_R2_3_T2()
        {
            RunFile(@"S11.13.2_R2.3_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 11.13.2")]
        [Description("Result is not ToNumber(Undefined) % ToNumber(AssignmentExpression)")]
        public void S11_13_2_R2_3_T3()
        {
            RunFile(@"S11.13.2_R2.3_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 11.13.2")]
        [Description("Result is not ToNumber(Undefined) + ToNumber(AssignmentExpression)")]
        public void S11_13_2_R2_3_T4()
        {
            RunFile(@"S11.13.2_R2.3_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 11.13.2")]
        [Description("Result is not ToNumber(Undefined) - ToNumber(AssignmentExpression)")]
        public void S11_13_2_R2_3_T5()
        {
            RunFile(@"S11.13.2_R2.3_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 11.13.2")]
        [Description("Result is not ToInt32(Undefined) << ToInt32(AssignmentExpression)")]
        public void S11_13_2_R2_3_T6()
        {
            RunFile(@"S11.13.2_R2.3_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 11.13.2")]
        [Description("Result is not ToInt32(Undefined) >> ToInt32(AssignmentExpression)")]
        public void S11_13_2_R2_3_T7()
        {
            RunFile(@"S11.13.2_R2.3_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 11.13.2")]
        [Description("Result is not ToInt32(Undefined) >>> ToInt32(AssignmentExpression)")]
        public void S11_13_2_R2_3_T8()
        {
            RunFile(@"S11.13.2_R2.3_T8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 11.13.2")]
        [Description("Result is not ToInt32(Undefined) & ToInt32(AssignmentExpression)")]
        public void S11_13_2_R2_3_T9()
        {
            RunFile(@"S11.13.2_R2.3_T9.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 12.6.4")]
        [TestCategory("ECMA 9.9")]
        [Description("The for-in statement must not throw TypeError for undefined values, cause it\'s a bug in the Standard")]
        public void S12_6_4_R1()
        {
            RunFile(@"S12.6.4_R1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 12.6.4")]
        [TestCategory("ECMA 9.9")]
        [Description("The for-in statement must not throw TypeError for null values, cause it\'s a bug in the Standard")]
        public void S12_6_4_R2()
        {
            RunFile(@"S12.6.4_R2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 15.1.1.1")]
        [TestCategory("ECMA 9.3")]
        [Description("The NaN is not ReadOnly, check Number for resettability of result")]
        public void S15_1_1_1_R1()
        {
            RunFile(@"S15.1.1.1_R1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 15.1.1.1")]
        [TestCategory("ECMA 15.1.2")]
        [TestCategory("ECMA 15.1.3")]
        [Description("The NaN is not ReadOnly, check isNaN Functions that use ToNumber")]
        public void S15_1_1_1_R2_1()
        {
            RunFile(@"S15.1.1.1_R2.1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 15.1.1.1")]
        [TestCategory("ECMA 15.1.2")]
        [TestCategory("ECMA 15.1.3")]
        [Description("The NaN is not ReadOnly, check isFinite Functions that use ToNumber")]
        public void S15_1_1_1_R2_2()
        {
            RunFile(@"S15.1.1.1_R2.2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 15.1.1.1")]
        [TestCategory("ECMA 15.1.2.4")]
        [Description("The NaN is not ReadOnly, check isNaN for resettability of result")]
        public void S15_1_1_1_R3_1()
        {
            RunFile(@"S15.1.1.1_R3.1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 15.1.1.1")]
        [TestCategory("ECMA 15.1.2.4")]
        [Description("The NaN is not ReadOnly, check isFinite for resettability of result\r\n*/\r\n\r\n// CHECK#1\r\nNaN = 1")]
        public void S15_1_1_1_R3_2()
        {
            RunFile(@"S15.1.1.1_R3.2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 15.1.1.1")]
        [TestCategory("ECMA 11")]
        [Description("The NaN is not ReadOnly, check Operators that use ToNumber")]
        public void S15_1_1_1_R4()
        {
            RunFile(@"S15.1.1.1_R4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 15.1.1.2")]
        [TestCategory("ECMA 9.3")]
        [Description("The Infinity is not ReadOnly, check Number for resettability of result")]
        public void S15_1_1_2_R1()
        {
            RunFile(@"S15.1.1.2_R1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 15.1.1.2")]
        [TestCategory("ECMA 15.1.2")]
        [TestCategory("ECMA 15.1.3")]
        [Description("The Infinity is not ReadOnly, check isNaN Functions that use ToNumber")]
        public void S15_1_1_2_R2_1()
        {
            RunFile(@"S15.1.1.2_R2.1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 15.1.1.2")]
        [TestCategory("ECMA 15.1.2")]
        [TestCategory("ECMA 15.1.3")]
        [Description("The Infinity is not ReadOnly, check isFinite Functions that use ToNumber")]
        public void S15_1_1_2_R2_2()
        {
            RunFile(@"S15.1.1.2_R2.2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 15.1.1.2")]
        [TestCategory("ECMA 15.1.2.4")]
        [Description("The Infinity is not ReadOnly, check isNaN for resettability of result")]
        public void S15_1_1_2_R3_1()
        {
            RunFile(@"S15.1.1.2_R3.1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 15.1.1.2")]
        [TestCategory("ECMA 15.1.2.4")]
        [Description("The Infinity is not ReadOnly, check isFinite for resettability of result\r\n*/\r\n\r\n// CHECK#1\r\nInfinity = 0")]
        public void S15_1_1_2_R3_2()
        {
            RunFile(@"S15.1.1.2_R3.2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Regression")]
        [TestCategory("ECMA 15.1.1.2")]
        [TestCategory("ECMA 11")]
        [Description("The Infinity is not ReadOnly, check Operators that use ToNumber")]
        public void S15_1_1_2_R4()
        {
            RunFile(@"S15.1.1.2_R4.js");
        }
    }
}