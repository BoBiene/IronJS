// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.FunctionObjects
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class PropertiesOfFunctionInstancesTests : SputnikTestFixture
    {
        public PropertiesOfFunctionInstancesTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.3_Function_Objects\15.3.5_Properties_of_Function_Instances")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.1")]
        [Description("The value of the length property is usually an integer that indicates the \'typical\' number of arguments expected by the function")]
        public void S15_3_5_1_A1_T1()
        {
            RunFile(@"S15.3.5.1_A1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.1")]
        [Description("The value of the length property is usually an integer that indicates the \'typical\' number of arguments expected by the function")]
        public void S15_3_5_1_A1_T2()
        {
            RunFile(@"S15.3.5.1_A1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.1")]
        [Description("The value of the length property is usually an integer that indicates the \'typical\' number of arguments expected by the function")]
        public void S15_3_5_1_A1_T3()
        {
            RunFile(@"S15.3.5.1_A1_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.1")]
        [Description("the length property has the attributes { DontDelete }")]
        public void S15_3_5_1_A2_T1()
        {
            RunFile(@"S15.3.5.1_A2_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.1")]
        [Description("the length property has the attributes { DontDelete }")]
        public void S15_3_5_1_A2_T2()
        {
            RunFile(@"S15.3.5.1_A2_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.1")]
        [Description("the length property has the attributes { DontDelete }")]
        public void S15_3_5_1_A2_T3()
        {
            RunFile(@"S15.3.5.1_A2_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.1")]
        [Description("the length property has the attributes { ReadOnly }")]
        public void S15_3_5_1_A3_T1()
        {
            RunFile(@"S15.3.5.1_A3_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.1")]
        [Description("the length property has the attributes { ReadOnly }")]
        public void S15_3_5_1_A3_T2()
        {
            RunFile(@"S15.3.5.1_A3_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.1")]
        [Description("the length property has the attributes { ReadOnly }")]
        public void S15_3_5_1_A3_T3()
        {
            RunFile(@"S15.3.5.1_A3_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.1")]
        [Description("the length property has the attributes { DontEnum }")]
        public void S15_3_5_1_A4_T1()
        {
            RunFile(@"S15.3.5.1_A4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.1")]
        [Description("the length property has the attributes { DontEnum }")]
        public void S15_3_5_1_A4_T2()
        {
            RunFile(@"S15.3.5.1_A4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.1")]
        [Description("the length property has the attributes { DontEnum }")]
        public void S15_3_5_1_A4_T3()
        {
            RunFile(@"S15.3.5.1_A4_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.2")]
        [Description("the prototype property has the attributes { DontDelete }")]
        public void S15_3_5_2_A1_T1()
        {
            RunFile(@"S15.3.5.2_A1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.2")]
        [Description("the prototype property has the attributes { DontDelete }")]
        public void S15_3_5_2_A1_T2()
        {
            RunFile(@"S15.3.5.2_A1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.3")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Assume F is a Function object. When the [[HasInstance]] method of F is called with value V, the following steps are taken: i) If V is not an object, return false")]
        public void S15_3_5_3_A1_T1()
        {
            RunFile(@"S15.3.5.3_A1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.3")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Assume F is a Function object. When the [[HasInstance]] method of F is called with value V, the following steps are taken: i) If V is not an object, return false")]
        public void S15_3_5_3_A1_T2()
        {
            RunFile(@"S15.3.5.3_A1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.3")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Assume F is a Function object. When the [[HasInstance]] method of F is called with value V, the following steps are taken: i) If V is not an object, return false")]
        public void S15_3_5_3_A1_T3()
        {
            RunFile(@"S15.3.5.3_A1_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.3")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Assume F is a Function object. When the [[HasInstance]] method of F is called with value V, the following steps are taken: i) If V is not an object, return false")]
        public void S15_3_5_3_A1_T4()
        {
            RunFile(@"S15.3.5.3_A1_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.3")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Assume F is a Function object. When the [[HasInstance]] method of F is called with value V, the following steps are taken: i) If V is not an object, return false")]
        public void S15_3_5_3_A1_T5()
        {
            RunFile(@"S15.3.5.3_A1_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.3")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Assume F is a Function object. When the [[HasInstance]] method of F is called with value V, the following steps are taken: i) If V is not an object, return false")]
        public void S15_3_5_3_A1_T6()
        {
            RunFile(@"S15.3.5.3_A1_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.3")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Assume F is a Function object. When the [[HasInstance]] method of F is called with value V, the following steps are taken: i) If V is not an object, return false")]
        public void S15_3_5_3_A1_T7()
        {
            RunFile(@"S15.3.5.3_A1_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.3")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Assume F is a Function object. When the [[HasInstance]] method of F is called with value V, the following steps are taken: i) If V is not an object, return false")]
        public void S15_3_5_3_A1_T8()
        {
            RunFile(@"S15.3.5.3_A1_T8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.3")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Assume F is a Function object. When the [[HasInstance]] method of F is called with value V and V is an object, the following steps are taken: i) Call the [[Get]] method of F with property name \"prototype\". ii) Let O be Result(i). iii) O is not an object, throw a TypeError exception")]
        public void S15_3_5_3_A2_T2()
        {
            RunFile(@"S15.3.5.3_A2_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.3")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Assume F is a Function object. When the [[HasInstance]] method of             F is called with value V and V is an object, the following steps             are taken: i) Call the [[Get]] method of F with property name             \"prototype\". ii) Let O be Result(i). iii) O is not an object,             throw a TypeError exception")]
        public void S15_3_5_3_A2_T5()
        {
            RunFile(@"S15.3.5.3_A2_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.3")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Assume F is a Function object. When the [[HasInstance]] method of             F is called with value V and V is an object, the following steps             are taken: i) Call the [[Get]] method of F with property name             \"prototype\". ii) Let O be Result(i). iii) O is not an object,             throw a TypeError exception")]
        public void S15_3_5_3_A2_T6()
        {
            RunFile(@"S15.3.5.3_A2_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.3")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Assume F is a Function object. When the [[HasInstance]] method of F is called with value V and V is an object, the following steps are taken: i) Call the [[Get]] method of F with property name \"prototype\". ii) Let O be Result(i) and O is an object. iii) Let V be the value of the [[Prototype]] property of V. iv) If V is null, return false. v)  If O and V refer to the same object or if they refer to objects joined to each other (13.1.2), return true. vi) Go to step iii)")]
        public void S15_3_5_3_A3_T1()
        {
            RunFile(@"S15.3.5.3_A3_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5.3")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Assume F is a Function object. When the [[HasInstance]] method of F is called with value V and V is an object, the following steps are taken: i) Call the [[Get]] method of F with property name \"prototype\". ii) Let O be Result(i) and O is an object. iii) Let V be the value of the [[Prototype]] property of V. iv) If V is null, return false. v)  If O and V refer to the same object or if they refer to objects joined to each other (13.1.2), return true. vi) Go to step iii)")]
        public void S15_3_5_3_A3_T2()
        {
            RunFile(@"S15.3.5.3_A3_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5")]
        [Description("The value of the [[Class]] property is \"Function\" ")]
        public void S15_3_5_A1_T1()
        {
            RunFile(@"S15.3.5_A1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5")]
        [Description("The value of the [[Class]] property is \"Function\" ")]
        public void S15_3_5_A1_T2()
        {
            RunFile(@"S15.3.5_A1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5")]
        [Description("Every function instance has a [[Call]] property ")]
        public void S15_3_5_A2_T1()
        {
            RunFile(@"S15.3.5_A2_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5")]
        [Description("Every function instance has a [[Call]] property ")]
        public void S15_3_5_A2_T2()
        {
            RunFile(@"S15.3.5_A2_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5")]
        [Description("every function instance has a [[Construct]] property ")]
        public void S15_3_5_A3_T1()
        {
            RunFile(@"S15.3.5_A3_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.3.5")]
        [Description("every function instance has a [[Construct]] property ")]
        public void S15_3_5_A3_T2()
        {
            RunFile(@"S15.3.5_A3_T2.js");
        }
    }
}