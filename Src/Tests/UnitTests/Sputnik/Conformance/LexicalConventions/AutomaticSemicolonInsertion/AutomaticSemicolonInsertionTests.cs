// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.LexicalConventions.AutomaticSemicolonInsertion
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class AutomaticSemicolonInsertionTests : SputnikTestFixture
    {
        public AutomaticSemicolonInsertionTests()
            : base(@"Conformance\07_Lexical_Conventions\7.9_Automatic_Semicolon_Insertion")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.7")]
        [TestCategory("ECMA 12.12")]
        [Description("Check Continue Statement for automatic semicolon insertion")]
        public void S7_9_A1()
        {
            RunFile(@"S7.9_A1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [Description("Check {} for automatic semicolon insertion")]
        public void S7_9_A10_T1()
        {
            RunFile(@"S7.9_A10_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [Description("Check {} for automatic semicolon insertion")]
        public void S7_9_A10_T10()
        {
            RunFile(@"S7.9_A10_T10.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [Description("Check {} for automatic semicolon insertion")]
        public void S7_9_A10_T11()
        {
            RunFile(@"S7.9_A10_T11.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [Description("Check {} for automatic semicolon insertion")]
        public void S7_9_A10_T12()
        {
            RunFile(@"S7.9_A10_T12.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [Description("Check {} for automatic semicolon insertion")]
        public void S7_9_A10_T2()
        {
            RunFile_ExpectException(@"S7.9_A10_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [Description("Check {} for automatic semicolon insertion")]
        public void S7_9_A10_T3()
        {
            RunFile(@"S7.9_A10_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [Description("Check {} for automatic semicolon insertion")]
        public void S7_9_A10_T4()
        {
            RunFile_ExpectException(@"S7.9_A10_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [Description("Check {} for automatic semicolon insertion")]
        public void S7_9_A10_T5()
        {
            RunFile(@"S7.9_A10_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [Description("Check {} for automatic semicolon insertion")]
        public void S7_9_A10_T6()
        {
            RunFile_ExpectException(@"S7.9_A10_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [Description("Check {} for automatic semicolon insertion")]
        public void S7_9_A10_T7()
        {
            RunFile(@"S7.9_A10_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [Description("Check {} for automatic semicolon insertion")]
        public void S7_9_A10_T8()
        {
            RunFile_ExpectException(@"S7.9_A10_T8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [Description("Check {} for automatic semicolon insertion")]
        public void S7_9_A10_T9()
        {
            RunFile(@"S7.9_A10_T9.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.5")]
        [Description("Check If Statement for automatic semicolon insertion")]
        public void S7_9_A11_T1()
        {
            RunFile(@"S7.9_A11_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.5")]
        [Description("Check If Statement for automatic semicolon insertion")]
        public void S7_9_A11_T10()
        {
            RunFile(@"S7.9_A11_T10.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.5")]
        [Description("Check If Statement for automatic semicolon insertion")]
        public void S7_9_A11_T11()
        {
            RunFile(@"S7.9_A11_T11.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.5")]
        [Description("Check If Statement for automatic semicolon insertion")]
        public void S7_9_A11_T2()
        {
            RunFile(@"S7.9_A11_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.5")]
        [Description("Check If Statement for automatic semicolon insertion")]
        public void S7_9_A11_T3()
        {
            RunFile(@"S7.9_A11_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.5")]
        [Description("Check If Statement for automatic semicolon insertion")]
        public void S7_9_A11_T4()
        {
            RunFile_ExpectException(@"S7.9_A11_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.5")]
        [Description("Check If Statement for automatic semicolon insertion")]
        public void S7_9_A11_T5()
        {
            RunFile(@"S7.9_A11_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.5")]
        [Description("Check If Statement for automatic semicolon insertion")]
        public void S7_9_A11_T6()
        {
            RunFile(@"S7.9_A11_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.5")]
        [Description("Check If Statement for automatic semicolon insertion")]
        public void S7_9_A11_T7()
        {
            RunFile(@"S7.9_A11_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.5")]
        [Description("Check If Statement for automatic semicolon insertion")]
        public void S7_9_A11_T8()
        {
            RunFile_ExpectException(@"S7.9_A11_T8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.5")]
        [Description("Check If Statement for automatic semicolon insertion")]
        public void S7_9_A11_T9()
        {
            RunFile(@"S7.9_A11_T9.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.8")]
        [TestCategory("ECMA 12.12")]
        [Description("Check Break Statement for automatic semicolon insertion")]
        public void S7_9_A2()
        {
            RunFile(@"S7.9_A2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.9")]
        [Description("Check Return Statement for automatic semicolon insertion")]
        public void S7_9_A3()
        {
            RunFile(@"S7.9_A3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.13")]
        [Description("Check Throw Statement for automatic semicolon insertion")]
        public void S7_9_A4()
        {
            RunFile_ExpectException(@"S7.9_A4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.4")]
        [TestCategory("ECMA 11.13.1")]
        [Description("Check Postfix Increment Operator for automatic semicolon insertion")]
        public void S7_9_A5_1_T1()
        {
            RunFile_ExpectException(@"S7.9_A5.1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.4")]
        [TestCategory("ECMA 11.13.1")]
        [Description("Check Prefix Increment Operator for automatic semicolon insertion")]
        public void S7_9_A5_2_T1()
        {
            RunFile(@"S7.9_A5.2_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.4")]
        [TestCategory("ECMA 11.13.2")]
        [Description("Check Postfix Decrement Operator for automatic semicolon insertion")]
        public void S7_9_A5_3_T1()
        {
            RunFile_ExpectException(@"S7.9_A5.3_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.4")]
        [TestCategory("ECMA 11.13.2")]
        [Description("Check Prefix Decrement Operator for automatic semicolon insertion")]
        public void S7_9_A5_4_T1()
        {
            RunFile(@"S7.9_A5.4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.4")]
        [TestCategory("ECMA 11.2.5")]
        [Description("Check Function Expression for automatic semicolon insertion")]
        public void S7_9_A5_5_T1()
        {
            RunFile(@"S7.9_A5.5_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.4")]
        [TestCategory("ECMA 11.2.5")]
        [Description("Check Function Expression for automatic semicolon insertion")]
        public void S7_9_A5_5_T2()
        {
            RunFile(@"S7.9_A5.5_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.4")]
        [TestCategory("ECMA 11.2.5")]
        [Description("Check Function Expression for automatic semicolon insertion")]
        public void S7_9_A5_5_T3()
        {
            RunFile(@"S7.9_A5.5_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.4")]
        [TestCategory("ECMA 11.2.5")]
        [Description("Check Function Expression for automatic semicolon insertion")]
        public void S7_9_A5_5_T4()
        {
            RunFile(@"S7.9_A5.5_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.4")]
        [TestCategory("ECMA 11.2.5")]
        [Description("Check Function Expression for automatic semicolon insertion")]
        public void S7_9_A5_5_T5()
        {
            RunFile(@"S7.9_A5.5_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.4")]
        [TestCategory("ECMA 11.3")]
        [TestCategory("ECMA 11.4.4")]
        [TestCategory("ECMA 11.4.5")]
        [Description("Since LineTerminator between Postfix Increment/Decrement Operator(I/DO) and operand is not allowed but between Prefix I/DO and operand admitted, Postfix I/DO in combination with prefix I/DO after automatic semicolon insertion gives valid result")]
        public void S7_9_A5_6_T1()
        {
            RunFile(@"S7.9_A5.6_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.4")]
        [TestCategory("ECMA 11.3")]
        [TestCategory("ECMA 11.4.4")]
        [TestCategory("ECMA 11.4.5")]
        [Description("Since LineTerminator between Postfix Increment/Decrement Operator(I/DO) and operand is not allowed but between Prefix I/DO and operand admitted, Postfix I/DO in combination with prefix I/DO after automatic semicolon insertion gives valid result")]
        public void S7_9_A5_6_T2()
        {
            RunFile(@"S7.9_A5.6_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [Description("Since LineTerminator(LT) between Postfix Increment/Decrement Operator(I/DO) and operand is not allowed, two IO(just as two DO and their combination) between two references separated by [LT] after automatic semicolon insertion lead to syntax error")]
        public void S7_9_A5_7_T1()
        {
            RunFile_ExpectException(@"S7.9_A5.7_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [Description("Since LineTerminator(LT) between Postfix Increment/Decrement Operator(I/DO) and operand is admitted, Additive/Substract Operator(A/SO) in combination with I/DO separated by LT or white spaces after automatic semicolon insertion gives valid result")]
        public void S7_9_A5_8_T1()
        {
            RunFile(@"S7.9_A5.8_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [Description("Additive/Substract Operator(A/SO) in combination with itself separated by LT or white spaces after automatic semicolon insertion gives valid result")]
        public void S7_9_A5_9_T1()
        {
            RunFile(@"S7.9_A5.9_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion")]
        public void S7_9_A6_1_T1()
        {
            RunFile(@"S7.9_A6.1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion")]
        public void S7_9_A6_1_T10()
        {
            RunFile(@"S7.9_A6.1_T10.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion")]
        public void S7_9_A6_1_T11()
        {
            RunFile(@"S7.9_A6.1_T11.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion")]
        public void S7_9_A6_1_T12()
        {
            RunFile(@"S7.9_A6.1_T12.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion")]
        public void S7_9_A6_1_T13()
        {
            RunFile(@"S7.9_A6.1_T13.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion")]
        public void S7_9_A6_1_T2()
        {
            RunFile(@"S7.9_A6.1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion")]
        public void S7_9_A6_1_T3()
        {
            RunFile(@"S7.9_A6.1_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion")]
        public void S7_9_A6_1_T4()
        {
            RunFile(@"S7.9_A6.1_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion")]
        public void S7_9_A6_1_T5()
        {
            RunFile(@"S7.9_A6.1_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion")]
        public void S7_9_A6_1_T6()
        {
            RunFile(@"S7.9_A6.1_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion")]
        public void S7_9_A6_1_T7()
        {
            RunFile(@"S7.9_A6.1_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion")]
        public void S7_9_A6_1_T8()
        {
            RunFile(@"S7.9_A6.1_T8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion")]
        public void S7_9_A6_1_T9()
        {
            RunFile(@"S7.9_A6.1_T9.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion. If automatic insertion semicolon would become one of the two semicolons in the header of a For Statement. Use one semicolon")]
        public void S7_9_A6_2_T1()
        {
            RunFile_ExpectException(@"S7.9_A6.2_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion. If automatic insertion semicolon would become one of the two semicolons in the header of a For Statement. Use one semicolon")]
        public void S7_9_A6_2_T10()
        {
            RunFile_ExpectException(@"S7.9_A6.2_T10.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion. If automatic insertion semicolon would become one of the two semicolons in the header of a For Statement. Use one semicolon")]
        public void S7_9_A6_2_T2()
        {
            RunFile_ExpectException(@"S7.9_A6.2_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion. If automatic insertion semicolon would become one of the two semicolons in the header of a For Statement. Use one semicolon")]
        public void S7_9_A6_2_T3()
        {
            RunFile_ExpectException(@"S7.9_A6.2_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion. If automatic insertion semicolon would become one of the two semicolons in the header of a For Statement. Use one semicolon")]
        public void S7_9_A6_2_T4()
        {
            RunFile_ExpectException(@"S7.9_A6.2_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion. If automatic insertion semicolon would become one of the two semicolons in the header of a For Statement. Use one semicolon")]
        public void S7_9_A6_2_T5()
        {
            RunFile_ExpectException(@"S7.9_A6.2_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion. If automatic insertion semicolon would become one of the two semicolons in the header of a For Statement. Use one semicolon")]
        public void S7_9_A6_2_T6()
        {
            RunFile_ExpectException(@"S7.9_A6.2_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion. If automatic insertion semicolon would become one of the two semicolons in the header of a For Statement. Use one semicolon")]
        public void S7_9_A6_2_T7()
        {
            RunFile_ExpectException(@"S7.9_A6.2_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion. If automatic insertion semicolon would become one of the two semicolons in the header of a For Statement. Use one semicolon")]
        public void S7_9_A6_2_T8()
        {
            RunFile_ExpectException(@"S7.9_A6.2_T8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion. If automatic insertion semicolon would become one of the two semicolons in the header of a For Statement. Use one semicolon")]
        public void S7_9_A6_2_T9()
        {
            RunFile_ExpectException(@"S7.9_A6.2_T9.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion. If automatic insertion semicolon would become one of the two semicolons in the header of a For Statement. Don`t use semicolons")]
        public void S7_9_A6_3_T1()
        {
            RunFile_ExpectException(@"S7.9_A6.3_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion. If automatic insertion semicolon would become one of the two semicolons in the header of a For Statement. Don`t use semicolons")]
        public void S7_9_A6_3_T2()
        {
            RunFile_ExpectException(@"S7.9_A6.3_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion. If automatic insertion semicolon would become one of the two semicolons in the header of a For Statement. Don`t use semicolons")]
        public void S7_9_A6_3_T3()
        {
            RunFile_ExpectException(@"S7.9_A6.3_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion. If automatic insertion semicolon would become one of the two semicolons in the header of a For Statement. Don`t use semicolons")]
        public void S7_9_A6_3_T4()
        {
            RunFile_ExpectException(@"S7.9_A6.3_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion. If automatic insertion semicolon would become one of the two semicolons in the header of a For Statement. Don`t use semicolons")]
        public void S7_9_A6_3_T5()
        {
            RunFile_ExpectException(@"S7.9_A6.3_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion. If automatic insertion semicolon would become one of the two semicolons in the header of a For Statement. Don`t use semicolons")]
        public void S7_9_A6_3_T6()
        {
            RunFile_ExpectException(@"S7.9_A6.3_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion. If automatic insertion semicolon would become one of the two semicolons in the header of a For Statement. Don`t use semicolons")]
        public void S7_9_A6_3_T7()
        {
            RunFile_ExpectException(@"S7.9_A6.3_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion")]
        public void S7_9_A6_4_T1()
        {
            RunFile_ExpectException(@"S7.9_A6.4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.3")]
        [Description("Check For Statement for automatic semicolon insertion")]
        public void S7_9_A6_4_T2()
        {
            RunFile_ExpectException(@"S7.9_A6.4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.2")]
        [Description("Check Var Statement for automatic semicolon insertion")]
        public void S7_9_A7_T1()
        {
            RunFile(@"S7.9_A7_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.2")]
        [Description("Check Var Statement for automatic semicolon insertion")]
        public void S7_9_A7_T2()
        {
            RunFile(@"S7.9_A7_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.2")]
        [Description("Check Var Statement for automatic semicolon insertion")]
        public void S7_9_A7_T3()
        {
            RunFile(@"S7.9_A7_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.2")]
        [Description("Check Var Statement for automatic semicolon insertion")]
        public void S7_9_A7_T4()
        {
            RunFile(@"S7.9_A7_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.2")]
        [Description("Check Var Statement for automatic semicolon insertion")]
        public void S7_9_A7_T5()
        {
            RunFile(@"S7.9_A7_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.2")]
        [Description("Check Var Statement for automatic semicolon insertion")]
        public void S7_9_A7_T6()
        {
            RunFile(@"S7.9_A7_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.2")]
        [Description("Check Var Statement for automatic semicolon insertion")]
        public void S7_9_A7_T7()
        {
            RunFile_ExpectException(@"S7.9_A7_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.2")]
        [Description("Check Var Statement for automatic semicolon insertion")]
        public void S7_9_A7_T8()
        {
            RunFile(@"S7.9_A7_T8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.2")]
        [Description("Check Var Statement for automatic semicolon insertion")]
        public void S7_9_A7_T9()
        {
            RunFile(@"S7.9_A7_T9.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.4")]
        [Description("Check Empty Statement for automatic semicolon insertion")]
        public void S7_9_A8_T1()
        {
            RunFile(@"S7.9_A8_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.4")]
        [Description("Check Empty Statement for automatic semicolon insertion")]
        public void S7_9_A8_T2()
        {
            RunFile(@"S7.9_A8_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.4")]
        [Description("Check Empty Statement for automatic semicolon insertion")]
        public void S7_9_A8_T3()
        {
            RunFile(@"S7.9_A8_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.4")]
        [Description("Check Empty Statement for automatic semicolon insertion")]
        public void S7_9_A8_T4()
        {
            RunFile(@"S7.9_A8_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.4")]
        [Description("Check Empty Statement for automatic semicolon insertion")]
        public void S7_9_A8_T5()
        {
            RunFile(@"S7.9_A8_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.1")]
        [Description("Check Do-While Statement for automatic semicolon insertion")]
        public void S7_9_A9_T1()
        {
            RunFile(@"S7.9_A9_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.1")]
        [Description("Check Do-While Statement for automatic semicolon insertion")]
        public void S7_9_A9_T2()
        {
            RunFile(@"S7.9_A9_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.1")]
        [Description("Check Do-While Statement for automatic semicolon insertion")]
        public void S7_9_A9_T3()
        {
            RunFile(@"S7.9_A9_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.1")]
        [Description("Check Do-While Statement for automatic semicolon insertion")]
        public void S7_9_A9_T4()
        {
            RunFile(@"S7.9_A9_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.1")]
        [Description("Check Do-While Statement for automatic semicolon insertion")]
        public void S7_9_A9_T5()
        {
            RunFile(@"S7.9_A9_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.1")]
        [Description("Check Do-While Statement for automatic semicolon insertion")]
        public void S7_9_A9_T6()
        {
            RunFile_ExpectException(@"S7.9_A9_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.1")]
        [Description("Check Do-While Statement for automatic semicolon insertion")]
        public void S7_9_A9_T7()
        {
            RunFile_ExpectException(@"S7.9_A9_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.1")]
        [Description("Check Do-While Statement for automatic semicolon insertion")]
        public void S7_9_A9_T8()
        {
            RunFile_ExpectException(@"S7.9_A9_T8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 7.9")]
        [TestCategory("ECMA 12.6.1")]
        [Description("Check Do-While Statement for automatic semicolon insertion")]
        public void S7_9_A9_T9()
        {
            RunFile(@"S7.9_A9_T9.js");
        }
    }
}