// <auto-generated />
namespace IronJS.Tests.UnitTests.IE9.chapter12._12_14
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class _12_14_1_Tests : IE9TestFixture
    {
        public _12_14_1_Tests() : base(@"chapter12\12.14\12.14.1") { }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a TryStatement with a Catch occurs within strict code and the Identifier of the Catch production is eval")] public void _12_14_1__1__s() { RunFile(@"12.14.1-1-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if a TryStatement with a Catch occurs within strict code and the Identifier of the Catch production is arguments")] public void _12_14_1__2__s() { RunFile(@"12.14.1-2-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError isn\'t thrown if a TryStatement with a Catch occurs within strict code and the Identifier of the Catch production is EVAL but throws SyntaxError if it is eval")] public void _12_14_1__3__s() { RunFile(@"12.14.1-3-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError isn\'t thrown if a TryStatement with a Catch occurs within strict code and the Identifier of the Catch production is EVAL")] public void _12_14_1__4__s() { RunFile(@"12.14.1-4-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError isn\'t thrown if a TryStatement with a Catch occurs within strict code and the Identifier of the Catch production is Arguments")] public void _12_14_1__5__s() { RunFile(@"12.14.1-5-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError isn\'t thrown if a TryStatement with a Catch occurs within strict code and the Identifier of the Catch production is ARGUMENTS")] public void _12_14_1__6__s() { RunFile(@"12.14.1-6-s.js"); }
    }
}