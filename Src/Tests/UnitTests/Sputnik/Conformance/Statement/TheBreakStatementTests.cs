// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.Statement
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class TheBreakStatementTests : SputnikTestFixture
    {
        public TheBreakStatementTests()
            : base(@"Conformance\12_Statement\12.8_The_break_Statement")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("Appearing of break without an IterationStatement leads to syntax error")]
        public void S12_8_A1_T1()
        {
            RunFile_ExpectException(@"S12.8_A1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("Appearing of break without an IterationStatement leads to syntax error")]
        public void S12_8_A1_T2()
        {
            RunFile_ExpectException(@"S12.8_A1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("Appearing of break without an IterationStatement leads to syntax error")]
        public void S12_8_A1_T3()
        {
            RunFile_ExpectException(@"S12.8_A1_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("Appearing of break without an IterationStatement leads to syntax error")]
        public void S12_8_A1_T4()
        {
            RunFile_ExpectException(@"S12.8_A1_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("Since LineTerminator between \"break\" and Identifier is not allowed, \"break\" is evaluated without label")]
        public void S12_8_A2()
        {
            RunFile(@"S12.8_A2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("When \"break\" is evaluated, (break, empty, empty) is returned")]
        public void S12_8_A3()
        {
            RunFile(@"S12.8_A3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("When \"break Identifier\" is evaluated, (break, empty, Identifier) is returned")]
        public void S12_8_A4_T1()
        {
            RunFile(@"S12.8_A4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("When \"break Identifier\" is evaluated, (break, empty, Identifier) is returned")]
        public void S12_8_A4_T2()
        {
            RunFile(@"S12.8_A4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("When \"break Identifier\" is evaluated, (break, empty, Identifier) is returned")]
        public void S12_8_A4_T3()
        {
            RunFile(@"S12.8_A4_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("Identifier must be label in the label set of an enclosing (but not crossing function boundaries) IterationStatement")]
        public void S12_8_A5_T1()
        {
            RunFile_ExpectException(@"S12.8_A5_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("Identifier must be label in the label set of an enclosing (but not crossing function boundaries) IterationStatement")]
        public void S12_8_A5_T2()
        {
            RunFile_ExpectException(@"S12.8_A5_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("Identifier must be label in the label set of an enclosing (but not crossing function boundaries) IterationStatement")]
        public void S12_8_A5_T3()
        {
            RunFile_ExpectException(@"S12.8_A5_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("Appearing of \"break\" within a function call that is nested in a IterationStatement yields SyntaxError")]
        public void S12_8_A6()
        {
            RunFile_ExpectException(@"S12.8_A6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("Appearing of \"break\" within eval statement that is nested in an IterationStatement yields SyntaxError")]
        public void S12_8_A7()
        {
            RunFile(@"S12.8_A7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("Appearing of \"break\" within \"try/catch\" Block yields SyntaxError")]
        public void S12_8_A8_T1()
        {
            RunFile_ExpectException(@"S12.8_A8_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("Appearing of \"break\" within \"try/catch\" Block yields SyntaxError")]
        public void S12_8_A8_T2()
        {
            RunFile_ExpectException(@"S12.8_A8_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("Using \"break\" within \"try/catch\" statement that is nested in a loop is allowed")]
        public void S12_8_A9_T1()
        {
            RunFile(@"S12.8_A9_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.8")]
        [Description("Using \"break\" within \"try/catch\" statement that is nested in a loop is allowed")]
        public void S12_8_A9_T2()
        {
            RunFile(@"S12.8_A9_T2.js");
        }
    }
}