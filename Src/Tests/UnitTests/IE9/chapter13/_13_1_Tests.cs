// <auto-generated />
namespace IronJS.Tests.UnitTests.IE9.chapter13
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class _13_1_Tests : IE9TestFixture
    {
        public _13_1_Tests() : base(@"chapter13\13.1") { }

        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created in \'strict mode\' using a FunctionExpression and the function has three identical parameters")] public void _13_1__10__s() { RunFile(@"13.1-10-s.js"); }
        [Test(Description = "Duplicate identifier allowed in non-strict function declaration parameter list")] public void _13_1__1__1() { RunFile(@"13.1-1-1.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if \'eval\' occurs as the function name of a FunctionDeclaration in strict mode")] public void _13_1__11__s() { RunFile(@"13.1-11-s.js"); }
        [Test(Description = "Duplicate identifier allowed in non-strict function expression parameter list")] public void _13_1__1__2() { RunFile(@"13.1-1-2.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if \'eval\' occurs as the Identifier of a FunctionExpression in strict mode")] public void _13_1__12__s() { RunFile(@"13.1-12-s.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if \'arguments\' occurs as the function name of a FunctionDeclaration in strict mode")] public void _13_1__13__s() { RunFile(@"13.1-13-s.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if \'arguments\' occurs as the Identifier of a FunctionExpression in strict mode")] public void _13_1__14__s() { RunFile(@"13.1-14-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier \'eval\' appears within a FormalParameterList of a strict mode FunctionDeclaration in strict eval code")] public void _13_1__15__s() { RunFile(@"13.1-15-s.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if the identifier \'eval\' appears within a FormalParameterList of a strict mode FunctionDeclaration when FuctionBody is strict code")] public void _13_1__16__s() { RunFile(@"13.1-16-s.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if the identifier \'eval\' appears within a FormalParameterList of a strict mode FunctionExpression in strict eval code")] public void _13_1__17__s() { RunFile(@"13.1-17-s.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if the identifier \'eval\' appears within a FormalParameterList of a strict mode FunctionExpression when FuctionBody is strict code")] public void _13_1__18__s() { RunFile(@"13.1-18-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier \'arguments\' appears within a FormalParameterList of a strict mode FunctionDeclaration in strict eval code")] public void _13_1__19__s() { RunFile(@"13.1-19-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier \'eval\' appears within a FormalParameterList of a strict mode FunctionDeclaration")] public void _13_1__1__s() { RunFile(@"13.1-1-s.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if the identifier \'arguments\' appears within a FormalParameterList of a strict mode FunctionDeclaration when FuctionBody is strict code")] public void _13_1__20__s() { RunFile(@"13.1-20-s.js"); }
        [Test(Description = "eval allowed as formal parameter name of a non-strict function declaration")] public void _13_1__2__1() { RunFile(@"13.1-2-1.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if the identifier \'arguments\' appears within a FormalParameterList of a strict mode FunctionExpression in strict eval code")] public void _13_1__21__s() { RunFile(@"13.1-21-s.js"); }
        [Test(Description = "eval allowed as formal parameter name of a non-strict function expression")] public void _13_1__2__2() { RunFile(@"13.1-2-2.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if the identifier \'arguments\' appears within a FormalParameterList of a strict mode FunctionExpression when FuctionBody is strict code")] public void _13_1__22__s() { RunFile(@"13.1-22-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionDeclaration that is contained in eval strict code and the function has two identical parameters")] public void _13_1__23__s() { RunFile(@"13.1-23-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionDeclaration whose FunctionBody is contained in strict code and the function has two identical parameters")] public void _13_1__24__s() { RunFile(@"13.1-24-s.js"); }
        [Test(Description = "arguments allowed as formal parameter name of a non-strict function declaration")] public void _13_1__2__5() { RunFile(@"13.1-2-5.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionDeclaration that is contained in eval strict code and the function has two identical parameters which are separated by a unique parameter name")] public void _13_1__25__s() { RunFile(@"13.1-25-s.js"); }
        [Test(Description = "arguments allowed as formal parameter name of a non-strict function expression")] public void _13_1__2__6() { RunFile(@"13.1-2-6.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionDeclaration whose FunctionBody is contained in strict code and the function has two identical parameters which are separated by a unique parameter name")] public void _13_1__26__s() { RunFile(@"13.1-26-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionDeclaration that is contained in eval strict code and the function has three identical parameters")] public void _13_1__27__s() { RunFile(@"13.1-27-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionDeclaration whose FunctionBody is contained in strict code and the function has three identical parameters")] public void _13_1__28__s() { RunFile(@"13.1-28-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionExpression that is contained in eval strict code and the function has two identical parameters")] public void _13_1__29__s() { RunFile(@"13.1-29-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier \'eval\' appears within a FormalParameterList of a strict mode FunctionExpression")] public void _13_1__2__s() { RunFile(@"13.1-2-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionExpression whose FunctionBody is contained in strict code and the function has two identical parameters")] public void _13_1__30__s() { RunFile(@"13.1-30-s.js"); }
        [Test(Description = "eval allowed as function identifier in non-strict function declaration")] public void _13_1__3__1() { RunFile(@"13.1-3-1.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionExpression that is contained in eval strict code and the function has two identical parameters, which are separated by a unique parameter name")] public void _13_1__31__s() { RunFile(@"13.1-31-s.js"); }
        [Test(Description = "eval allowed as function identifier in non-strict function expression")] public void _13_1__3__2() { RunFile(@"13.1-3-2.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created using a FunctionExpression whose FunctionBody is strict and the function has two identical parameters, which are separated by a unique parameter name")] public void _13_1__32__s() { RunFile(@"13.1-32-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if function is created using a FunctionExpression that is contained in eval strict code and the function has three identical parameters")] public void _13_1__33__s() { RunFile(@"13.1-33-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if a function declaration has three identical parameters with a strict mode body")] public void _13_1__34__s() { RunFile(@"13.1-34-s.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if \'eval\' occurs as the function name of a FunctionDeclaration in strict eval code")] public void _13_1__35__s() { RunFile(@"13.1-35-s.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if \'eval\' occurs as the function name of a FunctionDeclaration whose FunctionBody is in strict mode")] public void _13_1__36__s() { RunFile(@"13.1-36-s.js"); }
        [Test(Description = "arguments allowed as function identifier in non-strict function declaration")] public void _13_1__3__7() { RunFile(@"13.1-3-7.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if \'eval\' occurs as the Identifier of a FunctionExpression in strict eval code")] public void _13_1__37__s() { RunFile(@"13.1-37-s.js"); }
        [Test(Description = "arguments allowed as function identifier in non-strict function expression")] public void _13_1__3__8() { RunFile(@"13.1-3-8.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if \'eval\' occurs as the Identifier of a FunctionExpression whose FunctionBody is contained in strict code")] public void _13_1__38__s() { RunFile(@"13.1-38-s.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if \'arguments\' occurs as the function name of a FunctionDeclaration in strict eval code")] public void _13_1__39__s() { RunFile(@"13.1-39-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier \'arguments\' appears within a FormalParameterList of a strict mode FunctionDeclaration")] public void _13_1__3__s() { RunFile(@"13.1-3-s.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if \'arguments\' occurs as the Identifier of a FunctionDeclaration whose FunctionBody is contained in strict code")] public void _13_1__40__s() { RunFile(@"13.1-40-s.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if \'arguments\' occurs as the Identifier of a FunctionExpression in strict eval code")] public void _13_1__41__s() { RunFile(@"13.1-41-s.js"); }
        [Test(Description = "StrictMode - SyntaxError is thrown if \'arguments\' occurs as the Identifier of a FunctionExpression whose FunctionBody is contained in strict code")] public void _13_1__42__s() { RunFile(@"13.1-42-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier \'arguments\' appears within a FormalParameterList of a strict mode FunctionExpression")] public void _13_1__4__s() { RunFile(@"13.1-4-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is declared in \'strict mode\' using a FunctionDeclaration and the function has two identical parameters")] public void _13_1__5__s() { RunFile(@"13.1-5-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created in \'strict mode\' using a FunctionDeclaration and the function has two identical parameters, which are separated by a unique parameter name")] public void _13_1__6__s() { RunFile(@"13.1-6-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created in \'strict mode\' using a FunctionDeclaration and the function has three identical parameters")] public void _13_1__7__s() { RunFile(@"13.1-7-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created in \'strict mode\' using a FunctionExpression and the function has two identical parameters")] public void _13_1__8__s() { RunFile(@"13.1-8-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if a function is created in \'strict mode\' using a FunctionExpression and the function has two identical parameters, which are separated by a unique parameter name")] public void _13_1__9__s() { RunFile(@"13.1-9-s.js"); }
    }
}