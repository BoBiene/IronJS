// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.Types
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class TheStringTypeTests : SputnikTestFixture
    {
        public TheStringTypeTests()
            : base(@"Conformance\08_Types\8.4_The_String_Type")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [TestCategory("ECMA 7.8.4")]
        [Description("Any variable that has been assigned with string literal has the type string")]
        public void S8_4_A1()
        {
            RunFile(@"S8.4_A1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [TestCategory("ECMA 7.8.4")]
        [Description("Both unicode and ascii chars are allowed")]
        public void S8_4_A10()
        {
            RunFile(@"S8.4_A10.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [TestCategory("ECMA 7.8.4")]
        [Description("Presence of reserved words in string literal are allowed")]
        public void S8_4_A11()
        {
            RunFile(@"S8.4_A11.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [TestCategory("ECMA 7.8.4")]
        [Description("Assignment to string literal calls String constructor")]
        public void S8_4_A12()
        {
            RunFile(@"S8.4_A12.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [Description("When appears not closed single-quote program failes")]
        public void S8_4_A13_T1()
        {
            RunFile_ExpectException(@"S8.4_A13_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [Description("When appears not closed single-quote program failes")]
        public void S8_4_A13_T2()
        {
            RunFile_ExpectException(@"S8.4_A13_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [Description("When appears not closed single-quote program failes")]
        public void S8_4_A13_T3()
        {
            RunFile_ExpectException(@"S8.4_A13_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [Description("When appears not closed double-quote program failes")]
        public void S8_4_A14_T1()
        {
            RunFile_ExpectException(@"S8.4_A14_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [Description("When appears not closed double-quote program failes")]
        public void S8_4_A14_T2()
        {
            RunFile_ExpectException(@"S8.4_A14_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [Description("When appears not closed double-quote program failes")]
        public void S8_4_A14_T3()
        {
            RunFile_ExpectException(@"S8.4_A14_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [TestCategory("ECMA 7.8.4")]
        [Description("Empty string has type string")]
        public void S8_4_A2()
        {
            RunFile(@"S8.4_A2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [Description("String type has a length property")]
        public void S8_4_A3()
        {
            RunFile(@"S8.4_A3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [Description("Empty string variable has a length property")]
        public void S8_4_A4()
        {
            RunFile(@"S8.4_A4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [TestCategory("ECMA 7.8.4")]
        [Description("Zero \"\\0\" not terminates the string(C string)")]
        public void S8_4_A5()
        {
            RunFile(@"S8.4_A5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [TestCategory("ECMA 7.8.4")]
        [Description("Large string 4096 bytes")]
        public void S8_4_A6_1()
        {
            RunFile(@"S8.4_A6.1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [TestCategory("ECMA 7.8.4")]
        [Description("Large string 8192 bytes")]
        public void S8_4_A6_2()
        {
            RunFile(@"S8.4_A6.2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [TestCategory("ECMA 7.8.4")]
        [Description("<LF> between chunks of one string not allowed")]
        public void S8_4_A7_1()
        {
            RunFile_ExpectException(@"S8.4_A7.1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [TestCategory("ECMA 7.8.4")]
        [Description("<CR> between chunks of one string not allowed")]
        public void S8_4_A7_2()
        {
            RunFile_ExpectException(@"S8.4_A7.2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [TestCategory("ECMA 7.8.4")]
        [Description("<PS> between chunks of one string not allowed")]
        public void S8_4_A7_3()
        {
            RunFile_ExpectException(@"S8.4_A7.3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [TestCategory("ECMA 7.8.4")]
        [Description("<LS> between chunks of one string not allowed")]
        public void S8_4_A7_4()
        {
            RunFile_ExpectException(@"S8.4_A7.4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [TestCategory("ECMA 7.8.4")]
        [Description("Empty string, 0, false are all equal (==) to each other, since they all evaluate to 0")]
        public void S8_4_A8()
        {
            RunFile(@"S8.4_A8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [TestCategory("ECMA 7.8.4")]
        [Description("Assignment to string literals calls String constructor")]
        public void S8_4_A9_T1()
        {
            RunFile(@"S8.4_A9_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [TestCategory("ECMA 7.8.4")]
        [Description("Assignment to string literals calls String constructor")]
        public void S8_4_A9_T2()
        {
            RunFile(@"S8.4_A9_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.4")]
        [TestCategory("ECMA 7.8.4")]
        [Description("Assignment to string literals calls String constructor")]
        public void S8_4_A9_T3()
        {
            RunFile(@"S8.4_A9_T3.js");
        }
    }
}