// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.TheGlobalObject.URIHandlingFunctionProperties
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class EncodeURIComponentTests : SputnikTestFixture
    {
        public EncodeURIComponentTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.1_The_Global_Object\15.1.3_URI_Handling_Function_Properties\15.1.3.4_encodeURIComponent")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("If string.charAt(k) in [0xDC00 - 0xDFFF], throw URIError")]
        public void S15_1_3_4_A1_1_T1()
        {
            RunFile(@"S15.1.3.4_A1.1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("If string.charAt(k) in [0xDC00 - 0xDFFF], throw URIError")]
        public void S15_1_3_4_A1_1_T2()
        {
            RunFile(@"S15.1.3.4_A1.1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("If string.charAt(k) in [0xD800 - 0xDBFF] and string.length = k + 1, throw URIError")]
        public void S15_1_3_4_A1_2_T1()
        {
            RunFile(@"S15.1.3.4_A1.2_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("If string.charAt(k) in [0xD800 - 0xDBFF] and string.length = k + 1, throw URIError")]
        public void S15_1_3_4_A1_2_T2()
        {
            RunFile(@"S15.1.3.4_A1.2_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("If string.charAt(k) in [0xD800 - 0xDBFF] and string.charAt(k+1) not in [0xDC00 - 0xDFFF], throw URIError")]
        public void S15_1_3_4_A1_3_T1()
        {
            RunFile(@"S15.1.3.4_A1.3_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("If string.charAt(k) in [0x0000 - 0x007F]\\[uriUnescaped], return 1 octet (00000000 0zzzzzzz -> 0zzzzzzz)")]
        public void S15_1_3_4_A2_1_T1()
        {
            RunFile(@"S15.1.3.4_A2.1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("If string.charAt(k) in [0x0080 - 0x07FF], return 2 octets (00000yyy yyzzzzzz -> 110yyyyy 10zzzzzz)")]
        public void S15_1_3_4_A2_2_T1()
        {
            RunFile(@"S15.1.3.4_A2.2_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("If string.charAt(k) in [0x0800 - 0xD7FF], return 3 octets (xxxxyyyy yyzzzzzz -> 1110xxxx 10yyyyyy 10zzzzzz)")]
        public void S15_1_3_4_A2_3_T1()
        {
            RunFile(@"S15.1.3.4_A2.3_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("If string.charAt(k) in [0xD800 - 0xDBFF] and string.charAt(k+1) in [0xDC00 \uFFFD 0xDFFF], return 4 octets (000wwwxx xxxxyyyy yyzzzzzz -> 11110www 10xxxxxx 10yyyyyy 10zzzzzz)")]
        public void S15_1_3_4_A2_4_T1()
        {
            RunFile(@"S15.1.3.4_A2.4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("If string.charAt(k) in [0xD800 - 0xDBFF] and string.charAt(k+1) in [0xDC00 \uFFFD 0xDFFF], return 4 octets (000wwwxx xxxxyyyy yyzzzzzz -> 11110www 10xxxxxx 10yyyyyy 10zzzzzz)")]
        public void S15_1_3_4_A2_4_T2()
        {
            RunFile(@"S15.1.3.4_A2.4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("If string.charAt(k) in [0xE000 - 0xFFFF], return 3 octets (xxxxyyyy yyzzzzzz -> 1110xxxx 10yyyyyy 10zzzzzz)")]
        public void S15_1_3_4_A2_5_T1()
        {
            RunFile(@"S15.1.3.4_A2.5_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("unescapedURIComponentSet not containing uriReserved")]
        public void S15_1_3_4_A3_1_T1()
        {
            RunFile(@"S15.1.3.4_A3.1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("unescapedURIComponentSet containing one instance of each character valid in uriUnescaped")]
        public void S15_1_3_4_A3_2_T1()
        {
            RunFile(@"S15.1.3.4_A3.2_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("unescapedURIComponentSet containing one instance of each character valid in uriUnescaped")]
        public void S15_1_3_4_A3_2_T2()
        {
            RunFile(@"S15.1.3.4_A3.2_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("unescapedURIComponentSet containing one instance of each character valid in uriUnescaped")]
        public void S15_1_3_4_A3_2_T3()
        {
            RunFile(@"S15.1.3.4_A3.2_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("unescapedURIComponentSet not containing \"#\"")]
        public void S15_1_3_4_A3_3_T1()
        {
            RunFile(@"S15.1.3.4_A3.3_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("URI tests")]
        public void S15_1_3_4_A4_T1()
        {
            RunFile(@"S15.1.3.4_A4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("URI tests")]
        public void S15_1_3_4_A4_T2()
        {
            RunFile(@"S15.1.3.4_A4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("URI tests")]
        public void S15_1_3_4_A4_T3()
        {
            RunFile(@"S15.1.3.4_A4_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("URI tests")]
        public void S15_1_3_4_A4_T4()
        {
            RunFile(@"S15.1.3.4_A4_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [TestCategory("ECMA 15.2.4.7")]
        [TestCategory("ECMA 12.6.4")]
        [Description("The length property of encodeURIComponent has the attribute DontEnum")]
        public void S15_1_3_4_A5_1()
        {
            RunFile(@"S15.1.3.4_A5.1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [TestCategory("ECMA 15.2.4.5")]
        [TestCategory("ECMA 11.4.1")]
        [Description("The length property of encodeURIComponent has the attribute DontDelete")]
        public void S15_1_3_4_A5_2()
        {
            RunFile(@"S15.1.3.4_A5.2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("The length property of encodeURIComponent has the attribute ReadOnly")]
        public void S15_1_3_4_A5_3()
        {
            RunFile(@"S15.1.3.4_A5.3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("The length property of encodeURIComponent is 1")]
        public void S15_1_3_4_A5_4()
        {
            RunFile(@"S15.1.3.4_A5.4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [TestCategory("ECMA 15.2.4.7")]
        [TestCategory("ECMA 12.6.4")]
        [Description("The encodeURIComponent property has the attribute DontEnum")]
        public void S15_1_3_4_A5_5()
        {
            RunFile(@"S15.1.3.4_A5.5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [Description("The encodeURIComponent property has not prototype property")]
        public void S15_1_3_4_A5_6()
        {
            RunFile(@"S15.1.3.4_A5.6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [TestCategory("ECMA 11.2.2")]
        [Description("The encodeURIComponent property can\'t be used as constructor")]
        public void S15_1_3_4_A5_7()
        {
            RunFile(@"S15.1.3.4_A5.7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.1.3.4")]
        [TestCategory("ECMA 9.8")]
        [TestCategory("ECMA 8.6.2.6")]
        [Description("Operator use ToString")]
        public void S15_1_3_4_A6_T1()
        {
            RunFile(@"S15.1.3.4_A6_T1.js");
        }
    }
}