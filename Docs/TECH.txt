* Hidden classes (stolen from V8)
* Building hidden classes at compile time for resolvable cases
* Inline caching (CallSite<T> for most, custom for property access)
* Static caching of CallSite<T> and MethodInfo objects
* Custom closures classes, resolved at compile time, using IjsClosureCell<T>
* A-head of time compilation of regexps where possible
* Only generate arguments object if it's used in function body

* Compile time analysis of global/local variables and parameters
	> String concatenation, turn (1 + "" + b) into String.Concat(1, "", b)
	> Number addition
		- Turn 1 + true into Add(1, true) without going through the DLR
		- Turn a + true into Add(a, true), only works if we know that a is a number

* Function type specializing JIT compiler
	> Requires a special function calling code instead of the DLR CallSite<T> convention
	> Done in background thread to not cause pauses