// <auto-generated />
namespace IronJS.Tests.UnitTests.IE9.chapter15._15_4._15_4_4
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class _15_4_4_18_Tests : IE9TestFixture
    {
        public _15_4_4_18_Tests() : base(@"chapter15\15.4\15.4.4\15.4.4.18") { }

        [Test(Description = "Array.prototype.forEach must exist as a function")] public void _15_4_4_18__0__1() { RunFile(@"15.4.4.18-0-1.js"); }
        [Test(Description = "Array.prototype.forEach.length must be 1")] public void _15_4_4_18__0__2() { RunFile(@"15.4.4.18-0-2.js"); }
        [Test(Description = "Array.prototype.forEach applied to undefined")] public void _15_4_4_18__1__1() { RunFile(@"15.4.4.18-1-1.js"); }
        [Test(Description = "Array.prototype.forEach applied to the Math object")] public void _15_4_4_18__1__10() { RunFile(@"15.4.4.18-1-10.js"); }
        [Test(Description = "Array.prototype.forEach applied to Date object")] public void _15_4_4_18__1__11() { RunFile(@"15.4.4.18-1-11.js"); }
        [Test(Description = "Array.prototype.forEach applied to RegExp object")] public void _15_4_4_18__1__12() { RunFile(@"15.4.4.18-1-12.js"); }
        [Test(Description = "Array.prototype.forEach applied to the JSON object")] public void _15_4_4_18__1__13() { RunFile(@"15.4.4.18-1-13.js"); }
        [Test(Description = "Array.prototype.forEach applied to Error object")] public void _15_4_4_18__1__14() { RunFile(@"15.4.4.18-1-14.js"); }
        [Test(Description = "Array.prototype.forEach applied to the Arguments object")] public void _15_4_4_18__1__15() { RunFile(@"15.4.4.18-1-15.js"); }
        [Test(Description = "Array.prototype.forEach applied to null")] public void _15_4_4_18__1__2() { RunFile(@"15.4.4.18-1-2.js"); }
        [Test(Description = "Array.prototype.forEach applied to boolean primitive")] public void _15_4_4_18__1__3() { RunFile(@"15.4.4.18-1-3.js"); }
        [Test(Description = "Array.prototype.forEach applied to Boolean object")] public void _15_4_4_18__1__4() { RunFile(@"15.4.4.18-1-4.js"); }
        [Test(Description = "Array.prototype.forEach applied to number primitive")] public void _15_4_4_18__1__5() { RunFile(@"15.4.4.18-1-5.js"); }
        [Test(Description = "Array.prototype.forEach applied to Number object")] public void _15_4_4_18__1__6() { RunFile(@"15.4.4.18-1-6.js"); }
        [Test(Description = "Array.prototype.forEach applied to string primitive")] public void _15_4_4_18__1__7() { RunFile(@"15.4.4.18-1-7.js"); }
        [Test(Description = "Array.prototype.forEach applied to String object")] public void _15_4_4_18__1__8() { RunFile(@"15.4.4.18-1-8.js"); }
        [Test(Description = "Array.prototype.forEach applied to Function object")] public void _15_4_4_18__1__9() { RunFile(@"15.4.4.18-1-9.js"); }
        [Test(Description = "Array.prototype.forEach - \'length\' is own data property on an Array-like object")] public void _15_4_4_18__2__1() { RunFile(@"15.4.4.18-2-1.js"); }
        [Test(Description = "Array.prototype.forEach applied to Array-like object, \'length\' is an inherited accessor property")] public void _15_4_4_18__2__10() { RunFile(@"15.4.4.18-2-10.js"); }
        [Test(Description = "Array.prototype.forEach applied to Array-like object, \'length\' is an own accessor property without a get function")] public void _15_4_4_18__2__11() { RunFile(@"15.4.4.18-2-11.js"); }
        [Test(Description = "Array.prototype.forEach - \'length\' is own accessor property without a get function that overrides an inherited accessor property on an Array")] public void _15_4_4_18__2__12() { RunFile(@"15.4.4.18-2-12.js"); }
        [Test(Description = "Array.prototype.forEach applied to the Array-like object that \'length\' is inherited accessor property without a get function")] public void _15_4_4_18__2__13() { RunFile(@"15.4.4.18-2-13.js"); }
        [Test(Description = "Array.prototype.forEach applied to the Array-like object that \'length\' property doesn\'t exist")] public void _15_4_4_18__2__14() { RunFile(@"15.4.4.18-2-14.js"); }
        [Test(Description = "Array.prototype.forEach - \'length\' is property of the global object")] public void _15_4_4_18__2__15() { RunFile(@"15.4.4.18-2-15.js"); }
        [Test(Description = "Array.prototype.forEach applied to the Arguments object, which implements its own property get method")] public void _15_4_4_18__2__17() { RunFile(@"15.4.4.18-2-17.js"); }
        [Test(Description = "Array.prototype.forEach applied to String object, which implements its own property get method")] public void _15_4_4_18__2__18() { RunFile(@"15.4.4.18-2-18.js"); }
        [Test(Description = "Array.prototype.forEach applied to Function object, which implements its own property get method")] public void _15_4_4_18__2__19() { RunFile(@"15.4.4.18-2-19.js"); }
        [Test(Description = "Array.prototype.forEach - \'length\' is own data property on an Array")] public void _15_4_4_18__2__2() { RunFile(@"15.4.4.18-2-2.js"); }
        [Test(Description = "Array.prototype.forEach - \'length\' is an own data property that overrides an inherited data property on an Array-like object")] public void _15_4_4_18__2__3() { RunFile(@"15.4.4.18-2-3.js"); }
        [Test(Description = "Array.prototype.forEach - \'length\' is own data property that overrides an inherited data property on an Array")] public void _15_4_4_18__2__4() { RunFile(@"15.4.4.18-2-4.js"); }
        [Test(Description = "Array.prototype.forEach applied to Array-like object, \'length\' is an own data property that overrides an inherited accessor property")] public void _15_4_4_18__2__5() { RunFile(@"15.4.4.18-2-5.js"); }
        [Test(Description = "Array.prototype.forEach applied to Array-like object, \'length\' is an inherited data property")] public void _15_4_4_18__2__6() { RunFile(@"15.4.4.18-2-6.js"); }
        [Test(Description = "Array.prototype.forEach applied to Array-like object, \'length\' is an own accessor property")] public void _15_4_4_18__2__7() { RunFile(@"15.4.4.18-2-7.js"); }
        [Test(Description = "Array.prototype.forEach applied to Array-like object, \'length\' is an own accessor property that overrides an inherited data property")] public void _15_4_4_18__2__8() { RunFile(@"15.4.4.18-2-8.js"); }
        [Test(Description = "Array.prototype.forEach applied to Array-like object, \'length\' is an own accessor property that overrides an inherited accessor property")] public void _15_4_4_18__2__9() { RunFile(@"15.4.4.18-2-9.js"); }
        [Test(Description = "Array.prototype.forEach - value of \'length\' is undefined")] public void _15_4_4_18__3__1() { RunFile(@"15.4.4.18-3-1.js"); }
        [Test(Description = "Array.prototype.forEach - value of \'length\' is a number (value is NaN)")] public void _15_4_4_18__3__10() { RunFile(@"15.4.4.18-3-10.js"); }
        [Test(Description = "Array.prototype.forEach - \'length\' is a string containing a positive number")] public void _15_4_4_18__3__11() { RunFile(@"15.4.4.18-3-11.js"); }
        [Test(Description = "Array.prototype.forEach - \'length\' is a string containing a negative number")] public void _15_4_4_18__3__12() { RunFile(@"15.4.4.18-3-12.js"); }
        [Test(Description = "Array.prototype.forEach - \'length\' is a string containing a decimal number")] public void _15_4_4_18__3__13() { RunFile(@"15.4.4.18-3-13.js"); }
        [Test(Description = "Array.prototype.forEach - \'length\' is a string containing +/-Infinity")] public void _15_4_4_18__3__14() { RunFile(@"15.4.4.18-3-14.js"); }
        [Test(Description = "Array.prototype.forEach - \'length\' is a string containing an exponential number")] public void _15_4_4_18__3__15() { RunFile(@"15.4.4.18-3-15.js"); }
        [Test(Description = "Array.prototype.forEach - \'length\' is a string containing a hex number")] public void _15_4_4_18__3__16() { RunFile(@"15.4.4.18-3-16.js"); }
        [Test(Description = "Array.prototype.forEach - \'length\' is a string containing a number with leading zeros")] public void _15_4_4_18__3__17() { RunFile(@"15.4.4.18-3-17.js"); }
        [Test(Description = "Array.prototype.forEach - value of \'length\' is a string that can\'t convert to a number")] public void _15_4_4_18__3__18() { RunFile(@"15.4.4.18-3-18.js"); }
        [Test(Description = "Array.prototype.forEach - value of \'length\' is an Object which has an own toString method.")] public void _15_4_4_18__3__19() { RunFile(@"15.4.4.18-3-19.js"); }
        [Test(Description = "Array.prototype.forEach - value of \'length\' is a boolean (value is true)")] public void _15_4_4_18__3__2() { RunFile(@"15.4.4.18-3-2.js"); }
        [Test(Description = "Array.prototype.forEach - value of \'length\' is an Object which has an own valueOf method.")] public void _15_4_4_18__3__20() { RunFile(@"15.4.4.18-3-20.js"); }
        [Test(Description = "Array.prototype.forEach - \'length\' is an object that has an own valueOf method that returns an object and toString method that returns a string")] public void _15_4_4_18__3__21() { RunFile(@"15.4.4.18-3-21.js"); }
        [Test(Description = "Array.prototype.forEach throws TypeError exception when \'length\' is an object with toString and valueOf methods that don\uFFFDt return primitive values")] public void _15_4_4_18__3__22() { RunFile(@"15.4.4.18-3-22.js"); }
        [Test(Description = "Array.prototype.forEach uses inherited valueOf method when \'length\' is an object with an own toString and inherited valueOf methods")] public void _15_4_4_18__3__23() { RunFile(@"15.4.4.18-3-23.js"); }
        [Test(Description = "Array.prototype.forEach - value of \'length\' is a positive non-integer, ensure truncation occurs in the proper direction")] public void _15_4_4_18__3__24() { RunFile(@"15.4.4.18-3-24.js"); }
        [Test(Description = "Array.prototype.forEach - value of \'length\' is a negative non-integer, ensure truncation occurs in the proper direction")] public void _15_4_4_18__3__25() { RunFile(@"15.4.4.18-3-25.js"); }
        [Test(Description = "Array.prototype.forEach - value of \'length\' is boundary value (2^32)")] public void _15_4_4_18__3__28() { RunFile(@"15.4.4.18-3-28.js"); }
        [Test(Description = "Array.prototype.forEach - value of \'length\' is boundary value (2^32 + 1)")] public void _15_4_4_18__3__29() { RunFile(@"15.4.4.18-3-29.js"); }
        [Test(Description = "Array.prototype.forEach - value of \'length\' is a number (value is 0)")] public void _15_4_4_18__3__3() { RunFile(@"15.4.4.18-3-3.js"); }
        [Test(Description = "Array.prototype.forEach - value of \'length\' is a number (value is +0)")] public void _15_4_4_18__3__4() { RunFile(@"15.4.4.18-3-4.js"); }
        [Test(Description = "Array.prototype.forEach - value of \'length\' is a number (value is -0)")] public void _15_4_4_18__3__5() { RunFile(@"15.4.4.18-3-5.js"); }
        [Test(Description = "Array.prototype.forEach - value of \'length\' is a number (value is positive)")] public void _15_4_4_18__3__6() { RunFile(@"15.4.4.18-3-6.js"); }
        [Test(Description = "Array.prototype.forEach - value of \'length\' is a number (value is negative)")] public void _15_4_4_18__3__7() { RunFile(@"15.4.4.18-3-7.js"); }
        [Test(Description = "Array.prototype.forEach - value of \'length\' is a number (value is Infinity)")] public void _15_4_4_18__3__8() { RunFile(@"15.4.4.18-3-8.js"); }
        [Test(Description = "Array.prototype.forEach - value of \'length\' is a number (value is -Infinity)")] public void _15_4_4_18__3__9() { RunFile(@"15.4.4.18-3-9.js"); }
        [Test(Description = "Array.prototype.forEach throws TypeError if callbackfn is undefined")] public void _15_4_4_18__4__1() { RunFile(@"15.4.4.18-4-1.js"); }
        [Test(Description = "Array.prototype.forEach - the exception is not thrown if exception was thrown by step 2")] public void _15_4_4_18__4__10() { RunFile(@"15.4.4.18-4-10.js"); }
        [Test(Description = "Array.prototype.forEach - the exception is not thrown if exception was thrown by step 3")] public void _15_4_4_18__4__11() { RunFile(@"15.4.4.18-4-11.js"); }
        [Test(Description = "Array.prototype.forEach - \'callbackfn\' is a function")] public void _15_4_4_18__4__12() { RunFile(@"15.4.4.18-4-12.js"); }
        [Test(Description = "Array.prototype.forEach - calling with no callbackfn is the same as passing undefined for callbackfn")] public void _15_4_4_18__4__15() { RunFile(@"15.4.4.18-4-15.js"); }
        [Test(Description = "Array.prototype.forEach throws ReferenceError if callbackfn is unreferenced")] public void _15_4_4_18__4__2() { RunFile(@"15.4.4.18-4-2.js"); }
        [Test(Description = "Array.prototype.forEach throws TypeError if callbackfn is null")] public void _15_4_4_18__4__3() { RunFile(@"15.4.4.18-4-3.js"); }
        [Test(Description = "Array.prototype.forEach throws TypeError if callbackfn is boolean")] public void _15_4_4_18__4__4() { RunFile(@"15.4.4.18-4-4.js"); }
        [Test(Description = "Array.prototype.forEach throws TypeError if callbackfn is number")] public void _15_4_4_18__4__5() { RunFile(@"15.4.4.18-4-5.js"); }
        [Test(Description = "Array.prototype.forEach throws TypeError if callbackfn is string")] public void _15_4_4_18__4__6() { RunFile(@"15.4.4.18-4-6.js"); }
        [Test(Description = "Array.prototype.forEach throws TypeError if callbackfn is Object without Call internal method")] public void _15_4_4_18__4__7() { RunFile(@"15.4.4.18-4-7.js"); }
        [Test(Description = "Array.prototype.forEach - side effects produced by step 2 are visible when an exception occurs")] public void _15_4_4_18__4__8() { RunFile(@"15.4.4.18-4-8.js"); }
        [Test(Description = "Array.prototype.forEach - side effects produced by step 3 are visible when an exception occurs")] public void _15_4_4_18__4__9() { RunFile(@"15.4.4.18-4-9.js"); }
        [Test(Description = "Array.prototype.forEach - thisArg is passed")] public void _15_4_4_18__5__1() { RunFile(@"15.4.4.18-5-1.js"); }
        [Test(Description = "Array.prototype.forEach - Array Object can be used as thisArg")] public void _15_4_4_18__5__10() { RunFile(@"15.4.4.18-5-10.js"); }
        [Test(Description = "Array.prototype.forEach - String Object can be used as thisArg")] public void _15_4_4_18__5__11() { RunFile(@"15.4.4.18-5-11.js"); }
        [Test(Description = "Array.prototype.forEach - Boolean Object can be used as thisArg")] public void _15_4_4_18__5__12() { RunFile(@"15.4.4.18-5-12.js"); }
        [Test(Description = "Array.prototype.forEach - Number Object can be used as thisArg")] public void _15_4_4_18__5__13() { RunFile(@"15.4.4.18-5-13.js"); }
        [Test(Description = "Array.prototype.forEach - the Math object can be used as thisArg")] public void _15_4_4_18__5__14() { RunFile(@"15.4.4.18-5-14.js"); }
        [Test(Description = "Array.prototype.forEach - Date Object can be used as thisArg")] public void _15_4_4_18__5__15() { RunFile(@"15.4.4.18-5-15.js"); }
        [Test(Description = "Array.prototype.forEach - RegExp Object can be used as thisArg")] public void _15_4_4_18__5__16() { RunFile(@"15.4.4.18-5-16.js"); }
        [Test(Description = "Array.prototype.forEach - the JSON object can be used as thisArg")] public void _15_4_4_18__5__17() { RunFile(@"15.4.4.18-5-17.js"); }
        [Test(Description = "Array.prototype.forEach - Error Object can be used as thisArg")] public void _15_4_4_18__5__18() { RunFile(@"15.4.4.18-5-18.js"); }
        [Test(Description = "Array.prototype.forEach - the Arguments object can be used as thisArg")] public void _15_4_4_18__5__19() { RunFile(@"15.4.4.18-5-19.js"); }
        [Test(Description = "Array.prototype.forEach - thisArg is Object")] public void _15_4_4_18__5__2() { RunFile(@"15.4.4.18-5-2.js"); }
        [Test(Description = "Array.prototype.forEach - the global object can be used as thisArg")] public void _15_4_4_18__5__21() { RunFile(@"15.4.4.18-5-21.js"); }
        [Test(Description = "Array.prototype.forEach - boolean primitive can be used as thisArg")] public void _15_4_4_18__5__22() { RunFile(@"15.4.4.18-5-22.js"); }
        [Test(Description = "Array.prototype.forEach - number primitive can be used as thisArg")] public void _15_4_4_18__5__23() { RunFile(@"15.4.4.18-5-23.js"); }
        [Test(Description = "Array.prototype.forEach - string primitive can be used as thisArg")] public void _15_4_4_18__5__24() { RunFile(@"15.4.4.18-5-24.js"); }
        [Test(Description = "Array.prototype.forEach - thisArg not passed")] public void _15_4_4_18__5__25() { RunFile(@"15.4.4.18-5-25.js"); }
        [Test(Description = "Array.prototype.forEach - thisArg is Array")] public void _15_4_4_18__5__3() { RunFile(@"15.4.4.18-5-3.js"); }
        [Test(Description = "Array.prototype.forEach - thisArg is object from object template(prototype)")] public void _15_4_4_18__5__4() { RunFile(@"15.4.4.18-5-4.js"); }
        [Test(Description = "Array.prototype.forEach - thisArg is object from object template")] public void _15_4_4_18__5__5() { RunFile(@"15.4.4.18-5-5.js"); }
        [Test(Description = "Array.prototype.forEach - thisArg is function")] public void _15_4_4_18__5__6() { RunFile(@"15.4.4.18-5-6.js"); }
        [Test(Description = "Array.prototype.forEach - built-in functions can be used as thisArg")] public void _15_4_4_18__5__7() { RunFile(@"15.4.4.18-5-7.js"); }
        [Test(Description = "Array.prototype.forEach - Function Object can be used as thisArg")] public void _15_4_4_18__5__9() { RunFile(@"15.4.4.18-5-9.js"); }
        [Test(Description = "Array.prototype.forEach doesn\'t consider new elements added to array after the call")] public void _15_4_4_18__7__1() { RunFile(@"15.4.4.18-7-1.js"); }
        [Test(Description = "Array.prototype.forEach doesn\'t visit deleted elements in array after the call")] public void _15_4_4_18__7__2() { RunFile(@"15.4.4.18-7-2.js"); }
        [Test(Description = "Array.prototype.forEach doesn\'t visit deleted elements when Array.length is decreased")] public void _15_4_4_18__7__3() { RunFile(@"15.4.4.18-7-3.js"); }
        [Test(Description = "Array.prototype.forEach doesn\'t consider newly added elements in sparse array")] public void _15_4_4_18__7__4() { RunFile(@"15.4.4.18-7-4.js"); }
        [Test(Description = "Array.prototype.forEach visits deleted element in array after the call when same index is also present in prototype")] public void _15_4_4_18__7__5() { RunFile(@"15.4.4.18-7-5.js"); }
        [Test(Description = "Array.prototype.forEach - considers new value of elements in array after the call")] public void _15_4_4_18__7__7() { RunFile(@"15.4.4.18-7-7.js"); }
        [Test(Description = "Array.prototype.forEach - no observable effects occur if len is 0")] public void _15_4_4_18__7__8() { RunFile(@"15.4.4.18-7-8.js"); }
        [Test(Description = "Array.prototype.forEach - modifications to length don\'t change number of iterations")] public void _15_4_4_18__7__9() { RunFile(@"15.4.4.18-7-9.js"); }
        [Test(Description = "Array.prototype.forEach - callbackfn not called for indexes never been assigned values")] public void _15_4_4_18__7__b__1() { RunFile(@"15.4.4.18-7-b-1.js"); }
        [Test(Description = "Array.prototype.forEach - deleting property of prototype causes prototype index property not to be visited on an Array-like Object")] public void _15_4_4_18__7__b__10() { RunFile(@"15.4.4.18-7-b-10.js"); }
        [Test(Description = "Array.prototype.forEach - deleting property of prototype causes prototype index property not to be visited on an Array")] public void _15_4_4_18__7__b__11() { RunFile(@"15.4.4.18-7-b-11.js"); }
        [Test(Description = "Array.prototype.forEach - deleting own property with prototype property causes prototype index property to be visited on an Array-like object")] public void _15_4_4_18__7__b__12() { RunFile(@"15.4.4.18-7-b-12.js"); }
        [Test(Description = "Array.prototype.forEach - deleting own property with prototype property causes prototype index property to be visited on an Array")] public void _15_4_4_18__7__b__13() { RunFile(@"15.4.4.18-7-b-13.js"); }
        [Test(Description = "Array.prototype.forEach - decreasing length of array causes index property not to be visited")] public void _15_4_4_18__7__b__14() { RunFile(@"15.4.4.18-7-b-14.js"); }
        [Test(Description = "Array.prototype.forEach - decreasing length of array with prototype property causes prototype index property to be visited")] public void _15_4_4_18__7__b__15() { RunFile(@"15.4.4.18-7-b-15.js"); }
        [Test(Description = "Array.prototype.forEach - decreasing length of array does not delete non-configurable properties")] public void _15_4_4_18__7__b__16() { RunFile(@"15.4.4.18-7-b-16.js"); }
        [Test(Description = "Array.prototype.forEach - added properties in step 2 are visible here")] public void _15_4_4_18__7__b__2() { RunFile(@"15.4.4.18-7-b-2.js"); }
        [Test(Description = "Array.prototype.forEach - deleted properties in step 2 are visible here")] public void _15_4_4_18__7__b__3() { RunFile(@"15.4.4.18-7-b-3.js"); }
        [Test(Description = "Array.prototype.forEach - properties added into own object after current position are visited on an Array-like object")] public void _15_4_4_18__7__b__4() { RunFile(@"15.4.4.18-7-b-4.js"); }
        [Test(Description = "Array.prototype.forEach - properties added into own object after current position are visited on an Array")] public void _15_4_4_18__7__b__5() { RunFile(@"15.4.4.18-7-b-5.js"); }
        [Test(Description = "Array.prototype.forEach - properties can be added to prototype after current position are visited on an Array-like object")] public void _15_4_4_18__7__b__6() { RunFile(@"15.4.4.18-7-b-6.js"); }
        [Test(Description = "Array.prototype.forEach - properties can be added to prototype after current position are visited on an Array")] public void _15_4_4_18__7__b__7() { RunFile(@"15.4.4.18-7-b-7.js"); }
        [Test(Description = "Array.prototype.forEach - deleting own property causes index property not to be visited on an Array-like object")] public void _15_4_4_18__7__b__8() { RunFile(@"15.4.4.18-7-b-8.js"); }
        [Test(Description = "Array.prototype.forEach - deleting own property causes index property not to be visited on an Array")] public void _15_4_4_18__7__b__9() { RunFile(@"15.4.4.18-7-b-9.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is own data property on an Array-like object")] public void _15_4_4_18__7__c__i__1() { RunFile(@"15.4.4.18-7-c-i-1.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is own accessor property on an Array")] public void _15_4_4_18__7__c__i__10() { RunFile(@"15.4.4.18-7-c-i-10.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is own accessor property that overrides an inherited data property on an Array-like object")] public void _15_4_4_18__7__c__i__11() { RunFile(@"15.4.4.18-7-c-i-11.js"); }
        [Test(Description = " Array.prototype.forEach - element to be retrieved is own accessor property that overrides an inherited data property on an Array")] public void _15_4_4_18__7__c__i__12() { RunFile(@"15.4.4.18-7-c-i-12.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is own accessor property that overrides an inherited accessor property on an Array-like object")] public void _15_4_4_18__7__c__i__13() { RunFile(@"15.4.4.18-7-c-i-13.js"); }
        [Test(Description = " Array.prototype.forEach - element to be retrieved is own accessor property that overrides an inherited accessor property on an Array")] public void _15_4_4_18__7__c__i__14() { RunFile(@"15.4.4.18-7-c-i-14.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is inherited accessor property on an Array-like object")] public void _15_4_4_18__7__c__i__15() { RunFile(@"15.4.4.18-7-c-i-15.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is inherited accessor property on an Array")] public void _15_4_4_18__7__c__i__16() { RunFile(@"15.4.4.18-7-c-i-16.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is own accessor property without a get function on an Array-like object")] public void _15_4_4_18__7__c__i__17() { RunFile(@"15.4.4.18-7-c-i-17.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is own accessor property without a get function on an Array")] public void _15_4_4_18__7__c__i__18() { RunFile(@"15.4.4.18-7-c-i-18.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is own accessor property without a get function that overrides an inherited accessor property on an Array-like object")] public void _15_4_4_18__7__c__i__19() { RunFile(@"15.4.4.18-7-c-i-19.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is own data property on an Array")] public void _15_4_4_18__7__c__i__2() { RunFile(@"15.4.4.18-7-c-i-2.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is own accessor property without a get function that overrides an inherited accessor property on an Array")] public void _15_4_4_18__7__c__i__20() { RunFile(@"15.4.4.18-7-c-i-20.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is inherited accessor property without a get function on an Array-like object")] public void _15_4_4_18__7__c__i__21() { RunFile(@"15.4.4.18-7-c-i-21.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is inherited accessor property without a get function on an Array")] public void _15_4_4_18__7__c__i__22() { RunFile(@"15.4.4.18-7-c-i-22.js"); }
        [Test(Description = "Array.prototype.forEach - This object is an global object which contains index property")] public void _15_4_4_18__7__c__i__23() { RunFile(@"15.4.4.18-7-c-i-23.js"); }
        [Test(Description = "Array.prototype.forEach - This object is the Arguments object which implements its own property get method (number of arguments is less than number of parameters)")] public void _15_4_4_18__7__c__i__25() { RunFile(@"15.4.4.18-7-c-i-25.js"); }
        [Test(Description = "Array.prototype.forEach - This object is the Arguments object which implements its own property get method (number of arguments equals number of parameters)")] public void _15_4_4_18__7__c__i__26() { RunFile(@"15.4.4.18-7-c-i-26.js"); }
        [Test(Description = "Array.prototype.forEach - This object is the Arguments object which implements its own property get method (number of arguments is greater than number of parameters)")] public void _15_4_4_18__7__c__i__27() { RunFile(@"15.4.4.18-7-c-i-27.js"); }
        [Test(Description = "Array.prototype.forEach - element changed by getter on previous iterations is observed on an Array")] public void _15_4_4_18__7__c__i__28() { RunFile(@"15.4.4.18-7-c-i-28.js"); }
        [Test(Description = "Array.prototype.forEach - element changed by getter on previous iterations is observed on an Array-like object")] public void _15_4_4_18__7__c__i__29() { RunFile(@"15.4.4.18-7-c-i-29.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is own data property that overrides an inherited data property on an Array")] public void _15_4_4_18__7__c__i__3() { RunFile(@"15.4.4.18-7-c-i-3.js"); }
        [Test(Description = "Array.prototype.forEach - unnhandled exceptions happened in getter terminate iteration on an Array-like object")] public void _15_4_4_18__7__c__i__30() { RunFile(@"15.4.4.18-7-c-i-30.js"); }
        [Test(Description = "Array.prototype.forEach - unnhandled exceptions happened in getter terminate iteration on an Array-like object")] public void _15_4_4_18__7__c__i__31() { RunFile(@"15.4.4.18-7-c-i-31.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is own data property that overrides an inherited data property on an Array")] public void _15_4_4_18__7__c__i__4() { RunFile(@"15.4.4.18-7-c-i-4.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is own data property that overrides an inherited accessor property on an Array-like object")] public void _15_4_4_18__7__c__i__5() { RunFile(@"15.4.4.18-7-c-i-5.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is own data property that overrides an inherited accessor property on an Array")] public void _15_4_4_18__7__c__i__6() { RunFile(@"15.4.4.18-7-c-i-6.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is inherited data property on an Array-like object")] public void _15_4_4_18__7__c__i__7() { RunFile(@"15.4.4.18-7-c-i-7.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is inherited data property on an Array")] public void _15_4_4_18__7__c__i__8() { RunFile(@"15.4.4.18-7-c-i-8.js"); }
        [Test(Description = "Array.prototype.forEach - element to be retrieved is own accessor property on an Array-like object")] public void _15_4_4_18__7__c__i__9() { RunFile(@"15.4.4.18-7-c-i-9.js"); }
        [Test(Description = "Array.prototype.forEach - callbackfn called with correct parameters")] public void _15_4_4_18__7__c__ii__1() { RunFile(@"15.4.4.18-7-c-ii-1.js"); }
        [Test(Description = "Array.prototype.forEach - callbackfn is called with 1 formal parameter")] public void _15_4_4_18__7__c__ii__10() { RunFile(@"15.4.4.18-7-c-ii-10.js"); }
        [Test(Description = "Array.prototype.forEach - callbackfn is called with 2 formal parameter")] public void _15_4_4_18__7__c__ii__11() { RunFile(@"15.4.4.18-7-c-ii-11.js"); }
        [Test(Description = "Array.prototype.forEach - callbackfn is called with 3 formal parameter")] public void _15_4_4_18__7__c__ii__12() { RunFile(@"15.4.4.18-7-c-ii-12.js"); }
        [Test(Description = "Array.prototype.forEach - callbackfn that uses arguments")] public void _15_4_4_18__7__c__ii__13() { RunFile(@"15.4.4.18-7-c-ii-13.js"); }
        [Test(Description = "Array.prototype.forEach - \'this\' of \'callbackfn\' is a Boolean object when T is not an object (T is a boolean)")] public void _15_4_4_18__7__c__ii__16() { RunFile(@"15.4.4.18-7-c-ii-16.js"); }
        [Test(Description = "Array.prototype.forEach - \'this\' of \'callbackfn\' is a Number object when T is not an object (T is a number)")] public void _15_4_4_18__7__c__ii__17() { RunFile(@"15.4.4.18-7-c-ii-17.js"); }
        [Test(Description = "Array.prototype.forEach - \'this\' of \'callbackfn\' is an String object when T is not an object (T is a string)")] public void _15_4_4_18__7__c__ii__18() { RunFile(@"15.4.4.18-7-c-ii-18.js"); }
        [Test(Description = "Array.prototype.forEach - non-indexed properties are not called")] public void _15_4_4_18__7__c__ii__19() { RunFile(@"15.4.4.18-7-c-ii-19.js"); }
        [Test(Description = "Array.prototype.forEach - callbackfn takes 3 arguments")] public void _15_4_4_18__7__c__ii__2() { RunFile(@"15.4.4.18-7-c-ii-2.js"); }
        [Test(Description = "Array.prototype.forEach - callbackfn called with correct parameters (thisArg is correct)")] public void _15_4_4_18__7__c__ii__20() { RunFile(@"15.4.4.18-7-c-ii-20.js"); }
        [Test(Description = "Array.prototype.forEach - callbackfn called with correct parameters (kValue is correct)")] public void _15_4_4_18__7__c__ii__21() { RunFile(@"15.4.4.18-7-c-ii-21.js"); }
        [Test(Description = "Array.prototype.forEach - callbackfn called with correct parameters (the index k is correct)")] public void _15_4_4_18__7__c__ii__22() { RunFile(@"15.4.4.18-7-c-ii-22.js"); }
        [Test(Description = "Array.prototype.forEach - callbackfn called with correct parameters (this object O is correct)")] public void _15_4_4_18__7__c__ii__23() { RunFile(@"15.4.4.18-7-c-ii-23.js"); }
        [Test(Description = "Array.prototype.forEach - k values are passed in ascending numeric order")] public void _15_4_4_18__7__c__ii__4() { RunFile(@"15.4.4.18-7-c-ii-4.js"); }
        [Test(Description = "Array.prototype.forEach - k values are accessed during each iteration and not prior to starting the loop on an Array")] public void _15_4_4_18__7__c__ii__5() { RunFile(@"15.4.4.18-7-c-ii-5.js"); }
        [Test(Description = "Array.prototype.forEach - arguments to callbackfn are self consistent")] public void _15_4_4_18__7__c__ii__6() { RunFile(@"15.4.4.18-7-c-ii-6.js"); }
        [Test(Description = "Array.prototype.forEach - unhandled exceptions happened in callbackfn terminate iteration")] public void _15_4_4_18__7__c__ii__7() { RunFile(@"15.4.4.18-7-c-ii-7.js"); }
        [Test(Description = "Array.prototype.forEach - element changed by callbackfn on previous iterations is observed")] public void _15_4_4_18__7__c__ii__8() { RunFile(@"15.4.4.18-7-c-ii-8.js"); }
        [Test(Description = "Array.prototype.forEach - callbackfn is called with 0 formal parameter")] public void _15_4_4_18__7__c__ii__9() { RunFile(@"15.4.4.18-7-c-ii-9.js"); }
        [Test(Description = "Array.prototype.forEach doesn\'t call callbackfn if \'length\' is 0 (empty array)")] public void _15_4_4_18__8__1() { RunFile(@"15.4.4.18-8-1.js"); }
        [Test(Description = "Array.prototype.forEach - subclassed array when length is reduced")] public void _15_4_4_18__8__10() { RunFile(@"15.4.4.18-8-10.js"); }
        [Test(Description = "Array.prototype.forEach doesn\'t mutate the array on which it is called on")] public void _15_4_4_18__8__11() { RunFile(@"15.4.4.18-8-11.js"); }
        [Test(Description = "Array.prototype.forEach doesn\'t visit expandos")] public void _15_4_4_18__8__12() { RunFile(@"15.4.4.18-8-12.js"); }
        [Test(Description = "Array.prototype.forEach - undefined will be returned when \'len\' is 0")] public void _15_4_4_18__8__13() { RunFile(@"15.4.4.18-8-13.js"); }
        [Test(Description = "Array.prototype.forEach doesn\'t call callbackfn if \'length\' is 0 (subclassed Array, length overridden to null (type conversion))")] public void _15_4_4_18__8__2() { RunFile(@"15.4.4.18-8-2.js"); }
        [Test(Description = "Array.prototype.forEach doesn\'t call callbackfn if \'length\' is 0 (subclassed Array, length overridden to false (type conversion))")] public void _15_4_4_18__8__3() { RunFile(@"15.4.4.18-8-3.js"); }
        [Test(Description = "Array.prototype.forEach doesn\'t call callbackfn if \'length\' is 0 (subclassed Array, length overridden to 0 (type conversion))")] public void _15_4_4_18__8__4() { RunFile(@"15.4.4.18-8-4.js"); }
        [Test(Description = "Array.prototype.forEach doesn\'t call callbackfn if \'length\' is 0 (subclassed Array, length overridden to \'0\' (type conversion))")] public void _15_4_4_18__8__5() { RunFile(@"15.4.4.18-8-5.js"); }
        [Test(Description = "Array.prototype.forEach doesn\'t call callbackfn if \'length\' is 0 (subclassed Array, length overridden with obj with valueOf)")] public void _15_4_4_18__8__6() { RunFile(@"15.4.4.18-8-6.js"); }
        [Test(Description = "Array.prototype.forEach doesn\'t call callbackfn if \'length\' is 0 (subclassed Array, length overridden with obj w/o valueOf (toString))")] public void _15_4_4_18__8__7() { RunFile(@"15.4.4.18-8-7.js"); }
        [Test(Description = "Array.prototype.forEach doesn\'t call callbackfn if \'length\' is 0 (subclassed Array, length overridden with []")] public void _15_4_4_18__8__8() { RunFile(@"15.4.4.18-8-8.js"); }
        [Test(Description = "Array.prototype.forEach doesn\'t call callbackfn if \'length\' is 0 (subclassed Array, length overridden with [0]")] public void _15_4_4_18__8__9() { RunFile(@"15.4.4.18-8-9.js"); }
    }
}