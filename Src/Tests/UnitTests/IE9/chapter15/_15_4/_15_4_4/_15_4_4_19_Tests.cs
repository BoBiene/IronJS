// <auto-generated />
namespace IronJS.Tests.UnitTests.IE9.chapter15._15_4._15_4_4
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class _15_4_4_19_Tests : IE9TestFixture
    {
        public _15_4_4_19_Tests() : base(@"chapter15\15.4\15.4.4\15.4.4.19") { }

        [Test(Description = "Array.prototype.map must exist as a function")] public void _15_4_4_19__0__1() { RunFile(@"15.4.4.19-0-1.js"); }
        [Test(Description = "Array.prototype.map.length must be 1")] public void _15_4_4_19__0__2() { RunFile(@"15.4.4.19-0-2.js"); }
        [Test(Description = "Array.prototype.map - applied to undefined")] public void _15_4_4_19__1__1() { RunFile(@"15.4.4.19-1-1.js"); }
        [Test(Description = "Array.prototype.map - applied to the Math object")] public void _15_4_4_19__1__10() { RunFile(@"15.4.4.19-1-10.js"); }
        [Test(Description = "Array.prototype.map - applied to Date object")] public void _15_4_4_19__1__11() { RunFile(@"15.4.4.19-1-11.js"); }
        [Test(Description = "Array.prototype.map - applied to RegExp object")] public void _15_4_4_19__1__12() { RunFile(@"15.4.4.19-1-12.js"); }
        [Test(Description = "Array.prototype.map - applied to the JSON object")] public void _15_4_4_19__1__13() { RunFile(@"15.4.4.19-1-13.js"); }
        [Test(Description = "Array.prototype.map - applied to Error object")] public void _15_4_4_19__1__14() { RunFile(@"15.4.4.19-1-14.js"); }
        [Test(Description = "Array.prototype.map - applied to the Arguments object")] public void _15_4_4_19__1__15() { RunFile(@"15.4.4.19-1-15.js"); }
        [Test(Description = "Array.prototype.map - applied to null")] public void _15_4_4_19__1__2() { RunFile(@"15.4.4.19-1-2.js"); }
        [Test(Description = "Array.prototype.map - applied to boolean primitive")] public void _15_4_4_19__1__3() { RunFile(@"15.4.4.19-1-3.js"); }
        [Test(Description = "Array.prototype.map - applied to Boolean object")] public void _15_4_4_19__1__4() { RunFile(@"15.4.4.19-1-4.js"); }
        [Test(Description = "Array.prototype.map - applied to number primitive")] public void _15_4_4_19__1__5() { RunFile(@"15.4.4.19-1-5.js"); }
        [Test(Description = "Array.prototype.map - applied to Number object")] public void _15_4_4_19__1__6() { RunFile(@"15.4.4.19-1-6.js"); }
        [Test(Description = "Array.prototype.map - applied to string primitive")] public void _15_4_4_19__1__7() { RunFile(@"15.4.4.19-1-7.js"); }
        [Test(Description = "Array.prototype.map - applied to String object")] public void _15_4_4_19__1__8() { RunFile(@"15.4.4.19-1-8.js"); }
        [Test(Description = "Array.prototype.map - applied to Function object")] public void _15_4_4_19__1__9() { RunFile(@"15.4.4.19-1-9.js"); }
        [Test(Description = "Array.prototype.map - applied to Array-like object when \'length\' is an own data property")] public void _15_4_4_19__2__1() { RunFile(@"15.4.4.19-2-1.js"); }
        [Test(Description = "Array.prototype.map - applied to Array-like object, \'length\' is an inherited accessor property")] public void _15_4_4_19__2__10() { RunFile(@"15.4.4.19-2-10.js"); }
        [Test(Description = "Array.prototype.map - applied to Array-like object when \'length\' is an own accessor property without a get function")] public void _15_4_4_19__2__11() { RunFile(@"15.4.4.19-2-11.js"); }
        [Test(Description = "Array.prototype.map - applied to the Array-like object when \'length\' is own accessor property without a get function that overrides an inherited accessor property")] public void _15_4_4_19__2__12() { RunFile(@"15.4.4.19-2-12.js"); }
        [Test(Description = "Array.prototype.map - applied to the Array-like object when \'length\' is inherited accessor property without a get function")] public void _15_4_4_19__2__13() { RunFile(@"15.4.4.19-2-13.js"); }
        [Test(Description = "Array.prototype.map - applied to the Array-like object that \'length\' property doesn\'t exist")] public void _15_4_4_19__2__14() { RunFile(@"15.4.4.19-2-14.js"); }
        [Test(Description = "Array.prototype.map - when \'length\' is property of the global object")] public void _15_4_4_19__2__15() { RunFile(@"15.4.4.19-2-15.js"); }
        [Test(Description = "Array.prototype.map - applied to Arguments object, which implements its own property get method")] public void _15_4_4_19__2__17() { RunFile(@"15.4.4.19-2-17.js"); }
        [Test(Description = "Array.prototype.map - applied to String object, which implements its own property get method")] public void _15_4_4_19__2__18() { RunFile(@"15.4.4.19-2-18.js"); }
        [Test(Description = "Array.prototype.map - applied to Function object, which implements its own property get method")] public void _15_4_4_19__2__19() { RunFile(@"15.4.4.19-2-19.js"); }
        [Test(Description = "Array.prototype.map - when \'length\' is own data property on an Array")] public void _15_4_4_19__2__2() { RunFile(@"15.4.4.19-2-2.js"); }
        [Test(Description = "Array.prototype.map - applied to Array-like object, \'length\' is an own data property that overrides an inherited data property")] public void _15_4_4_19__2__3() { RunFile(@"15.4.4.19-2-3.js"); }
        [Test(Description = "Array.prototype.map - when \'length\' is own data property that overrides an inherited data property on an Array")] public void _15_4_4_19__2__4() { RunFile(@"15.4.4.19-2-4.js"); }
        [Test(Description = "Array.prototype.map - applied to Array-like object, \'length\' is an own data property that overrides an inherited accessor property")] public void _15_4_4_19__2__5() { RunFile(@"15.4.4.19-2-5.js"); }
        [Test(Description = "Array.prototype.map - applied to Array-like object, \'length\' is an inherited data property")] public void _15_4_4_19__2__6() { RunFile(@"15.4.4.19-2-6.js"); }
        [Test(Description = "Array.prototype.map - applied to Array-like object, \'length\' is an own accessor property")] public void _15_4_4_19__2__7() { RunFile(@"15.4.4.19-2-7.js"); }
        [Test(Description = "Array.prototype.map - applied to Array-like object, \'length\' is an own accessor property that overrides an inherited data property")] public void _15_4_4_19__2__8() { RunFile(@"15.4.4.19-2-8.js"); }
        [Test(Description = "Array.prototype.map - applied to Array-like object when \'length\' is an own accessor property that overrides an inherited accessor property")] public void _15_4_4_19__2__9() { RunFile(@"15.4.4.19-2-9.js"); }
        [Test(Description = "Array.prototype.map - value of \'length\' is undefined")] public void _15_4_4_19__3__1() { RunFile(@"15.4.4.19-3-1.js"); }
        [Test(Description = "Array.prototype.map - value of \'length\' is a number (value is NaN)")] public void _15_4_4_19__3__10() { RunFile(@"15.4.4.19-3-10.js"); }
        [Test(Description = "Array.prototype.map - \'length\' is a string containing a positive number")] public void _15_4_4_19__3__11() { RunFile(@"15.4.4.19-3-11.js"); }
        [Test(Description = "Array.prototype.map - \'length\' is a string containing a negative number")] public void _15_4_4_19__3__12() { RunFile(@"15.4.4.19-3-12.js"); }
        [Test(Description = "Array.prototype.map - value of \'length\' is string that is able to convert to number primitive (value is a decimal number)")] public void _15_4_4_19__3__13() { RunFile(@"15.4.4.19-3-13.js"); }
        [Test(Description = "Array.prototype.map - \'length\' is a string containing Infinity")] public void _15_4_4_19__3__14() { RunFile(@"15.4.4.19-3-14.js"); }
        [Test(Description = "Array.prototype.map - \'length\' is a string containing an exponential number")] public void _15_4_4_19__3__15() { RunFile(@"15.4.4.19-3-15.js"); }
        [Test(Description = "Array.prototype.map - \'length\' is a string containing a hex number")] public void _15_4_4_19__3__16() { RunFile(@"15.4.4.19-3-16.js"); }
        [Test(Description = "Array.prototype.map - when \'length\' is a string containing a number with leading zeros")] public void _15_4_4_19__3__17() { RunFile(@"15.4.4.19-3-17.js"); }
        [Test(Description = "Array.prototype.map - value of \'length\' is a string that can\'t convert to a number")] public void _15_4_4_19__3__18() { RunFile(@"15.4.4.19-3-18.js"); }
        [Test(Description = "Array.prototype.map - value of \'length\' is an Object which has an own toString method")] public void _15_4_4_19__3__19() { RunFile(@"15.4.4.19-3-19.js"); }
        [Test(Description = "Array.prototype.map on an Array-like object if \'length\' is 1 (length overridden to true(type conversion))")] public void _15_4_4_19__3__2() { RunFile(@"15.4.4.19-3-2.js"); }
        [Test(Description = "Array.prototype.map - value of \'length\' is an Object which has an own valueOf method")] public void _15_4_4_19__3__20() { RunFile(@"15.4.4.19-3-20.js"); }
        [Test(Description = "Array.prototype.map - \'length\' is an object that has an own valueOf method that returns an object and toString method that returns a string")] public void _15_4_4_19__3__21() { RunFile(@"15.4.4.19-3-21.js"); }
        [Test(Description = "Array.prototype.map throws TypeError exception when \'length\' is an object with toString and valueOf methods that don\uFFFDt return primitive values")] public void _15_4_4_19__3__22() { RunFile(@"15.4.4.19-3-22.js"); }
        [Test(Description = "Array.prototype.map uses inherited valueOf method when \'length\' is an object with an own toString and inherited valueOf methods")] public void _15_4_4_19__3__23() { RunFile(@"15.4.4.19-3-23.js"); }
        [Test(Description = "Array.prototype.map - value of \'length\' is a positive non-integer, ensure truncation occurs in the proper direction")] public void _15_4_4_19__3__24() { RunFile(@"15.4.4.19-3-24.js"); }
        [Test(Description = "Array.prototype.map - value of \'length\' is a negative non-integer, ensure truncation occurs in the proper direction")] public void _15_4_4_19__3__25() { RunFile(@"15.4.4.19-3-25.js"); }
        [Test(Description = "Array.prototype.map - value of \'length\' is boundary value (2^32)")] public void _15_4_4_19__3__28() { RunFile(@"15.4.4.19-3-28.js"); }
        [Test(Description = "Array.prototype.map - value of \'length\' is boundary value (2^32 + 1)")] public void _15_4_4_19__3__29() { RunFile(@"15.4.4.19-3-29.js"); }
        [Test(Description = "Array.prototype.map - value of \'length\' is a number (value is 0)")] public void _15_4_4_19__3__3() { RunFile(@"15.4.4.19-3-3.js"); }
        [Test(Description = "Array.prototype.map - value of \'length\' is a number (value is +0)")] public void _15_4_4_19__3__4() { RunFile(@"15.4.4.19-3-4.js"); }
        [Test(Description = "Array.prototype.map - value of \'length\' is a number (value is -0)")] public void _15_4_4_19__3__5() { RunFile(@"15.4.4.19-3-5.js"); }
        [Test(Description = "Array.prototype.map - \'length\' is a string containing a positive number")] public void _15_4_4_19__3__6() { RunFile(@"15.4.4.19-3-6.js"); }
        [Test(Description = "Array.prototype.map - \'length\' is a string containing a negative number")] public void _15_4_4_19__3__7() { RunFile(@"15.4.4.19-3-7.js"); }
        [Test(Description = "Array.prototype.map - value of \'length\' is a number (value is Infinity)")] public void _15_4_4_19__3__8() { RunFile(@"15.4.4.19-3-8.js"); }
        [Test(Description = "Array.prototype.map - value of \'length\' is a number (value is -Infinity)")] public void _15_4_4_19__3__9() { RunFile(@"15.4.4.19-3-9.js"); }
        [Test(Description = "Array.prototype.map throws TypeError if callbackfn is undefined")] public void _15_4_4_19__4__1() { RunFile(@"15.4.4.19-4-1.js"); }
        [Test(Description = "Array.prototype.map - the exception is not thrown if exception was thrown by step 2")] public void _15_4_4_19__4__10() { RunFile(@"15.4.4.19-4-10.js"); }
        [Test(Description = "Array.prototype.map - the exception is not thrown if exception was thrown by step 3")] public void _15_4_4_19__4__11() { RunFile(@"15.4.4.19-4-11.js"); }
        [Test(Description = "Array.prototype.map - \'callbackfn\' is a function")] public void _15_4_4_19__4__12() { RunFile(@"15.4.4.19-4-12.js"); }
        [Test(Description = "Array.prototype.map - calling with no callbackfn is the same as passing undefined for callbackfn")] public void _15_4_4_19__4__15() { RunFile(@"15.4.4.19-4-15.js"); }
        [Test(Description = "Array.prototype.map throws ReferenceError if callbackfn is unreferenced")] public void _15_4_4_19__4__2() { RunFile(@"15.4.4.19-4-2.js"); }
        [Test(Description = "Array.prototype.map throws TypeError if callbackfn is null")] public void _15_4_4_19__4__3() { RunFile(@"15.4.4.19-4-3.js"); }
        [Test(Description = "Array.prototype.map throws TypeError if callbackfn is boolean")] public void _15_4_4_19__4__4() { RunFile(@"15.4.4.19-4-4.js"); }
        [Test(Description = "Array.prototype.map throws TypeError if callbackfn is number")] public void _15_4_4_19__4__5() { RunFile(@"15.4.4.19-4-5.js"); }
        [Test(Description = "Array.prototype.map throws TypeError if callbackfn is string")] public void _15_4_4_19__4__6() { RunFile(@"15.4.4.19-4-6.js"); }
        [Test(Description = "Array.prototype.map throws TypeError if callbackfn is Object without Call internal method")] public void _15_4_4_19__4__7() { RunFile(@"15.4.4.19-4-7.js"); }
        [Test(Description = "Array.prototype.map - Side effects produced by step 2 are visible when an exception occurs")] public void _15_4_4_19__4__8() { RunFile(@"15.4.4.19-4-8.js"); }
        [Test(Description = "Array.prototype.map - Side effects produced by step 3 are visible when an exception occurs")] public void _15_4_4_19__4__9() { RunFile(@"15.4.4.19-4-9.js"); }
        [Test(Description = "Array.prototype.map - thisArg not passed")] public void _15_4_4_19__5__1() { RunFile(@"15.4.4.19-5-1.js"); }
        [Test(Description = "Array.prototype.map - Array object can be used as thisArg")] public void _15_4_4_19__5__10() { RunFile(@"15.4.4.19-5-10.js"); }
        [Test(Description = "Array.prototype.map - String object can be used as thisArg")] public void _15_4_4_19__5__11() { RunFile(@"15.4.4.19-5-11.js"); }
        [Test(Description = "Array.prototype.map - Boolean object can be used as thisArg")] public void _15_4_4_19__5__12() { RunFile(@"15.4.4.19-5-12.js"); }
        [Test(Description = "Array.prototype.map - Number object can be used as thisArg")] public void _15_4_4_19__5__13() { RunFile(@"15.4.4.19-5-13.js"); }
        [Test(Description = "Array.prototype.map - the Math object can be used as thisArg")] public void _15_4_4_19__5__14() { RunFile(@"15.4.4.19-5-14.js"); }
        [Test(Description = "Array.prototype.map - Date object can be used as thisArg")] public void _15_4_4_19__5__15() { RunFile(@"15.4.4.19-5-15.js"); }
        [Test(Description = "Array.prototype.map - RegExp object can be used as thisArg")] public void _15_4_4_19__5__16() { RunFile(@"15.4.4.19-5-16.js"); }
        [Test(Description = "Array.prototype.map - the JSON object can be used as thisArg")] public void _15_4_4_19__5__17() { RunFile(@"15.4.4.19-5-17.js"); }
        [Test(Description = "Array.prototype.map - Error object can be used as thisArg")] public void _15_4_4_19__5__18() { RunFile(@"15.4.4.19-5-18.js"); }
        [Test(Description = "Array.prototype.map - the Arguments object can be used as thisArg")] public void _15_4_4_19__5__19() { RunFile(@"15.4.4.19-5-19.js"); }
        [Test(Description = "Array.prototype.map - thisArg is Object")] public void _15_4_4_19__5__2() { RunFile(@"15.4.4.19-5-2.js"); }
        [Test(Description = "Array.prototype.map - the global object can be used as thisArg")] public void _15_4_4_19__5__21() { RunFile(@"15.4.4.19-5-21.js"); }
        [Test(Description = "Array.prototype.map - boolean primitive can be used as thisArg")] public void _15_4_4_19__5__22() { RunFile(@"15.4.4.19-5-22.js"); }
        [Test(Description = "Array.prototype.map - number primitive can be used as thisArg")] public void _15_4_4_19__5__23() { RunFile(@"15.4.4.19-5-23.js"); }
        [Test(Description = "Array.prototype.map - string primitive can be used as thisArg")] public void _15_4_4_19__5__24() { RunFile(@"15.4.4.19-5-24.js"); }
        [Test(Description = "Array.prototype.map - thisArg is Array")] public void _15_4_4_19__5__3() { RunFile(@"15.4.4.19-5-3.js"); }
        [Test(Description = "Array.prototype.map - thisArg is object from object template(prototype)")] public void _15_4_4_19__5__4() { RunFile(@"15.4.4.19-5-4.js"); }
        [Test(Description = "Array.prototype.map - thisArg is object from object template")] public void _15_4_4_19__5__5() { RunFile(@"15.4.4.19-5-5.js"); }
        [Test(Description = "Array.prototype.map - thisArg is function")] public void _15_4_4_19__5__6() { RunFile(@"15.4.4.19-5-6.js"); }
        [Test(Description = "Array.prototype.map - built-in functions can be used as thisArg")] public void _15_4_4_19__5__7() { RunFile(@"15.4.4.19-5-7.js"); }
        [Test(Description = "Array.prototype.map - Function object can be used as thisArg")] public void _15_4_4_19__5__9() { RunFile(@"15.4.4.19-5-9.js"); }
        [Test(Description = "Array.prototype.map - Array.isArray returns true when input argument is the ourput array")] public void _15_4_4_19__6__1() { RunFile(@"15.4.4.19-6-1.js"); }
        [Test(Description = "Array.prototype.map - the returned array is instanceof Array")] public void _15_4_4_19__6__2() { RunFile(@"15.4.4.19-6-2.js"); }
        [Test(Description = "Array.prototype.map doesn\'t consider new elements added to array after it is called")] public void _15_4_4_19__8__1() { RunFile(@"15.4.4.19-8-1.js"); }
        [Test(Description = "Array.prototype.map considers new value of elements in array after it is called")] public void _15_4_4_19__8__2() { RunFile(@"15.4.4.19-8-2.js"); }
        [Test(Description = "Array.prototype.map doesn\'t visit deleted elements in array after the call")] public void _15_4_4_19__8__3() { RunFile(@"15.4.4.19-8-3.js"); }
        [Test(Description = "Array.prototype.map doesn\'t visit deleted elements when Array.length is decreased")] public void _15_4_4_19__8__4() { RunFile(@"15.4.4.19-8-4.js"); }
        [Test(Description = "Array.prototype.map doesn\'t consider newly added elements in sparse array")] public void _15_4_4_19__8__5() { RunFile(@"15.4.4.19-8-5.js"); }
        [Test(Description = "Array.prototype.map visits deleted element in array after the call when same index is also present in prototype")] public void _15_4_4_19__8__6() { RunFile(@"15.4.4.19-8-6.js"); }
        [Test(Description = "Array.prototype.map successful to delete the object in callbackfn")] public void _15_4_4_19__8__7() { RunFile(@"15.4.4.19-8-7.js"); }
        [Test(Description = "Array.prototype.map - no observable effects occur if length is 0 on an Array-like object")] public void _15_4_4_19__8__8() { RunFile(@"15.4.4.19-8-8.js"); }
        [Test(Description = "Array.prototype.map - modifications to length don\'t change number of iterations on an Array")] public void _15_4_4_19__8__9() { RunFile(@"15.4.4.19-8-9.js"); }
        [Test(Description = "Array.prototype.map - callbackfn not called for indexes never been assigned values")] public void _15_4_4_19__8__b__1() { RunFile(@"15.4.4.19-8-b-1.js"); }
        [Test(Description = "Array.prototype.map - deleting property of prototype causes prototype index property not to be visited on an Array-like Object")] public void _15_4_4_19__8__b__10() { RunFile(@"15.4.4.19-8-b-10.js"); }
        [Test(Description = "Array.prototype.map - deleting property of prototype causes prototype index property not to be visited on an Array")] public void _15_4_4_19__8__b__11() { RunFile(@"15.4.4.19-8-b-11.js"); }
        [Test(Description = "Array.prototype.map - deleting own property with prototype property causes prototype index property to be visited on an Array-like object")] public void _15_4_4_19__8__b__12() { RunFile(@"15.4.4.19-8-b-12.js"); }
        [Test(Description = "Array.prototype.map - deleting own property with prototype property causes prototype index property to be visited on an Array")] public void _15_4_4_19__8__b__13() { RunFile(@"15.4.4.19-8-b-13.js"); }
        [Test(Description = "Array.prototype.map - decreasing length of array causes index property not to be visited")] public void _15_4_4_19__8__b__14() { RunFile(@"15.4.4.19-8-b-14.js"); }
        [Test(Description = "Array.prototype.map - decreasing length of array with prototype property causes prototype index property to be visited")] public void _15_4_4_19__8__b__15() { RunFile(@"15.4.4.19-8-b-15.js"); }
        [Test(Description = "Array.prototype.map - decreasing length of array does not delete non-configurable properties")] public void _15_4_4_19__8__b__16() { RunFile(@"15.4.4.19-8-b-16.js"); }
        [Test(Description = "Array.prototype.map - added properties in step 2 are visible here")] public void _15_4_4_19__8__b__2() { RunFile(@"15.4.4.19-8-b-2.js"); }
        [Test(Description = "Array.prototype.map - deleted properties in step 2 are visible here")] public void _15_4_4_19__8__b__3() { RunFile(@"15.4.4.19-8-b-3.js"); }
        [Test(Description = "Array.prototype.map - properties added into own object after current position are visited on an Array-like object")] public void _15_4_4_19__8__b__4() { RunFile(@"15.4.4.19-8-b-4.js"); }
        [Test(Description = "Array.prototype.map - properties added into own object after current position are visited on an Array")] public void _15_4_4_19__8__b__5() { RunFile(@"15.4.4.19-8-b-5.js"); }
        [Test(Description = "Array.prototype.map - properties can be added to prototype after current position are visited on an Array-like object")] public void _15_4_4_19__8__b__6() { RunFile(@"15.4.4.19-8-b-6.js"); }
        [Test(Description = "Array.prototype.map - properties can be added to prototype after current position are visited on an Array")] public void _15_4_4_19__8__b__7() { RunFile(@"15.4.4.19-8-b-7.js"); }
        [Test(Description = "Array.prototype.map - deleting own property causes index property not to be visited on an Array-like object")] public void _15_4_4_19__8__b__8() { RunFile(@"15.4.4.19-8-b-8.js"); }
        [Test(Description = "Array.prototype.map - deleting own property causes index property not to be visited on an Array")] public void _15_4_4_19__8__b__9() { RunFile(@"15.4.4.19-8-b-9.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is own data property on an Array-like object")] public void _15_4_4_19__8__c__i__1() { RunFile(@"15.4.4.19-8-c-i-1.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property on an Array")] public void _15_4_4_19__8__c__i__10() { RunFile(@"15.4.4.19-8-c-i-10.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property that overrides an inherited data property on an Array-like object")] public void _15_4_4_19__8__c__i__11() { RunFile(@"15.4.4.19-8-c-i-11.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property that overrides an inherited data property on an Array")] public void _15_4_4_19__8__c__i__12() { RunFile(@"15.4.4.19-8-c-i-12.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property that overrides an inherited accessor property on an Array-like object")] public void _15_4_4_19__8__c__i__13() { RunFile(@"15.4.4.19-8-c-i-13.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property that overrides an inherited accessor property on an Array")] public void _15_4_4_19__8__c__i__14() { RunFile(@"15.4.4.19-8-c-i-14.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is inherited accessor property on an Array-like object")] public void _15_4_4_19__8__c__i__15() { RunFile(@"15.4.4.19-8-c-i-15.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is inherited accessor property on an Array")] public void _15_4_4_19__8__c__i__16() { RunFile(@"15.4.4.19-8-c-i-16.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property without a get function on an Array-like object")] public void _15_4_4_19__8__c__i__17() { RunFile(@"15.4.4.19-8-c-i-17.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property without a get function on an Array")] public void _15_4_4_19__8__c__i__18() { RunFile(@"15.4.4.19-8-c-i-18.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property without a get function that overrides an inherited accessor property on an Array")] public void _15_4_4_19__8__c__i__19() { RunFile(@"15.4.4.19-8-c-i-19.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is own data property on an Array")] public void _15_4_4_19__8__c__i__2() { RunFile(@"15.4.4.19-8-c-i-2.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property without a get function that overrides an inherited accessor property on an Array-like object")] public void _15_4_4_19__8__c__i__20() { RunFile(@"15.4.4.19-8-c-i-20.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is inherited accessor property without a get function on an Array-like object")] public void _15_4_4_19__8__c__i__21() { RunFile(@"15.4.4.19-8-c-i-21.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is inherited accessor property without a get function on an Array")] public void _15_4_4_19__8__c__i__22() { RunFile(@"15.4.4.19-8-c-i-22.js"); }
        [Test(Description = "Array.prototype.map - This object is the global object which contains index property")] public void _15_4_4_19__8__c__i__23() { RunFile(@"15.4.4.19-8-c-i-23.js"); }
        [Test(Description = "Array.prototype.map - This object is the Arguments object which implements its own property get method (number of arguments is less than number of parameters)")] public void _15_4_4_19__8__c__i__25() { RunFile(@"15.4.4.19-8-c-i-25.js"); }
        [Test(Description = "Array.prototype.map - This object is the Arguments object which implements its own property get method (number of arguments equals number of parameters)")] public void _15_4_4_19__8__c__i__26() { RunFile(@"15.4.4.19-8-c-i-26.js"); }
        [Test(Description = "Array.prototype.map - This object is the Arguments object which implements its own property get method (number of arguments is greater than number of parameters)")] public void _15_4_4_19__8__c__i__27() { RunFile(@"15.4.4.19-8-c-i-27.js"); }
        [Test(Description = "Array.prototype.map - element changed by getter on previous iterations is observed on an Array")] public void _15_4_4_19__8__c__i__28() { RunFile(@"15.4.4.19-8-c-i-28.js"); }
        [Test(Description = "Array.prototype.map - element changed by getter on previous iterations is observed on an Array-like object")] public void _15_4_4_19__8__c__i__29() { RunFile(@"15.4.4.19-8-c-i-29.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is own data property that overrides an inherited data property on an Array-like object")] public void _15_4_4_19__8__c__i__3() { RunFile(@"15.4.4.19-8-c-i-3.js"); }
        [Test(Description = "Array.prototype.map - unhandled exceptions happened in getter terminate iteration on an Array-like object")] public void _15_4_4_19__8__c__i__30() { RunFile(@"15.4.4.19-8-c-i-30.js"); }
        [Test(Description = "Array.prototype.map - unhandled exceptions happened in getter terminate iteration on an Array")] public void _15_4_4_19__8__c__i__31() { RunFile(@"15.4.4.19-8-c-i-31.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is own data property that overrides an inherited data property on an Array")] public void _15_4_4_19__8__c__i__4() { RunFile(@"15.4.4.19-8-c-i-4.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is own data property that overrides an inherited accessor property on an Array-like object")] public void _15_4_4_19__8__c__i__5() { RunFile(@"15.4.4.19-8-c-i-5.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is own data property that overrides an inherited accessor property on an Array")] public void _15_4_4_19__8__c__i__6() { RunFile(@"15.4.4.19-8-c-i-6.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is inherited data property on an Array-like object")] public void _15_4_4_19__8__c__i__7() { RunFile(@"15.4.4.19-8-c-i-7.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is inherited data property on an Array")] public void _15_4_4_19__8__c__i__8() { RunFile(@"15.4.4.19-8-c-i-8.js"); }
        [Test(Description = "Array.prototype.map - element to be retrieved is own accessor property on an Array-like object")] public void _15_4_4_19__8__c__i__9() { RunFile(@"15.4.4.19-8-c-i-9.js"); }
        [Test(Description = "Array.prototype.map - callbackfn called with correct parameters")] public void _15_4_4_19__8__c__ii__1() { RunFile(@"15.4.4.19-8-c-ii-1.js"); }
        [Test(Description = "Array.prototype.map - callbackfn is called with 1 formal parameter")] public void _15_4_4_19__8__c__ii__10() { RunFile(@"15.4.4.19-8-c-ii-10.js"); }
        [Test(Description = "Array.prototype.map - callbackfn is called with 2 formal parameters")] public void _15_4_4_19__8__c__ii__11() { RunFile(@"15.4.4.19-8-c-ii-11.js"); }
        [Test(Description = "Array.prototype.map - callbackfn is called with 3 formal parameters")] public void _15_4_4_19__8__c__ii__12() { RunFile(@"15.4.4.19-8-c-ii-12.js"); }
        [Test(Description = "Array.prototype.map - callbackfn that uses arguments object to get parameter value")] public void _15_4_4_19__8__c__ii__13() { RunFile(@"15.4.4.19-8-c-ii-13.js"); }
        [Test(Description = "Array.prototype.map - \'this\' object when T is not an object (T is a boolean primitive)")] public void _15_4_4_19__8__c__ii__16() { RunFile(@"15.4.4.19-8-c-ii-16.js"); }
        [Test(Description = "Array.prototype.map - \'this\' object when T is not an object (T is a number)")] public void _15_4_4_19__8__c__ii__17() { RunFile(@"15.4.4.19-8-c-ii-17.js"); }
        [Test(Description = "Array.prototype.map - \'this\' object when T is not an object (T is a string primitive)")] public void _15_4_4_19__8__c__ii__18() { RunFile(@"15.4.4.19-8-c-ii-18.js"); }
        [Test(Description = "Array.prototype.map - non-indexed properties are not called.")] public void _15_4_4_19__8__c__ii__19() { RunFile(@"15.4.4.19-8-c-ii-19.js"); }
        [Test(Description = "Array.prototype.map - callbackfn takes 3 arguments")] public void _15_4_4_19__8__c__ii__2() { RunFile(@"15.4.4.19-8-c-ii-2.js"); }
        [Test(Description = "Array.prototype.map - callbackfn called with correct parameters (thisArg is correct)")] public void _15_4_4_19__8__c__ii__20() { RunFile(@"15.4.4.19-8-c-ii-20.js"); }
        [Test(Description = "Array.prototype.map - callbackfn called with correct parameters (kValue is correct)")] public void _15_4_4_19__8__c__ii__21() { RunFile(@"15.4.4.19-8-c-ii-21.js"); }
        [Test(Description = "Array.prototype.map - callbackfn called with correct parameters (the index k is correct)")] public void _15_4_4_19__8__c__ii__22() { RunFile(@"15.4.4.19-8-c-ii-22.js"); }
        [Test(Description = "Array.prototype.map - callbackfn called with correct parameters (this object O is correct)")] public void _15_4_4_19__8__c__ii__23() { RunFile(@"15.4.4.19-8-c-ii-23.js"); }
        [Test(Description = "Array.prototype.map - k values are passed in acending numeric order")] public void _15_4_4_19__8__c__ii__4() { RunFile(@"15.4.4.19-8-c-ii-4.js"); }
        [Test(Description = "Array.prototype.map - k values are accessed during each iteration and not prior to starting the loop.")] public void _15_4_4_19__8__c__ii__5() { RunFile(@"15.4.4.19-8-c-ii-5.js"); }
        [Test(Description = "Array.prototype.map - arguments to callbackfn are self consistent.")] public void _15_4_4_19__8__c__ii__6() { RunFile(@"15.4.4.19-8-c-ii-6.js"); }
        [Test(Description = "Array.prototype.map - unhandled exceptions happened in callbackfn terminate iteration")] public void _15_4_4_19__8__c__ii__7() { RunFile(@"15.4.4.19-8-c-ii-7.js"); }
        [Test(Description = "Array.prototype.map - element changed by callbackfn on previous iterations is observed")] public void _15_4_4_19__8__c__ii__8() { RunFile(@"15.4.4.19-8-c-ii-8.js"); }
        [Test(Description = "Array.prototype.map - callbackfn with 0 formal parameter")] public void _15_4_4_19__8__c__ii__9() { RunFile(@"15.4.4.19-8-c-ii-9.js"); }
        [Test(Description = "Array.prototype.map - getOwnPropertyDescriptor(all true) of returned array element")] public void _15_4_4_19__8__c__iii__1() { RunFile(@"15.4.4.19-8-c-iii-1.js"); }
        [Test(Description = "Array.prototype.map - value of returned array element equals to \'mappedValue\'")] public void _15_4_4_19__8__c__iii__2() { RunFile(@"15.4.4.19-8-c-iii-2.js"); }
        [Test(Description = "Array.prototype.map - value of returned array element can be overwritten")] public void _15_4_4_19__8__c__iii__3() { RunFile(@"15.4.4.19-8-c-iii-3.js"); }
        [Test(Description = "Array.prototype.map - value of returned array element can be enumerated")] public void _15_4_4_19__8__c__iii__4() { RunFile(@"15.4.4.19-8-c-iii-4.js"); }
        [Test(Description = "Array.prototype.map - value of returned array element can be changed or deleted")] public void _15_4_4_19__8__c__iii__5() { RunFile(@"15.4.4.19-8-c-iii-5.js"); }
        [Test(Description = "Array.prototype.map doesn\'t mutate the Array on which it is called on")] public void _15_4_4_19__9__1() { RunFile(@"15.4.4.19-9-1.js"); }
        [Test(Description = "Array.prototype.map - empty array to be returned if \'length\' is 0 (subclassed Array, length overridden with obj with valueOf)")] public void _15_4_4_19__9__10() { RunFile(@"15.4.4.19-9-10.js"); }
        [Test(Description = "Array.prototype.map - returns an empty array if \'length\' is 0 (subclassed Array, length overridden with obj w/o valueOf (toString))")] public void _15_4_4_19__9__11() { RunFile(@"15.4.4.19-9-11.js"); }
        [Test(Description = "Array.prototype.map - returns an empty array if \'length\' is 0 (subclassed Array, length overridden with [])")] public void _15_4_4_19__9__12() { RunFile(@"15.4.4.19-9-12.js"); }
        [Test(Description = "Array.prototype.map - if there are no side effects of the functions, O is unmodified")] public void _15_4_4_19__9__13() { RunFile(@"15.4.4.19-9-13.js"); }
        [Test(Description = "Array.prototype.map returns new Array with same number of elements and values the result of callbackfn")] public void _15_4_4_19__9__2() { RunFile(@"15.4.4.19-9-2.js"); }
        [Test(Description = "Array.prototype.map - subclassed array when length is reduced")] public void _15_4_4_19__9__3() { RunFile(@"15.4.4.19-9-3.js"); }
        [Test(Description = "Array.prototype.map doesn\'t visit expandos")] public void _15_4_4_19__9__4() { RunFile(@"15.4.4.19-9-4.js"); }
        [Test(Description = "Array.prototype.map - empty array to be returned if \'length\' is 0 (empty array)")] public void _15_4_4_19__9__5() { RunFile(@"15.4.4.19-9-5.js"); }
        [Test(Description = "Array.prototype.map - empty array to be returned if \'length\' is 0 (subclassed Array, length overridden to null (type conversion))")] public void _15_4_4_19__9__6() { RunFile(@"15.4.4.19-9-6.js"); }
        [Test(Description = "Array.prototype.map - empty array to be returned if \'length\' is 0 (subclassed Array, length overridden to false (type conversion))")] public void _15_4_4_19__9__7() { RunFile(@"15.4.4.19-9-7.js"); }
        [Test(Description = "Array.prototype.map - empty array to be returned if \'length\' is 0 (subclassed Array, length overridden to 0 (type conversion))")] public void _15_4_4_19__9__8() { RunFile(@"15.4.4.19-9-8.js"); }
        [Test(Description = "Array.prototype.map - empty array to be returned if \'length\' is 0 (subclassed Array, length overridden to \'0\' (type conversion))")] public void _15_4_4_19__9__9() { RunFile(@"15.4.4.19-9-9.js"); }
    }
}