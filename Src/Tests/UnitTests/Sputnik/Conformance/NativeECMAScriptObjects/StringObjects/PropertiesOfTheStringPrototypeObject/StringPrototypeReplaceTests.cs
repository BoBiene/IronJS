// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.NativeECMAScriptObjects.StringObjects.PropertiesOfTheStringPrototypeObject
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class StringPrototypeReplaceTests : SputnikTestFixture
    {
        public StringPrototypeReplaceTests()
            : base(@"Conformance\15_Native_ECMA_Script_Objects\15.5_String_Objects\15.5.4_Properties_of_the_String_Prototype_Object\15.5.4.11_String.prototype.replace")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("String.prototype.replace (searchValue, replaceValue)")]
        public void S15_5_4_11_A1_T1()
        {
            RunFile(@"S15.5.4.11_A1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("String.prototype.replace (searchValue, replaceValue)")]
        public void S15_5_4_11_A1_T10()
        {
            RunFile(@"S15.5.4.11_A1_T10.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("String.prototype.replace (searchValue, replaceValue)")]
        public void S15_5_4_11_A1_T11()
        {
            RunFile(@"S15.5.4.11_A1_T11.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("String.prototype.replace (searchValue, replaceValue)")]
        public void S15_5_4_11_A1_T12()
        {
            RunFile(@"S15.5.4.11_A1_T12.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("String.prototype.replace (searchValue, replaceValue)")]
        public void S15_5_4_11_A1_T13()
        {
            RunFile(@"S15.5.4.11_A1_T13.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("String.prototype.replace (searchValue, replaceValue)")]
        public void S15_5_4_11_A1_T14()
        {
            RunFile(@"S15.5.4.11_A1_T14.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("String.prototype.replace (searchValue, replaceValue)")]
        public void S15_5_4_11_A1_T15()
        {
            RunFile(@"S15.5.4.11_A1_T15.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("String.prototype.replace (searchValue, replaceValue)")]
        public void S15_5_4_11_A1_T16()
        {
            RunFile(@"S15.5.4.11_A1_T16.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("String.prototype.replace (searchValue, replaceValue)")]
        public void S15_5_4_11_A1_T17()
        {
            RunFile(@"S15.5.4.11_A1_T17.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("String.prototype.replace (searchValue, replaceValue)")]
        public void S15_5_4_11_A1_T2()
        {
            RunFile(@"S15.5.4.11_A1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("String.prototype.replace (searchValue, replaceValue)")]
        public void S15_5_4_11_A1_T3()
        {
            RunFile(@"S15.5.4.11_A1_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("String.prototype.replace (searchValue, replaceValue)")]
        public void S15_5_4_11_A1_T4()
        {
            RunFile(@"S15.5.4.11_A1_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("String.prototype.replace (searchValue, replaceValue)")]
        public void S15_5_4_11_A1_T5()
        {
            RunFile(@"S15.5.4.11_A1_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("String.prototype.replace (searchValue, replaceValue)")]
        public void S15_5_4_11_A1_T6()
        {
            RunFile(@"S15.5.4.11_A1_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("String.prototype.replace (searchValue, replaceValue)")]
        public void S15_5_4_11_A1_T7()
        {
            RunFile(@"S15.5.4.11_A1_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("String.prototype.replace (searchValue, replaceValue)")]
        public void S15_5_4_11_A1_T8()
        {
            RunFile(@"S15.5.4.11_A1_T8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("String.prototype.replace (searchValue, replaceValue)")]
        public void S15_5_4_11_A1_T9()
        {
            RunFile(@"S15.5.4.11_A1_T9.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("The String.prototype.replace.length property has the attribute ReadOnly")]
        public void S15_5_4_11_A10()
        {
            RunFile(@"S15.5.4.11_A10.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("The length property of the replace method is 2")]
        public void S15_5_4_11_A11()
        {
            RunFile(@"S15.5.4.11_A11.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("The $ replacements are done left-to-right, and, once such are placement is performed, the new replacement text is not subject to further replacements")]
        public void S15_5_4_11_A2_T1()
        {
            RunFile(@"S15.5.4.11_A2_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("The $ replacements are done left-to-right, and, once such are placement is performed, the new replacement text is not subject to further replacements")]
        public void S15_5_4_11_A2_T10()
        {
            RunFile(@"S15.5.4.11_A2_T10.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("The $ replacements are done left-to-right, and, once such are placement is performed, the new replacement text is not subject to further replacements")]
        public void S15_5_4_11_A2_T2()
        {
            RunFile(@"S15.5.4.11_A2_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("The $ replacements are done left-to-right, and, once such are placement is performed, the new replacement text is not subject to further replacements")]
        public void S15_5_4_11_A2_T3()
        {
            RunFile(@"S15.5.4.11_A2_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("The $ replacements are done left-to-right, and, once such are placement is performed, the new replacement text is not subject to further replacements")]
        public void S15_5_4_11_A2_T4()
        {
            RunFile(@"S15.5.4.11_A2_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("The $ replacements are done left-to-right, and, once such are placement is performed, the new replacement text is not subject to further replacements")]
        public void S15_5_4_11_A2_T5()
        {
            RunFile(@"S15.5.4.11_A2_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("The $ replacements are done left-to-right, and, once such are placement is performed, the new replacement text is not subject to further replacements")]
        public void S15_5_4_11_A2_T6()
        {
            RunFile(@"S15.5.4.11_A2_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("The $ replacements are done left-to-right, and, once such are placement is performed, the new replacement text is not subject to further replacements")]
        public void S15_5_4_11_A2_T7()
        {
            RunFile(@"S15.5.4.11_A2_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("The $ replacements are done left-to-right, and, once such are placement is performed, the new replacement text is not subject to further replacements")]
        public void S15_5_4_11_A2_T8()
        {
            RunFile(@"S15.5.4.11_A2_T8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("The $ replacements are done left-to-right, and, once such are placement is performed, the new replacement text is not subject to further replacements")]
        public void S15_5_4_11_A2_T9()
        {
            RunFile(@"S15.5.4.11_A2_T9.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("replace with regexp /(uid=)(\\d+)/ returns")]
        public void S15_5_4_11_A3_T1()
        {
            RunFile(@"S15.5.4.11_A3_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("replace with regexp /(uid=)(\\d+)/ returns")]
        public void S15_5_4_11_A3_T2()
        {
            RunFile(@"S15.5.4.11_A3_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("replace with regexp /(uid=)(\\d+)/ returns")]
        public void S15_5_4_11_A3_T3()
        {
            RunFile(@"S15.5.4.11_A3_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("replace with regexp /([a-z]+)([0-9]+)/ and replace function returns ")]
        public void S15_5_4_11_A4_T1()
        {
            RunFile(@"S15.5.4.11_A4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("replace with regexp /([a-z]+)([0-9]+)/ and replace function returns ")]
        public void S15_5_4_11_A4_T2()
        {
            RunFile(@"S15.5.4.11_A4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("replace with regexp /([a-z]+)([0-9]+)/ and replace function returns ")]
        public void S15_5_4_11_A4_T3()
        {
            RunFile(@"S15.5.4.11_A4_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("replace with regexp /([a-z]+)([0-9]+)/ and replace function returns ")]
        public void S15_5_4_11_A4_T4()
        {
            RunFile(@"S15.5.4.11_A4_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("Use replace with regexp as searchValue and use $ in replaceValue")]
        public void S15_5_4_11_A5_T1()
        {
            RunFile(@"S15.5.4.11_A5_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [TestCategory("ECMA 13.2")]
        [Description("String.prototype.replace has not prototype property")]
        public void S15_5_4_11_A6()
        {
            RunFile(@"S15.5.4.11_A6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [TestCategory("ECMA 13.2")]
        [Description("String.prototype.replace can\'t be used as constructor")]
        public void S15_5_4_11_A7()
        {
            RunFile(@"S15.5.4.11_A7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("The String.prototype.replace.length property has the attribute DontEnum")]
        public void S15_5_4_11_A8()
        {
            RunFile(@"S15.5.4.11_A8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 15.5.4.11")]
        [Description("The String.prototype.replace.length property has the attribute DontDelete")]
        public void S15_5_4_11_A9()
        {
            RunFile(@"S15.5.4.11_A9.js");
        }
    }
}