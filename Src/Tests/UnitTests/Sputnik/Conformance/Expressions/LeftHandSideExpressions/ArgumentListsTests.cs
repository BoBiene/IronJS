// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.Expressions.LeftHandSideExpressions
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class ArgumentListsTests : SputnikTestFixture
    {
        public ArgumentListsTests()
            : base(@"Conformance\11_Expressions\11.2_Left_Hand_Side_Expressions\11.2.4_Argument_Lists")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.2.4")]
        [TestCategory("ECMA 11.2.3")]
        [TestCategory("ECMA 10.1.8")]
        [Description("Arguments : ()")]
        public void S11_2_4_A1_1_T1()
        {
            RunFile(@"S11.2.4_A1.1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.2.4")]
        [TestCategory("ECMA 11.2.3")]
        [TestCategory("ECMA 10.1.8")]
        [Description("Arguments : ()")]
        public void S11_2_4_A1_1_T2()
        {
            RunFile(@"S11.2.4_A1.1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.2.4")]
        [TestCategory("ECMA 11.2.3")]
        [TestCategory("ECMA 10.1.8")]
        [Description("Arguments : (ArgumentList)")]
        public void S11_2_4_A1_2_T1()
        {
            RunFile(@"S11.2.4_A1.2_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.2.4")]
        [TestCategory("ECMA 11.2.3")]
        [TestCategory("ECMA 10.1.8")]
        [Description("Arguments : (ArgumentList)")]
        public void S11_2_4_A1_2_T2()
        {
            RunFile(@"S11.2.4_A1.2_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.2.4")]
        [TestCategory("ECMA 11.2.3")]
        [TestCategory("ECMA 10.1.8")]
        [Description("Arguments : (ArgumentList : ArgumentList,, AssignmentExpression) is a bad syntax")]
        public void S11_2_4_A1_3_T1()
        {
            RunFile_ExpectException(@"S11.2.4_A1.3_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.2.4")]
        [TestCategory("ECMA 11.2.3")]
        [TestCategory("ECMA 10.1.8")]
        [Description("Arguments : (ArgumentList : ArgumentList, AssignmentExpression)")]
        public void S11_2_4_A1_4_T1()
        {
            RunFile(@"S11.2.4_A1.4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.2.4")]
        [TestCategory("ECMA 11.2.3")]
        [TestCategory("ECMA 10.1.8")]
        [Description("Arguments : (ArgumentList : ArgumentList, AssignmentExpression)")]
        public void S11_2_4_A1_4_T2()
        {
            RunFile(@"S11.2.4_A1.4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.2.4")]
        [TestCategory("ECMA 11.2.3")]
        [TestCategory("ECMA 10.1.8")]
        [Description("Arguments : (ArgumentList : ArgumentList, AssignmentExpression)")]
        public void S11_2_4_A1_4_T3()
        {
            RunFile(@"S11.2.4_A1.4_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.2.4")]
        [TestCategory("ECMA 11.2.3")]
        [TestCategory("ECMA 10.1.8")]
        [Description("Arguments : (ArgumentList : ArgumentList, AssignmentExpression)")]
        public void S11_2_4_A1_4_T4()
        {
            RunFile(@"S11.2.4_A1.4_T4.js");
        }
    }
}