// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.FunctionDefinition
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class CreatingFunctionObjectsTests : SputnikTestFixture
    {
        public CreatingFunctionObjectsTests()
            : base(@"Conformance\13_Function_Definition\13.2_Creating_Function_Objects")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("The depth of nested function calls reaches 32")]
        public void S13_2_1_A1_T1()
        {
            RunFile(@"S13.2.1_A1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("Objects as arguments are passed by reference")]
        public void S13_2_1_A4_T1()
        {
            RunFile(@"S13.2.1_A4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("Objects as arguments are passed by reference")]
        public void S13_2_1_A4_T2()
        {
            RunFile(@"S13.2.1_A4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("Objects as arguments are passed by reference")]
        public void S13_2_1_A4_T3()
        {
            RunFile(@"S13.2.1_A4_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("Objects as arguments are passed by reference")]
        public void S13_2_1_A4_T4()
        {
            RunFile(@"S13.2.1_A4_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("Closures are admitted")]
        public void S13_2_1_A5_T1()
        {
            RunFile(@"S13.2.1_A5_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("Closures are admitted")]
        public void S13_2_1_A5_T2()
        {
            RunFile(@"S13.2.1_A5_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("Primitive types are passed by value")]
        public void S13_2_1_A6_T1()
        {
            RunFile(@"S13.2.1_A6_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("Primitive types are passed by value")]
        public void S13_2_1_A6_T2()
        {
            RunFile(@"S13.2.1_A6_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("When the [[Call]] property for a Function object F is called, the following steps are taken: 2. Evaluate F\'s FunctionBody")]
        public void S13_2_1_A7_T1()
        {
            RunFile(@"S13.2.1_A7_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("When the [[Call]] property for a Function object F is called, the following steps are taken: 2. Evaluate F\'s FunctionBody")]
        public void S13_2_1_A7_T2()
        {
            RunFile(@"S13.2.1_A7_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("When the [[Call]] property for a Function object F is called, the following steps are taken: 2. Evaluate F\'s FunctionBody")]
        public void S13_2_1_A7_T3()
        {
            RunFile(@"S13.2.1_A7_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("When the [[Call]] property for a Function object F is called, the following steps are taken: 2. Evaluate F\'s FunctionBody")]
        public void S13_2_1_A7_T4()
        {
            RunFile(@"S13.2.1_A7_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("When the [[Call]] property for a Function object F is called, the following steps are taken: 2. Evaluate F\'s FunctionBody")]
        public void S13_2_1_A8_T1()
        {
            RunFile(@"S13.2.1_A8_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("When the [[Call]] property for a Function object F is called, the following steps are taken: 2. Evaluate F\'s FunctionBody")]
        public void S13_2_1_A8_T2()
        {
            RunFile(@"S13.2.1_A8_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("When the [[Call]] property for a Function object is called, the body is evaluated and if evaluation result has type \"normal\", then \"undefined\" is returned")]
        public void S13_2_1_A9_1_T1()
        {
            RunFile(@"S13.2.1_A9.1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("When the [[Call]] property for a Function object is called, the body is evaluated and if evaluation result has type \"normal\", then \"undefined\" is returned")]
        public void S13_2_1_A9_1_T2()
        {
            RunFile(@"S13.2.1_A9.1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("When the [[Call]] property for a Function object is called, the body is evaluated and if evaluation result has type \"return\" its value is not defined, then \"undefined\" is returned")]
        public void S13_2_1_A9_T1()
        {
            RunFile(@"S13.2.1_A9_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.1")]
        [Description("When the [[Call]] property for a Function object is called, the body is evaluated and if evaluation result has type \"return\" its value is not defined, then \"undefined\" is returned")]
        public void S13_2_1_A9_T2()
        {
            RunFile(@"S13.2.1_A9_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Since a function is an object, it might be set to [[Prototype]] property of a new created object through [[Construct]] property")]
        public void S13_2_2_A1_T1()
        {
            RunFile(@"S13.2.2_A1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Since a function is an object, it might be set to [[Prototype]] property of a new created object through [[Construct]] property")]
        public void S13_2_2_A1_T2()
        {
            RunFile(@"S13.2.2_A1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Calling a function as a constructor is possible as long as this.any_Function is declared")]
        public void S13_2_2_A10()
        {
            RunFile(@"S13.2.2_A10.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Calling a function as a constructor is possible as long as this.any_Function is declared and called")]
        public void S13_2_2_A11()
        {
            RunFile(@"S13.2.2_A11.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Calling a function as a constructor is possible as long as this.any_Function is declared and called")]
        public void S13_2_2_A12()
        {
            RunFile(@"S13.2.2_A12.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Calling a function as a constructor is inadmissible as long as this.any_Function is declared by eval and called")]
        public void S13_2_2_A13()
        {
            RunFile(@"S13.2.2_A13.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Calling a function as a constructor is inadmissible as long as this.any_Function is declared by eval and called")]
        public void S13_2_2_A14()
        {
            RunFile(@"S13.2.2_A14.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("When the [[Construct]] property for a Function object F is called, and the object created in the function is returned, the object (declared with \"this\" within a function) will be strong and healthy")]
        public void S13_2_2_A15_T1()
        {
            RunFile(@"S13.2.2_A15_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("When the [[Construct]] property for a Function object F is called, and the object created in the function is returned, the object (declared with \"this\" within a function) will be strong and healthy")]
        public void S13_2_2_A15_T2()
        {
            RunFile(@"S13.2.2_A15_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("When the [[Construct]] property for a Function object F is called, and the object created in the function is returned, the object (declared with \"this\" within a function) will be strong and healthy")]
        public void S13_2_2_A15_T3()
        {
            RunFile(@"S13.2.2_A15_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("When the [[Construct]] property for a Function object F is called, and the object created in the function is returned, the object (declared with \"this\" within a function) will be strong and healthy")]
        public void S13_2_2_A15_T4()
        {
            RunFile(@"S13.2.2_A15_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("FunctionExpression within a new statement is admitted")]
        public void S13_2_2_A16_T1()
        {
            RunFile(@"S13.2.2_A16_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("FunctionExpression within a new statement is admitted")]
        public void S13_2_2_A16_T2()
        {
            RunFile(@"S13.2.2_A16_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("FunctionExpression within a new statement is admitted")]
        public void S13_2_2_A16_T3()
        {
            RunFile(@"S13.2.2_A16_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("FunctionExpression containing \"with\" statement is admitted")]
        public void S13_2_2_A17_T1()
        {
            RunFile(@"S13.2.2_A17_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("FunctionExpression containing \"with\" statement is admitted")]
        public void S13_2_2_A17_T2()
        {
            RunFile(@"S13.2.2_A17_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("FunctionExpression containing \"with\" statement is admitted")]
        public void S13_2_2_A17_T3()
        {
            RunFile(@"S13.2.2_A17_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Using arguments object within a \"with\" Expression that is nested in a function is admitted")]
        public void S13_2_2_A18_T1()
        {
            RunFile(@"S13.2.2_A18_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Using arguments object within a \"with\" Expression that is nested in a function is admitted")]
        public void S13_2_2_A18_T2()
        {
            RunFile(@"S13.2.2_A18_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Function\'s scope chain is started when it is declared")]
        public void S13_2_2_A19_T1()
        {
            RunFile(@"S13.2.2_A19_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Function\'s scope chain is started when it is declared")]
        public void S13_2_2_A19_T2()
        {
            RunFile(@"S13.2.2_A19_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Function\'s scope chain is started when it is declared")]
        public void S13_2_2_A19_T3()
        {
            RunFile(@"S13.2.2_A19_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Function\'s scope chain is started when it is declared")]
        public void S13_2_2_A19_T4()
        {
            RunFile(@"S13.2.2_A19_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Function\'s scope chain is started when it is declared")]
        public void S13_2_2_A19_T5()
        {
            RunFile(@"S13.2.2_A19_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Function\'s scope chain is started when it is declared")]
        public void S13_2_2_A19_T6()
        {
            RunFile(@"S13.2.2_A19_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Function\'s scope chain is started when it is declared")]
        public void S13_2_2_A19_T7()
        {
            RunFile(@"S13.2.2_A19_T7.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Function\'s scope chain is started when it is declared")]
        public void S13_2_2_A19_T8()
        {
            RunFile(@"S13.2.2_A19_T8.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Since a function is an object, it might be set to [[Prototype]] property of a new created object through [[Construct]] property, but [[call]] property must fail with TypeError error")]
        public void S13_2_2_A2()
        {
            RunFile(@"S13.2.2_A2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [TestCategory("ECMA 15.2.3.1")]
        [Description("When the [[Construct]] property for a Function object F is called: A new native ECMAScript object is created. It gets the value of the [[Prototype]] property of the F(Denote it PROTO_VAL). If PROTO_VAL is not an object, sets the [[Prototype]] property of native ECMAScript object just created  to the original Object prototype object as described in 15.2.3.1")]
        public void S13_2_2_A3_T1()
        {
            RunFile(@"S13.2.2_A3_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [TestCategory("ECMA 15.2.3.1")]
        [Description("When the [[Construct]] property for a Function object F is called: A new native ECMAScript object is created. It gets the value of the [[Prototype]] property of the F(Denote it PROTO_VAL). If PROTO_VAL is not an object, sets the [[Prototype]] property of native ECMAScript object just created  to the original Object prototype object as described in 15.2.3.1")]
        public void S13_2_2_A3_T2()
        {
            RunFile(@"S13.2.2_A3_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("When the [[Construct]] property for a Function object F is called: A new native ECMAScript object is created. Gets the value of the [[Prototype]] property of the F(Denote it PROTO_VAL). If PROTO_VAL is an object, sets the [[Prototype]] property of native ECMAScript object just created to the PROTO_VAL")]
        public void S13_2_2_A4_T1()
        {
            RunFile(@"S13.2.2_A4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("When the [[Construct]] property for a Function object F is called: A new native ECMAScript object is created. Gets the value of the [[Prototype]] property of the F(Denote it PROTO_VAL). If PROTO_VAL is an object, sets the [[Prototype]] property of native ECMAScript object just created to the PROTO_VAL")]
        public void S13_2_2_A4_T2()
        {
            RunFile(@"S13.2.2_A4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("When the [[Construct]] property for a Function object F is called: A new native ECMAScript object is created. Invoke the [[Call]] property of F, providing native ECMAScript object just created as the this value and providing the argument list passed into [[Construct]] as the argument values")]
        public void S13_2_2_A5_T1()
        {
            RunFile(@"S13.2.2_A5_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("When the [[Construct]] property for a Function object F is called: A new native ECMAScript object is created. Invoke the [[Call]] property of F, providing native ECMAScript object just created as the this value and providing the argument list passed into [[Construct]] as the argument values")]
        public void S13_2_2_A5_T2()
        {
            RunFile(@"S13.2.2_A5_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("When the [[Construct]] property for a Function object F is called: A new native ECMAScript object is created. Invoke the [[Call]] property of F, providing just created native ECMAScript object as the this value and providing the argument list passed into [[Construct]] as the argument values. If Type( [[Call]] returned) is not Object then return passed as this into [[Call]] object")]
        public void S13_2_2_A6_T1()
        {
            RunFile(@"S13.2.2_A6_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("When the [[Construct]] property for a Function object F is called: A new native ECMAScript object is created. Invoke the [[Call]] property of F, providing just created native ECMAScript object as the this value and providing the argument list passed into [[Construct]] as the argument values. If Type( [[Call]] returned) is not Object then return passed as this into [[Call]] object")]
        public void S13_2_2_A6_T2()
        {
            RunFile(@"S13.2.2_A6_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("When the [[Construct]] property for a Function object F is called: A new native ECMAScript object is created. Invoke the [[Call]] property of F, providing just created native ECMAScript object as the this value and providing the argument list passed into [[Construct]] as the argument values. If Type( [[Call]] returned) is an Object then return this just as obtained object")]
        public void S13_2_2_A7_T1()
        {
            RunFile(@"S13.2.2_A7_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("When the [[Construct]] property for a Function object F is called: A new native ECMAScript object is created. Invoke the [[Call]] property of F, providing just created native ECMAScript object as the this value and providing the argument list passed into [[Construct]] as the argument values. If Type( [[Call]] returned) is an Object then return this just as obtained object")]
        public void S13_2_2_A7_T2()
        {
            RunFile(@"S13.2.2_A7_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("When the [[Construct]] property for a Function object F is called: A new native ECMAScript object is created. Invoke the [[Call]] property of F, providing just created native ECMAScript object as the this value and providing the argument list passed into [[Construct]] as the argument values. If Type( [[Call]] returned) is an Function then return this just as obtained function")]
        public void S13_2_2_A8_T1()
        {
            RunFile(@"S13.2.2_A8_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("When the [[Construct]] property for a Function object F is called: A new native ECMAScript object is created. Invoke the [[Call]] property of F, providing just created native ECMAScript object as the this value and providing the argument list passed into [[Construct]] as the argument values. If Type( [[Call]] returned) is an Function then return this just as obtained function")]
        public void S13_2_2_A8_T2()
        {
            RunFile(@"S13.2.2_A8_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("When the [[Construct]] property for a Function object F is called: A new native ECMAScript object is created. Invoke the [[Call]] property of F, providing just created native ECMAScript object as the this value and providing the argument list passed into [[Construct]] as the argument values. If Type( [[Call]] returned) is an Function then return this just as obtained function")]
        public void S13_2_2_A8_T3()
        {
            RunFile(@"S13.2.2_A8_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2.2")]
        [Description("Calling a function as a constructor is inadmissible as long as this.any_Function is called before it is declared")]
        public void S13_2_2_A9()
        {
            RunFile(@"S13.2.2_A9.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2")]
        [Description("A \"prototype\" property is automatically created for every function")]
        public void S13_2_A1_T1()
        {
            RunFile(@"S13.2_A1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2")]
        [Description("A \"prototype\" property is automatically created for every function")]
        public void S13_2_A1_T2()
        {
            RunFile(@"S13.2_A1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2")]
        [Description("Nested function are admitted")]
        public void S13_2_A2_T1()
        {
            RunFile(@"S13.2_A2_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2")]
        [Description("Nested function are admitted")]
        public void S13_2_A2_T2()
        {
            RunFile(@"S13.2_A2_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2")]
        [Description("When Function object(F) is constructed the length property of F is set to the number of formal properties specified in FormalParameterList")]
        public void S13_2_A3()
        {
            RunFile(@"S13.2_A3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2")]
        [Description("When Function object(F) is constructed the following steps from 9 to 11 take place 9.Create a new object as would be constructed by the expression new Object(). 10. Set the constructor property of Result(9) to F. This property is given attributes { DontEnum }. 11. Set the \"prototype\" property of F to Result(9).")]
        public void S13_2_A4_T1()
        {
            RunFile(@"S13.2_A4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2")]
        [Description("When Function object(F) is constructed the following steps from 9 to 11 take place 9.Create a new object as would be constructed by the expression new Object(). 10. Set the constructor property of Result(9) to F. This property is given attributes { DontEnum }. 11. Set the \"prototype\" property of F to Result(9).")]
        public void S13_2_A4_T2()
        {
            RunFile(@"S13.2_A4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 13.2")]
        [TestCategory("ECMA 15.3.3.1")]
        [Description("When Function object(F) is constructed the [[Prototype]] property of F is set to the original Function prototype object as specified in 15.3.3.1")]
        public void S13_2_A5()
        {
            RunFile(@"S13.2_A5.js");
        }
    }
}