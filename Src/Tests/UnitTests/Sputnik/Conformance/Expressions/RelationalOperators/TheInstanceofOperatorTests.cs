// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.Expressions.RelationalOperators
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class TheInstanceofOperatorTests : SputnikTestFixture
    {
        public TheInstanceofOperatorTests()
            : base(@"Conformance\11_Expressions\11.8_Relational_Operators\11.8.6_The_instanceof_operator")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [TestCategory("ECMA 7.2")]
        [TestCategory("ECMA 7.3")]
        [Description("White Space and Line Terminator between RelationalExpression and \"instanceof\" and between \"instanceof\" and ShiftExpression are allowed")]
        public void S11_8_6_A1()
        {
            RunFile(@"S11.8.6_A1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Operator \"instanceof\" uses GetValue")]
        public void S11_8_6_A2_1_T1()
        {
            RunFile(@"S11.8.6_A2.1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Operator \"instanceof\" uses GetValue")]
        public void S11_8_6_A2_1_T2()
        {
            RunFile(@"S11.8.6_A2.1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Operator \"instanceof\" uses GetValue")]
        public void S11_8_6_A2_1_T3()
        {
            RunFile(@"S11.8.6_A2.1_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("First expression is evaluated first, and then second expression")]
        public void S11_8_6_A2_4_T1()
        {
            RunFile(@"S11.8.6_A2.4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("First expression is evaluated first, and then second expression")]
        public void S11_8_6_A2_4_T2()
        {
            RunFile(@"S11.8.6_A2.4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("First expression is evaluated first, and then second expression")]
        public void S11_8_6_A2_4_T3()
        {
            RunFile(@"S11.8.6_A2.4_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("If ShiftExpression is not an object, throw TypeError")]
        public void S11_8_6_A3()
        {
            RunFile(@"S11.8.6_A3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Only constructor call (with \"new\" keyword) makes instance")]
        public void S11_8_6_A4_T1()
        {
            RunFile(@"S11.8.6_A4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Only constructor call (with \"new\" keyword) makes instance")]
        public void S11_8_6_A4_T2()
        {
            RunFile(@"S11.8.6_A4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Only constructor call (with \"new\" keyword) makes instance")]
        public void S11_8_6_A4_T3()
        {
            RunFile(@"S11.8.6_A4_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("TypeError is subclass of Error from instanceof operator point of view")]
        public void S11_8_6_A5_T1()
        {
            RunFile(@"S11.8.6_A5_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("TypeError is subclass of Error from instanceof operator point of view")]
        public void S11_8_6_A5_T2()
        {
            RunFile(@"S11.8.6_A5_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Only Function objects implement [[HasInstance]] and can be proper ShiftExpression for the \"instanceof\" operator consequently @description: Checking \"this\" case")]
        public void S11_8_6_A6_T1()
        {
            RunFile(@"S11.8.6_A6_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Only Function objects implement [[HasInstance]] and can be proper ShiftExpression for the \"instanceof\" operator consequently")]
        public void S11_8_6_A6_T2()
        {
            RunFile(@"S11.8.6_A6_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Only Function objects implement [[HasInstance]] and can be proper ShiftExpression for the \"instanceof\" operator consequently")]
        public void S11_8_6_A6_T3()
        {
            RunFile(@"S11.8.6_A6_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("Only Function objects implement [[HasInstance]] and can be proper ShiftExpression for the \"instanceof\" operator consequently")]
        public void S11_8_6_A6_T4()
        {
            RunFile(@"S11.8.6_A6_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("When \"instanceof\" returns true it means that GetValue(RelationalExpression) is constructed with ShiftExpression")]
        public void S11_8_6_A7_T1()
        {
            RunFile(@"S11.8.6_A7_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("When \"instanceof\" returns true it means that GetValue(RelationalExpression) is constructed with ShiftExpression")]
        public void S11_8_6_A7_T2()
        {
            RunFile(@"S11.8.6_A7_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 11.8.6")]
        [Description("When \"instanceof\" returns true it means that GetValue(RelationalExpression) is constructed with ShiftExpression")]
        public void S11_8_6_A7_T3()
        {
            RunFile(@"S11.8.6_A7_T3.js");
        }
    }
}