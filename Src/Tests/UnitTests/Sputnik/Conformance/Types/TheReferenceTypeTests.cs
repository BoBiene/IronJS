// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.Types
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class TheReferenceTypeTests : SputnikTestFixture
    {
        public TheReferenceTypeTests()
            : base(@"Conformance\08_Types\8.7_The_Reference_Type")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.7.1")]
        [TestCategory("ECMA 11.4.1")]
        [Description("Delete operator deletes pure property, so it returns true to be applyed to this.property")]
        public void S8_7_1_A1()
        {
            RunFile(@"S8.7.1_A1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.7.1")]
        [Description("Delete operator can\'t delete reference, so it returns false to be applyed to reference")]
        public void S8_7_1_A2()
        {
            RunFile(@"S8.7.1_A2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.7.2")]
        [Description("GetValue(V) mast fail")]
        public void S8_7_2_A1_T1()
        {
            RunFile_ExpectException(@"S8.7.2_A1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.7.2")]
        [Description("GetValue(V) mast fail")]
        public void S8_7_2_A1_T2()
        {
            RunFile_ExpectException(@"S8.7.2_A1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.7.2")]
        [Description("x++ calls GetValue then PutValue so after applying postfix increment(actually conrete operator type is unimportant) we must have reference to defined value")]
        public void S8_7_2_A2()
        {
            RunFile(@"S8.7.2_A2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.7.2")]
        [Description("this.x++ calls GetValue then PutValue so after applying postfix increment(actually conrete operator type is unimportan) we must have reference to defined value")]
        public void S8_7_2_A3()
        {
            RunFile(@"S8.7.2_A3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.7")]
        [Description("Multiple Variables should Referring to a Single Object")]
        public void S8_7_A1()
        {
            RunFile(@"S8.7_A1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.7")]
        [Description("Reference to Self-Modifying Object remain the integrity")]
        public void S8_7_A2()
        {
            RunFile(@"S8.7_A2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.7")]
        [Description("Changing the Reference of an Object While Maintaining Integrity")]
        public void S8_7_A3()
        {
            RunFile(@"S8.7_A3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.7")]
        [Description("Object Modification Resulting in a New Object for Not a Self-Modified Object leads to loss of integrity")]
        public void S8_7_A4()
        {
            RunFile(@"S8.7_A4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.7")]
        [Description("Delete unary operator can\'t delete object to be referenced")]
        public void S8_7_A5_T1()
        {
            RunFile(@"S8.7_A5_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.7")]
        [TestCategory("ECMA 11.4.1")]
        [Description("Delete unary operator can\'t delete object to be referenced")]
        public void S8_7_A5_T2()
        {
            RunFile(@"S8.7_A5_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.7")]
        [Description("Passing arguments by value differs from by reference and do not change values to be passed")]
        public void S8_7_A6()
        {
            RunFile(@"S8.7_A6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 8.7")]
        [Description("Passing arguments by reference do change values of reference to be passed")]
        public void S8_7_A7()
        {
            RunFile(@"S8.7_A7.js");
        }
    }
}