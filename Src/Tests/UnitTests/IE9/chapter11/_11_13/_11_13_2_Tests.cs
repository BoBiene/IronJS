// <auto-generated />
namespace IronJS.Tests.UnitTests.IE9.chapter11._11_13
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class _11_13_2_Tests : IE9TestFixture
    {
        public _11_13_2_Tests() : base(@"chapter11\11.13\11.13.2") { }

        [Test(Description = "Strict Mode - ReferenceError is thrown if the LeftHandSideExpression of a Compound Assignment operator(^=) evaluates to an unresolvable reference")] public void _11_13_2__10__s() { RunFile(@"11.13.2-10-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError is thrown if the LeftHandSideExpression of a Compound Assignment operator(|=) evaluates to an unresolvable reference")] public void _11_13_2__11__s() { RunFile(@"11.13.2-11-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError isn\'t thrown if the LeftHandSideExpression of a Compound Assignment operator(*=) evaluates to a resolvable reference")] public void _11_13_2__12__s() { RunFile(@"11.13.2-12-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError isn\'t thrown if the LeftHandSideExpression of a Compound Assignment operator(/=) evaluates to a resolvable reference")] public void _11_13_2__13__s() { RunFile(@"11.13.2-13-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError isn\'t thrown if the LeftHandSideExpression of a Compound Assignment operator(%=) evaluates to a resolvable reference")] public void _11_13_2__14__s() { RunFile(@"11.13.2-14-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError isn\'t thrown if the LeftHandSideExpression of a Compound Assignment operator(>>>=) evaluates to a resolvable reference")] public void _11_13_2__15__s() { RunFile(@"11.13.2-15-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError isn\'t thrown if the LeftHandSideExpression of a Compound Assignment operator(-=) evaluates to a resolvable reference")] public void _11_13_2__16__s() { RunFile(@"11.13.2-16-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError isn\'t thrown if the LeftHandSideExpression of a Compound Assignment operator(<<=) evaluates to a resolvable reference")] public void _11_13_2__17__s() { RunFile(@"11.13.2-17-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError isn\'t thrown if the LeftHandSideExpression of a Compound Assignment operator(>>=) evaluates to a resolvable reference")] public void _11_13_2__18__s() { RunFile(@"11.13.2-18-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError isn\'t thrown if the LeftHandSideExpression of a Compound Assignment operator(+=) evaluates to a resolvable reference")] public void _11_13_2__19__s() { RunFile(@"11.13.2-19-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError is thrown if the LeftHandSideExpression of a Compound Assignment operator(*=) evaluates to an unresolvable reference")] public void _11_13_2__1__s() { RunFile(@"11.13.2-1-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError isn\'t thrown if the LeftHandSideExpression of a Compound Assignment operator(&=) evaluates to a resolvable reference")] public void _11_13_2__20__s() { RunFile(@"11.13.2-20-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError isn\'t thrown if the LeftHandSideExpression of a Compound Assignment operator(^=) evaluates to a resolvable reference")] public void _11_13_2__21__s() { RunFile(@"11.13.2-21-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError isn\'t thrown if the LeftHandSideExpression of a Compound Assignment operator(|=) evaluates to a resolvable reference")] public void _11_13_2__22__s() { RunFile(@"11.13.2-22-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(*=) is a reference to a data property with the attribute value {[[Writable]]:false}")] public void _11_13_2__23__s() { RunFile(@"11.13.2-23-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(/=) is a reference to a data property with the attribute value {[[Writable]]:false}")] public void _11_13_2__24__s() { RunFile(@"11.13.2-24-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(%=) is a reference to a data property with the attribute value {[[Writable]]:false}")] public void _11_13_2__25__s() { RunFile(@"11.13.2-25-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(+=) is a reference to a data property with the attribute value {[[Writable]]:false}")] public void _11_13_2__26__s() { RunFile(@"11.13.2-26-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(-=) is a reference to a data property with the attribute value {[[Writable]]:false}")] public void _11_13_2__27__s() { RunFile(@"11.13.2-27-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(<<=) is a reference to a data property with the attribute value {[[Writable]]:false}")] public void _11_13_2__28__s() { RunFile(@"11.13.2-28-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(>>=) is a reference to a data property with the attribute value {[[Writable]]:false}")] public void _11_13_2__29__s() { RunFile(@"11.13.2-29-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError is thrown if the LeftHandSideExpression of a Compound Assignment operator(/=) evaluates to an unresolvable reference")] public void _11_13_2__2__s() { RunFile(@"11.13.2-2-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(>>>=) is a reference to a data property with the attribute value {[[Writable]]:false}")] public void _11_13_2__30__s() { RunFile(@"11.13.2-30-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(&=) is a reference to a data property with the attribute value {[[Writable]]:false}")] public void _11_13_2__31__s() { RunFile(@"11.13.2-31-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(^=) is a reference to a data property with the attribute value {[[Writable]]:false}")] public void _11_13_2__32__s() { RunFile(@"11.13.2-32-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(|=) is a reference to a data property with the attribute value {[[Writable]]:false}")] public void _11_13_2__33__s() { RunFile(@"11.13.2-33-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(*=) is a reference to an accessor property with the attribute value {[[Set]]:undefined}")] public void _11_13_2__34__s() { RunFile(@"11.13.2-34-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(/=) is a reference to an accessor property with the attribute value {[[Set]]:undefined}")] public void _11_13_2__35__s() { RunFile(@"11.13.2-35-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(%=) is a reference to an accessor property with the attribute value {[[Set]]:undefined}")] public void _11_13_2__36__s() { RunFile(@"11.13.2-36-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(+=) is a reference to an accessor property with the attribute value {[[Set]]:undefined}")] public void _11_13_2__37__s() { RunFile(@"11.13.2-37-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(-=) is a reference to an accessor property with the attribute value {[[Set]]:undefined}")] public void _11_13_2__38__s() { RunFile(@"11.13.2-38-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(<<=) is a reference to an accessor property with the attribute value {[[Set]]:undefined}")] public void _11_13_2__39__s() { RunFile(@"11.13.2-39-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError is thrown if the LeftHandSideExpression of a Compound Assignment operator(%=) evaluates to an unresolvable reference")] public void _11_13_2__3__s() { RunFile(@"11.13.2-3-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(>>=) is a reference to an accessor property with the attribute value {[[Set]]:undefined}")] public void _11_13_2__40__s() { RunFile(@"11.13.2-40-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(>>>=) is a reference to an accessor property with the attribute value {[[Set]]:undefined}")] public void _11_13_2__41__s() { RunFile(@"11.13.2-41-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(&=) is a reference to an accessor property with the attribute value {[[Set]]:undefined}")] public void _11_13_2__42__s() { RunFile(@"11.13.2-42-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(^=) is a reference to an accessor property with the attribute value {[[Set]]:undefined}")] public void _11_13_2__43__s() { RunFile(@"11.13.2-43-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(|=) is a reference of to an accessor property with the attribute value {[[Set]]:undefined}")] public void _11_13_2__44__s() { RunFile(@"11.13.2-44-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(*=) is a reference to a non-existent property of an object whose [[Extensible]] internal property if false")] public void _11_13_2__45__s() { RunFile(@"11.13.2-45-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(/=) is a reference to a non-existent property of an object whose [[Extensible]] internal property if false")] public void _11_13_2__46__s() { RunFile(@"11.13.2-46-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(%=) is a reference to a non-existent property of an object whose [[Extensible]] internal property if false")] public void _11_13_2__47__s() { RunFile(@"11.13.2-47-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(+=) is a reference to a non-existent property of an object whose [[Extensible]] internal property if false")] public void _11_13_2__48__s() { RunFile(@"11.13.2-48-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(-=) is a reference to a non-existent property of an object whose [[Extensible]] internal property if false")] public void _11_13_2__49__s() { RunFile(@"11.13.2-49-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError is thrown if the LeftHandSideExpression of a Compound Assignment operator(+=) evaluates to an unresolvable reference")] public void _11_13_2__4__s() { RunFile(@"11.13.2-4-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(<<=) is a reference to a non-existent property of an object whose [[Extensible]] internal property if false")] public void _11_13_2__50__s() { RunFile(@"11.13.2-50-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(>>=) is a reference to a non-existent property of an object whose [[Extensible]] internal property if false")] public void _11_13_2__51__s() { RunFile(@"11.13.2-51-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(>>>=) is a reference to a non-existent property of an object whose [[Extensible]] internal property if false")] public void _11_13_2__52__s() { RunFile(@"11.13.2-52-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(&=) is a reference to a non-existent property of an object whose [[Extensible]] internal property if false")] public void _11_13_2__53__s() { RunFile(@"11.13.2-53-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(^=) is a reference to a non-existent property of an object whose [[Extensible]] internal property if false")] public void _11_13_2__54__s() { RunFile(@"11.13.2-54-s.js"); }
        [Test(Description = "Strict Mode - TypeError is thrown if The LeftHandSide of a Compound Assignment operator(|=) is a reference to a non-existent property of an object whose [[Extensible]] internal property if false")] public void _11_13_2__55__s() { RunFile(@"11.13.2-55-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError is thrown if the LeftHandSideExpression of a Compound Assignment operator(-=) evaluates to an unresolvable reference")] public void _11_13_2__5__s() { RunFile(@"11.13.2-5-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier eval appear as the LeftHandSideExpression of a Compound Assignment operator(^=)")] public void _11_13_2__6__10__s() { RunFile(@"11.13.2-6-10-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier eval appear as the LeftHandSideExpression of a Compound Assignment operator(|=)")] public void _11_13_2__6__11__s() { RunFile(@"11.13.2-6-11-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier arguments appear as the LeftHandSideExpression of a Compound Assignment operator(*=)")] public void _11_13_2__6__12__s() { RunFile(@"11.13.2-6-12-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier arguments appear as the LeftHandSideExpression of a Compound Assignment operator(/=)")] public void _11_13_2__6__13__s() { RunFile(@"11.13.2-6-13-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier arguments appear as the LeftHandSideExpression of a Compound Assignment operator(%=)")] public void _11_13_2__6__14__s() { RunFile(@"11.13.2-6-14-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier arguments appear as the LeftHandSideExpression of a Compound Assignment operator(+=)")] public void _11_13_2__6__15__s() { RunFile(@"11.13.2-6-15-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier arguments appear as the LeftHandSideExpression of a Compound Assignment operator(-=)")] public void _11_13_2__6__16__s() { RunFile(@"11.13.2-6-16-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier arguments appear as the LeftHandSideExpression of a Compound Assignment operator(<<=)")] public void _11_13_2__6__17__s() { RunFile(@"11.13.2-6-17-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier arguments appear as the LeftHandSideExpression of a Compound Assignment operator(>>=)")] public void _11_13_2__6__18__s() { RunFile(@"11.13.2-6-18-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier arguments appear as the LeftHandSideExpression of a Compound Assignment operator(>>>=)")] public void _11_13_2__6__19__s() { RunFile(@"11.13.2-6-19-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier eval appear as the LeftHandSideExpression of a Compound Assignment operator(*=)")] public void _11_13_2__6__1__s() { RunFile(@"11.13.2-6-1-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier arguments appear as the LeftHandSideExpression of a Compound Assignment operator(&=)")] public void _11_13_2__6__20__s() { RunFile(@"11.13.2-6-20-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier arguments appear as the LeftHandSideExpression of a Compound Assignment operator(^=)")] public void _11_13_2__6__21__s() { RunFile(@"11.13.2-6-21-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier arguments appear as the LeftHandSideExpression of a Compound Assignment operator(|=)")] public void _11_13_2__6__22__s() { RunFile(@"11.13.2-6-22-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier eval appear as the LeftHandSideExpression of a Compound Assignment operator(/=)")] public void _11_13_2__6__2__s() { RunFile(@"11.13.2-6-2-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier eval appear as the LeftHandSideExpression of a Compound Assignment operator(%=)")] public void _11_13_2__6__3__s() { RunFile(@"11.13.2-6-3-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier eval appear as the LeftHandSideExpression of a Compound Assignment operator(+=)")] public void _11_13_2__6__4__s() { RunFile(@"11.13.2-6-4-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier eval appear as the LeftHandSideExpression of a Compound Assignment operator(-=)")] public void _11_13_2__6__5__s() { RunFile(@"11.13.2-6-5-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier eval appear as the LeftHandSideExpression of a Compound Assignment operator(<<=)")] public void _11_13_2__6__6__s() { RunFile(@"11.13.2-6-6-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier eval appear as the LeftHandSideExpression of a Compound Assignment operator(>>=)")] public void _11_13_2__6__7__s() { RunFile(@"11.13.2-6-7-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier eval appear as the LeftHandSideExpression of a Compound Assignment operator(>>>=)")] public void _11_13_2__6__8__s() { RunFile(@"11.13.2-6-8-s.js"); }
        [Test(Description = "Strict Mode - SyntaxError is thrown if the identifier eval appear as the LeftHandSideExpression of a Compound Assignment operator(&=)")] public void _11_13_2__6__9__s() { RunFile(@"11.13.2-6-9-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError is thrown if the LeftHandSideExpression of a Compound Assignment operator(<<=) evaluates to an unresolvable reference")] public void _11_13_2__6__s() { RunFile(@"11.13.2-6-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError is thrown if the LeftHandSideExpression of a Compound Assignment operator(>>=) evaluates to an unresolvable reference")] public void _11_13_2__7__s() { RunFile(@"11.13.2-7-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError is thrown if the LeftHandSideExpression of a Compound Assignment operator(>>>=) evaluates to an unresolvable reference")] public void _11_13_2__8__s() { RunFile(@"11.13.2-8-s.js"); }
        [Test(Description = "Strict Mode - ReferenceError is thrown if the LeftHandSideExpression of a Compound Assignment operator(&=) evaluates to an unresolvable reference")] public void _11_13_2__9__s() { RunFile(@"11.13.2-9-s.js"); }
    }
}