// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.TypeConversion
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class ToObjectTests : SputnikTestFixture
    {
        public ToObjectTests()
            : base(@"Conformance\09_Type_Conversion\9.9_ToObject")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 9.9")]
        [Description("ToObject conversion from undefined value must throw TypeError")]
        public void S9_9_A1()
        {
            RunFile(@"S9.9_A1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 9.9")]
        [Description("ToObject conversion from null value must throw TypeError")]
        public void S9_9_A2()
        {
            RunFile(@"S9.9_A2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 9.9")]
        [Description("ToObject conversion from Boolean: create a new Boolean object whose [[value]] property is set to the value of the boolean")]
        public void S9_9_A3()
        {
            RunFile(@"S9.9_A3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 9.9")]
        [Description("ToObject conversion from Number: create a new Number object whose [[value]] property is set to the value of the number")]
        public void S9_9_A4()
        {
            RunFile(@"S9.9_A4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 9.9")]
        [Description("ToObject conversion from String: create a new String object whose [[value]] property is set to the value of the string")]
        public void S9_9_A5()
        {
            RunFile(@"S9.9_A5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 9.9")]
        [Description("ToObject conversion from Object: The result is the input argument (no conversion)")]
        public void S9_9_A6()
        {
            RunFile(@"S9.9_A6.js");
        }
    }
}