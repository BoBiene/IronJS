// <auto-generated />
namespace IronJS.Tests.UnitTests.IE9.chapter07._7_6._7_6_1
{
    using System;
    using NUnit.Framework;

    [TestFixture]
    public class _7_6_1_Tests : IE9TestFixture
    {
        public _7_6_1_Tests() : base(@"chapter07\7.6\7.6.1") { }

        [Test(Description = "Allow reserved words as property names at object initialization, verified with hasOwnProperty: null, true, false")] public void _7_6_1__1__1() { RunFile(@"7.6.1-1-1.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, verified with hasOwnProperty: in, try, class")] public void _7_6_1__1__10() { RunFile(@"7.6.1-1-10.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, verified with hasOwnProperty: enum, extends, super")] public void _7_6_1__1__11() { RunFile(@"7.6.1-1-11.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, verified with hasOwnProperty: const, export, import")] public void _7_6_1__1__12() { RunFile(@"7.6.1-1-12.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, verified with hasOwnProperty: implements, let, private")] public void _7_6_1__1__13() { RunFile(@"7.6.1-1-13.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, verified with hasOwnProperty: public, yield, interface")] public void _7_6_1__1__14() { RunFile(@"7.6.1-1-14.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, verified with hasOwnProperty: package, protected, static")] public void _7_6_1__1__15() { RunFile(@"7.6.1-1-15.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, verified with hasOwnProperty: undeefined, NaN, Infinity")] public void _7_6_1__1__16() { RunFile(@"7.6.1-1-16.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, verified with hasOwnProperty: break, case, do")] public void _7_6_1__1__2() { RunFile(@"7.6.1-1-2.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, verified with hasOwnProperty: instanceof, typeof, else")] public void _7_6_1__1__3() { RunFile(@"7.6.1-1-3.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, verified with hasOwnProperty: new, var, catch")] public void _7_6_1__1__4() { RunFile(@"7.6.1-1-4.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, verified with hasOwnProperty: finally, return, void")] public void _7_6_1__1__5() { RunFile(@"7.6.1-1-5.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, verified with hasOwnProperty: continue, for, switch")] public void _7_6_1__1__6() { RunFile(@"7.6.1-1-6.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, verified with hasOwnProperty: while, debugger, function")] public void _7_6_1__1__7() { RunFile(@"7.6.1-1-7.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, verified with hasOwnProperty: this, with, default")] public void _7_6_1__1__8() { RunFile(@"7.6.1-1-8.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, verified with hasOwnProperty: if, throw, delete")] public void _7_6_1__1__9() { RunFile(@"7.6.1-1-9.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, verified with hasOwnProperty: null, true, false")] public void _7_6_1__2__1() { RunFile(@"7.6.1-2-1.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, verified with hasOwnProperty: in, try, class")] public void _7_6_1__2__10() { RunFile(@"7.6.1-2-10.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, verified with hasOwnProperty: enum, extends, super")] public void _7_6_1__2__11() { RunFile(@"7.6.1-2-11.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, verified with hasOwnProperty: const, export, import")] public void _7_6_1__2__12() { RunFile(@"7.6.1-2-12.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, verified with hasOwnProperty: implements, let, private")] public void _7_6_1__2__13() { RunFile(@"7.6.1-2-13.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, verified with hasOwnProperty: public, yield, interface")] public void _7_6_1__2__14() { RunFile(@"7.6.1-2-14.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, verified with hasOwnProperty: package, protected, static")] public void _7_6_1__2__15() { RunFile(@"7.6.1-2-15.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, verified with hasOwnProperty: undefined, NaN, Infinity")] public void _7_6_1__2__16() { RunFile(@"7.6.1-2-16.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, verified with hasOwnProperty: break, case, do")] public void _7_6_1__2__2() { RunFile(@"7.6.1-2-2.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, verified with hasOwnProperty: instanceof, typeof, else")] public void _7_6_1__2__3() { RunFile(@"7.6.1-2-3.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, verified with hasOwnProperty: new, var, catch")] public void _7_6_1__2__4() { RunFile(@"7.6.1-2-4.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, verified with hasOwnProperty: finally, return, void")] public void _7_6_1__2__5() { RunFile(@"7.6.1-2-5.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, verified with hasOwnProperty: continue, for, switch")] public void _7_6_1__2__6() { RunFile(@"7.6.1-2-6.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, verified with hasOwnProperty: while, debugger, function")] public void _7_6_1__2__7() { RunFile(@"7.6.1-2-7.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, verified with hasOwnProperty: this, with, default")] public void _7_6_1__2__8() { RunFile(@"7.6.1-2-8.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, verified with hasOwnProperty: if, throw, delete")] public void _7_6_1__2__9() { RunFile(@"7.6.1-2-9.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment,verified with hasOwnProperty: null, true, false")] public void _7_6_1__3__1() { RunFile(@"7.6.1-3-1.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment,verified with hasOwnProperty: in, try, class")] public void _7_6_1__3__10() { RunFile(@"7.6.1-3-10.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment,verified with hasOwnProperty: enum, extends, super")] public void _7_6_1__3__11() { RunFile(@"7.6.1-3-11.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment,verified with hasOwnProperty: const, export, import")] public void _7_6_1__3__12() { RunFile(@"7.6.1-3-12.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment,verified with hasOwnProperty: implements, let, private")] public void _7_6_1__3__13() { RunFile(@"7.6.1-3-13.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment,verified with hasOwnProperty: public, yield, interface")] public void _7_6_1__3__14() { RunFile(@"7.6.1-3-14.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment,verified with hasOwnProperty: package, protected, static")] public void _7_6_1__3__15() { RunFile(@"7.6.1-3-15.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment,verified with hasOwnProperty: undefined, NaN, Infinity")] public void _7_6_1__3__16() { RunFile(@"7.6.1-3-16.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment,verified with hasOwnProperty: break, case, do")] public void _7_6_1__3__2() { RunFile(@"7.6.1-3-2.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment,verified with hasOwnProperty: instanceof, typeof, else")] public void _7_6_1__3__3() { RunFile(@"7.6.1-3-3.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment,verified with hasOwnProperty: new, var, catch")] public void _7_6_1__3__4() { RunFile(@"7.6.1-3-4.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment,verified with hasOwnProperty: finally, return, void")] public void _7_6_1__3__5() { RunFile(@"7.6.1-3-5.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment,verified with hasOwnProperty: continue, for, switch")] public void _7_6_1__3__6() { RunFile(@"7.6.1-3-6.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment,verified with hasOwnProperty: while, debugger, function")] public void _7_6_1__3__7() { RunFile(@"7.6.1-3-7.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment,verified with hasOwnProperty: this, with, default")] public void _7_6_1__3__8() { RunFile(@"7.6.1-3-8.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment,verified with hasOwnProperty: if, throw, delete")] public void _7_6_1__3__9() { RunFile(@"7.6.1-3-9.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, verified with hasOwnProperty: null, true, false")] public void _7_6_1__4__1() { RunFile(@"7.6.1-4-1.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, verified with hasOwnProperty: in, try, class")] public void _7_6_1__4__10() { RunFile(@"7.6.1-4-10.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, verified with hasOwnProperty: enum, extends, super")] public void _7_6_1__4__11() { RunFile(@"7.6.1-4-11.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, verified with hasOwnProperty: const, export, import")] public void _7_6_1__4__12() { RunFile(@"7.6.1-4-12.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, verified with hasOwnProperty: implements, let, private")] public void _7_6_1__4__13() { RunFile(@"7.6.1-4-13.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, verified with hasOwnProperty: public, yield, interface")] public void _7_6_1__4__14() { RunFile(@"7.6.1-4-14.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, verified with hasOwnProperty: package, protected, static")] public void _7_6_1__4__15() { RunFile(@"7.6.1-4-15.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, verified with hasOwnProperty: undefined, NaN, Infinity")] public void _7_6_1__4__16() { RunFile(@"7.6.1-4-16.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, verified with hasOwnProperty: break, case, do")] public void _7_6_1__4__2() { RunFile(@"7.6.1-4-2.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, verified with hasOwnProperty: instanceof, typeof, else")] public void _7_6_1__4__3() { RunFile(@"7.6.1-4-3.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, verified with hasOwnProperty: new, var, catch")] public void _7_6_1__4__4() { RunFile(@"7.6.1-4-4.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, verified with hasOwnProperty: finally, return, void")] public void _7_6_1__4__5() { RunFile(@"7.6.1-4-5.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, verified with hasOwnProperty: continue, for, switch")] public void _7_6_1__4__6() { RunFile(@"7.6.1-4-6.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, verified with hasOwnProperty: while, debugger, function")] public void _7_6_1__4__7() { RunFile(@"7.6.1-4-7.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, verified with hasOwnProperty: this, with, default")] public void _7_6_1__4__8() { RunFile(@"7.6.1-4-8.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, verified with hasOwnProperty: if, throw, delete")] public void _7_6_1__4__9() { RunFile(@"7.6.1-4-9.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, accessed via indexing: null, true, false")] public void _7_6_1__5__1() { RunFile(@"7.6.1-5-1.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, accessed via indexing: in, try, class")] public void _7_6_1__5__10() { RunFile(@"7.6.1-5-10.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, accessed via indexing: enum, extends, super")] public void _7_6_1__5__11() { RunFile(@"7.6.1-5-11.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, accessed via indexing: const, export, import")] public void _7_6_1__5__12() { RunFile(@"7.6.1-5-12.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, accessed via indexing: implements, let, private")] public void _7_6_1__5__13() { RunFile(@"7.6.1-5-13.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, accessed via indexing: public, yield, interface")] public void _7_6_1__5__14() { RunFile(@"7.6.1-5-14.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, accessed via indexing: package, protected, static")] public void _7_6_1__5__15() { RunFile(@"7.6.1-5-15.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, accessed via indexing: undefined, NaN, Infinity")] public void _7_6_1__5__16() { RunFile(@"7.6.1-5-16.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, accessed via indexing: break, case, do")] public void _7_6_1__5__2() { RunFile(@"7.6.1-5-2.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, accessed via indexing: instanceof, typeof, else")] public void _7_6_1__5__3() { RunFile(@"7.6.1-5-3.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, accessed via indexing: new, var, catch")] public void _7_6_1__5__4() { RunFile(@"7.6.1-5-4.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, accessed via indexing: finally, return, void")] public void _7_6_1__5__5() { RunFile(@"7.6.1-5-5.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, accessed via indexing: continue, for, switch")] public void _7_6_1__5__6() { RunFile(@"7.6.1-5-6.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, accessed via indexing: while, debugger, function")] public void _7_6_1__5__7() { RunFile(@"7.6.1-5-7.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, accessed via indexing: this, with, default")] public void _7_6_1__5__8() { RunFile(@"7.6.1-5-8.js"); }
        [Test(Description = "Allow reserved words as property names at object initialization, accessed via indexing: if, throw, delete")] public void _7_6_1__5__9() { RunFile(@"7.6.1-5-9.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, accessed via indexing: null, true, false")] public void _7_6_1__6__1() { RunFile(@"7.6.1-6-1.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, accessed via indexing: in, try, class")] public void _7_6_1__6__10() { RunFile(@"7.6.1-6-10.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, accessed via indexing: enum, extends, super")] public void _7_6_1__6__11() { RunFile(@"7.6.1-6-11.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, accessed via indexing: const, export, import")] public void _7_6_1__6__12() { RunFile(@"7.6.1-6-12.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, accessed via indexing: implements, let, private")] public void _7_6_1__6__13() { RunFile(@"7.6.1-6-13.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, accessed via indexing: public, yield, interface")] public void _7_6_1__6__14() { RunFile(@"7.6.1-6-14.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, accessed via indexing: package, protected, static")] public void _7_6_1__6__15() { RunFile(@"7.6.1-6-15.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, accessed via indexing: undefined, NaN, Infinity")] public void _7_6_1__6__16() { RunFile(@"7.6.1-6-16.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, accessed via indexing: break, case, do")] public void _7_6_1__6__2() { RunFile(@"7.6.1-6-2.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, accessed via indexing: instanceof, typeof, else")] public void _7_6_1__6__3() { RunFile(@"7.6.1-6-3.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, accessed via indexing: new, var, catch")] public void _7_6_1__6__4() { RunFile(@"7.6.1-6-4.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, accessed via indexing: finally, return, void")] public void _7_6_1__6__5() { RunFile(@"7.6.1-6-5.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, accessed via indexing: continue, for, switch")] public void _7_6_1__6__6() { RunFile(@"7.6.1-6-6.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, accessed via indexing: while, debugger, function")] public void _7_6_1__6__7() { RunFile(@"7.6.1-6-7.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, accessed via indexing: this, with, default")] public void _7_6_1__6__8() { RunFile(@"7.6.1-6-8.js"); }
        [Test(Description = "Allow reserved words as property names by dot operator assignment, accessed via indexing: if, throw, delete")] public void _7_6_1__6__9() { RunFile(@"7.6.1-6-9.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment, accessed via indexing: null, true, false")] public void _7_6_1__7__1() { RunFile(@"7.6.1-7-1.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment, accessed via indexing: in, try, class")] public void _7_6_1__7__10() { RunFile(@"7.6.1-7-10.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment, accessed via indexing: enum, extends, super")] public void _7_6_1__7__11() { RunFile(@"7.6.1-7-11.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment, accessed via indexing: const, export, import")] public void _7_6_1__7__12() { RunFile(@"7.6.1-7-12.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment, accessed via indexing: implements, let, private")] public void _7_6_1__7__13() { RunFile(@"7.6.1-7-13.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment, accessed via indexing: public, yield, interface")] public void _7_6_1__7__14() { RunFile(@"7.6.1-7-14.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment, accessed via indexing: package, protected, static")] public void _7_6_1__7__15() { RunFile(@"7.6.1-7-15.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment, accessed via indexing: undefined, NaN, Infinity")] public void _7_6_1__7__16() { RunFile(@"7.6.1-7-16.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment, accessed via indexing: break, case, do")] public void _7_6_1__7__2() { RunFile(@"7.6.1-7-2.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment, accessed via indexing: instanceof, typeof, else")] public void _7_6_1__7__3() { RunFile(@"7.6.1-7-3.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment, accessed via indexing: new, var, catch")] public void _7_6_1__7__4() { RunFile(@"7.6.1-7-4.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment, accessed via indexing: finally, return, void")] public void _7_6_1__7__5() { RunFile(@"7.6.1-7-5.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment, accessed via indexing: continue, for, switch")] public void _7_6_1__7__6() { RunFile(@"7.6.1-7-6.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment, accessed via indexing: while, debugger, function")] public void _7_6_1__7__7() { RunFile(@"7.6.1-7-7.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment, accessed via indexing: this, with, default")] public void _7_6_1__7__8() { RunFile(@"7.6.1-7-8.js"); }
        [Test(Description = "Allow reserved words as property names by index assignment, accessed via indexing: if, throw, delete")] public void _7_6_1__7__9() { RunFile(@"7.6.1-7-9.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, accessed via indexing: null, true, false")] public void _7_6_1__8__1() { RunFile(@"7.6.1-8-1.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, accessed via indexing: in, try, class")] public void _7_6_1__8__10() { RunFile(@"7.6.1-8-10.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, accessed via indexing: enum, extends, super")] public void _7_6_1__8__11() { RunFile(@"7.6.1-8-11.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, accessed via indexing: const, export, import")] public void _7_6_1__8__12() { RunFile(@"7.6.1-8-12.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, accessed via indexing: implements, let, private")] public void _7_6_1__8__13() { RunFile(@"7.6.1-8-13.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, accessed via indexing: public, yield, interface")] public void _7_6_1__8__14() { RunFile(@"7.6.1-8-14.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, accessed via indexing: package, protected, static")] public void _7_6_1__8__15() { RunFile(@"7.6.1-8-15.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, accessed via indexing: undefined, NaN, Infinity")] public void _7_6_1__8__16() { RunFile(@"7.6.1-8-16.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, accessed via indexing: break, case, do")] public void _7_6_1__8__2() { RunFile(@"7.6.1-8-2.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, accessed via indexing: instanceof, typeof, else")] public void _7_6_1__8__3() { RunFile(@"7.6.1-8-3.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, accessed via indexing: new, var, catch")] public void _7_6_1__8__4() { RunFile(@"7.6.1-8-4.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, accessed via indexing: finally, return, void")] public void _7_6_1__8__5() { RunFile(@"7.6.1-8-5.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, accessed via indexing: continue, for, switch")] public void _7_6_1__8__6() { RunFile(@"7.6.1-8-6.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, accessed via indexing: while, debugger, function")] public void _7_6_1__8__7() { RunFile(@"7.6.1-8-7.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, accessed via indexing: this, with, default")] public void _7_6_1__8__8() { RunFile(@"7.6.1-8-8.js"); }
        [Test(Description = "Allow reserved words as property names by set function within an object, accessed via indexing: if, throw, delete")] public void _7_6_1__8__9() { RunFile(@"7.6.1-8-9.js"); }
    }
}