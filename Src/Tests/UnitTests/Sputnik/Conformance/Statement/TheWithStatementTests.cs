// <auto-generated />
namespace IronJS.Tests.UnitTests.Sputnik.Conformance.Statement
{
    using System;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    [TestClass]
    public class TheWithStatementTests : SputnikTestFixture
    {
        public TheWithStatementTests()
            : base(@"Conformance\12_Statement\12.10_The_with_Statement")
        {
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_1_T1()
        {
            RunFile(@"S12.10_A1.1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_1_T2()
        {
            RunFile(@"S12.10_A1.1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_1_T3()
        {
            RunFile(@"S12.10_A1.1_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_10_T1()
        {
            RunFile(@"S12.10_A1.10_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_10_T2()
        {
            RunFile(@"S12.10_A1.10_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_10_T3()
        {
            RunFile(@"S12.10_A1.10_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_10_T4()
        {
            RunFile(@"S12.10_A1.10_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_10_T5()
        {
            RunFile(@"S12.10_A1.10_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_11_T1()
        {
            RunFile(@"S12.10_A1.11_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_11_T2()
        {
            RunFile(@"S12.10_A1.11_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_11_T3()
        {
            RunFile(@"S12.10_A1.11_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_11_T4()
        {
            RunFile(@"S12.10_A1.11_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_11_T5()
        {
            RunFile(@"S12.10_A1.11_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_12_T1()
        {
            RunFile(@"S12.10_A1.12_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_12_T2()
        {
            RunFile(@"S12.10_A1.12_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_12_T3()
        {
            RunFile(@"S12.10_A1.12_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_12_T4()
        {
            RunFile(@"S12.10_A1.12_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_12_T5()
        {
            RunFile(@"S12.10_A1.12_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_2_T1()
        {
            RunFile(@"S12.10_A1.2_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_2_T2()
        {
            RunFile(@"S12.10_A1.2_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_2_T3()
        {
            RunFile(@"S12.10_A1.2_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_2_T4()
        {
            RunFile(@"S12.10_A1.2_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_2_T5()
        {
            RunFile(@"S12.10_A1.2_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_3_T1()
        {
            RunFile(@"S12.10_A1.3_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_3_T2()
        {
            RunFile(@"S12.10_A1.3_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_3_T3()
        {
            RunFile(@"S12.10_A1.3_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_3_T4()
        {
            RunFile(@"S12.10_A1.3_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_3_T5()
        {
            RunFile(@"S12.10_A1.3_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_4_T1()
        {
            RunFile(@"S12.10_A1.4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_4_T2()
        {
            RunFile(@"S12.10_A1.4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_4_T3()
        {
            RunFile(@"S12.10_A1.4_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_4_T4()
        {
            RunFile(@"S12.10_A1.4_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_4_T5()
        {
            RunFile(@"S12.10_A1.4_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_5_T1()
        {
            RunFile(@"S12.10_A1.5_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_5_T2()
        {
            RunFile(@"S12.10_A1.5_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_5_T3()
        {
            RunFile(@"S12.10_A1.5_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_5_T4()
        {
            RunFile(@"S12.10_A1.5_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_5_T5()
        {
            RunFile(@"S12.10_A1.5_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_6_T1()
        {
            RunFile(@"S12.10_A1.6_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_6_T2()
        {
            RunFile(@"S12.10_A1.6_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_6_T3()
        {
            RunFile(@"S12.10_A1.6_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_7_T1()
        {
            RunFile(@"S12.10_A1.7_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_7_T2()
        {
            RunFile(@"S12.10_A1.7_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_7_T3()
        {
            RunFile(@"S12.10_A1.7_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_7_T4()
        {
            RunFile(@"S12.10_A1.7_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_7_T5()
        {
            RunFile(@"S12.10_A1.7_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_8_T1()
        {
            RunFile(@"S12.10_A1.8_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_8_T2()
        {
            RunFile(@"S12.10_A1.8_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_8_T3()
        {
            RunFile(@"S12.10_A1.8_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_8_T4()
        {
            RunFile(@"S12.10_A1.8_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_8_T5()
        {
            RunFile(@"S12.10_A1.8_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_9_T1()
        {
            RunFile(@"S12.10_A1.9_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_9_T2()
        {
            RunFile(@"S12.10_A1.9_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("The with statement adds a computed object to the front of the scope chain of the current execution context")]
        public void S12_10_A1_9_T3()
        {
            RunFile(@"S12.10_A1.9_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_1_T1()
        {
            RunFile(@"S12.10_A3.1_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_1_T2()
        {
            RunFile(@"S12.10_A3.1_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_1_T3()
        {
            RunFile(@"S12.10_A3.1_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_10_T1()
        {
            RunFile(@"S12.10_A3.10_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_10_T2()
        {
            RunFile(@"S12.10_A3.10_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_10_T3()
        {
            RunFile(@"S12.10_A3.10_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_10_T4()
        {
            RunFile(@"S12.10_A3.10_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_10_T5()
        {
            RunFile(@"S12.10_A3.10_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_11_T1()
        {
            RunFile(@"S12.10_A3.11_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_11_T2()
        {
            RunFile(@"S12.10_A3.11_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_11_T3()
        {
            RunFile(@"S12.10_A3.11_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_11_T4()
        {
            RunFile(@"S12.10_A3.11_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_11_T5()
        {
            RunFile(@"S12.10_A3.11_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_12_T1()
        {
            RunFile(@"S12.10_A3.12_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_12_T2()
        {
            RunFile(@"S12.10_A3.12_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_12_T3()
        {
            RunFile(@"S12.10_A3.12_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_12_T4()
        {
            RunFile(@"S12.10_A3.12_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_12_T5()
        {
            RunFile(@"S12.10_A3.12_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_2_T1()
        {
            RunFile(@"S12.10_A3.2_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_2_T2()
        {
            RunFile(@"S12.10_A3.2_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_2_T3()
        {
            RunFile(@"S12.10_A3.2_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_2_T4()
        {
            RunFile(@"S12.10_A3.2_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_2_T5()
        {
            RunFile(@"S12.10_A3.2_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_3_T1()
        {
            RunFile(@"S12.10_A3.3_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_3_T2()
        {
            RunFile(@"S12.10_A3.3_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_3_T3()
        {
            RunFile(@"S12.10_A3.3_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_3_T4()
        {
            RunFile(@"S12.10_A3.3_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_3_T5()
        {
            RunFile(@"S12.10_A3.3_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_4_T1()
        {
            RunFile(@"S12.10_A3.4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_4_T2()
        {
            RunFile(@"S12.10_A3.4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_4_T3()
        {
            RunFile(@"S12.10_A3.4_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_4_T4()
        {
            RunFile(@"S12.10_A3.4_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_4_T5()
        {
            RunFile(@"S12.10_A3.4_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_5_T1()
        {
            RunFile(@"S12.10_A3.5_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_5_T2()
        {
            RunFile(@"S12.10_A3.5_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_5_T3()
        {
            RunFile(@"S12.10_A3.5_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_5_T4()
        {
            RunFile(@"S12.10_A3.5_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_5_T5()
        {
            RunFile(@"S12.10_A3.5_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_6_T1()
        {
            RunFile(@"S12.10_A3.6_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_6_T2()
        {
            RunFile(@"S12.10_A3.6_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_6_T3()
        {
            RunFile(@"S12.10_A3.6_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_7_T1()
        {
            RunFile(@"S12.10_A3.7_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_7_T2()
        {
            RunFile(@"S12.10_A3.7_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_7_T3()
        {
            RunFile(@"S12.10_A3.7_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_7_T4()
        {
            RunFile(@"S12.10_A3.7_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_7_T5()
        {
            RunFile(@"S12.10_A3.7_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_8_T1()
        {
            RunFile(@"S12.10_A3.8_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_8_T2()
        {
            RunFile(@"S12.10_A3.8_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_8_T3()
        {
            RunFile(@"S12.10_A3.8_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_8_T4()
        {
            RunFile(@"S12.10_A3.8_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_8_T5()
        {
            RunFile(@"S12.10_A3.8_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_9_T1()
        {
            RunFile(@"S12.10_A3.9_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_9_T2()
        {
            RunFile(@"S12.10_A3.9_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("No matter how control leaves the embedded \'Statement\', the scope chain is always restored to its former state")]
        public void S12_10_A3_9_T3()
        {
            RunFile(@"S12.10_A3.9_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("Changing property using \"eval\" statement containing \"with\" statement")]
        public void S12_10_A4_T1()
        {
            RunFile(@"S12.10_A4_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("Changing property using \"eval\" statement containing \"with\" statement")]
        public void S12_10_A4_T2()
        {
            RunFile(@"S12.10_A4_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("Changing property using \"eval\" statement containing \"with\" statement")]
        public void S12_10_A4_T3()
        {
            RunFile(@"S12.10_A4_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("Changing property using \"eval\" statement containing \"with\" statement")]
        public void S12_10_A4_T4()
        {
            RunFile(@"S12.10_A4_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("Changing property using \"eval\" statement containing \"with\" statement")]
        public void S12_10_A4_T5()
        {
            RunFile(@"S12.10_A4_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("Changing property using \"eval\" statement containing \"with\" statement")]
        public void S12_10_A4_T6()
        {
            RunFile(@"S12.10_A4_T6.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("Deleting property using \"eval\" statement containing \"with\" statement")]
        public void S12_10_A5_T1()
        {
            RunFile(@"S12.10_A5_T1.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("Deleting property using \"eval\" statement containing \"with\" statement")]
        public void S12_10_A5_T2()
        {
            RunFile(@"S12.10_A5_T2.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("Deleting property using \"eval\" statement containing \"with\" statement")]
        public void S12_10_A5_T3()
        {
            RunFile(@"S12.10_A5_T3.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("Deleting property using \"eval\" statement containing \"with\" statement")]
        public void S12_10_A5_T4()
        {
            RunFile(@"S12.10_A5_T4.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("Deleting property using \"eval\" statement containing \"with\" statement")]
        public void S12_10_A5_T5()
        {
            RunFile(@"S12.10_A5_T5.js");
        }

        [TestMethod]
        [TestCategory("Sputnik Conformance")]
        [TestCategory("ECMA 12.10")]
        [Description("Deleting property using \"eval\" statement containing \"with\" statement")]
        public void S12_10_A5_T6()
        {
            RunFile(@"S12.10_A5_T6.js");
        }
    }
}